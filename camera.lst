MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Sat Sep 29 16:43:29 2007


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	TITLE:		camera.c                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	DATE:		1-Jan-2006                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\FRC\Fcode- 04-05-06\camera.c
                                           *				without permission. Thanks.                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           #include "serial_ports.h"                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           #include "camera.h"                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\FRC\Fcode- 04-05-06\camera.c
                                           // camera has successfully initialized and should be                             C:\FRC\Fcode- 04-05-06\camera.c
                                           // sending data. You can also force a re-initialization                          C:\FRC\Fcode- 04-05-06\camera.c
                                           // by setting this variable to zero by calling the                               C:\FRC\Fcode- 04-05-06\camera.c
                                           // function Reinitialize_Camera().                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           // camera T packet structure                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\FRC\Fcode- 04-05-06\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *					structure with the received tracking information.					                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
002f22   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\FRC\Fcode- 04-05-06\camera.c
002f24   ffe6                                                                                                               
002f26   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f28   ffd9                                                                                                               
002f2a   0e04     MOVLW     0x4                                                                                             
002f2c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           	unsigned char return_value;                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           	unsigned char byte_count;                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	unsigned char byte;                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           	unsigned char i;                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	// initialization process throws an error, retry                                C:\FRC\Fcode- 04-05-06\camera.c
                                           	// until it's successfully initializes                                          C:\FRC\Fcode- 04-05-06\camera.c
002f2e   0102     MOVLB     0x2            	if(camera_initialized == 0)                                                     C:\FRC\Fcode- 04-05-06\camera.c
002f30   516e     MOVF      0x6e,0x0,0x1                                                                                    
002f32   e10b     BNZ       0x2f4a                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
002f34   d8f0     RCALL     0x3116         		return_value = Initialize_Camera();                                            C:\FRC\Fcode- 04-05-06\camera.c
002f36   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		// is the camera done initializing and if so,                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           		// did it initialize without an error?                                         C:\FRC\Fcode- 04-05-06\camera.c
002f38   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\FRC\Fcode- 04-05-06\camera.c
002f3a   e104     BNZ       0x2f44                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
002f3c   0102     MOVLB     0x2            			camera_initialized = 1;                                                       C:\FRC\Fcode- 04-05-06\camera.c
002f3e   0e01     MOVLW     0x1                                                                                             
002f40   6f6e     MOVWF     0x6e,0x1                                                                                        
                                           			DEBUG(("\r\nCamera: Initialized normally\r\n"));                              C:\FRC\Fcode- 04-05-06\camera.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           		// is the camera done initializing and if so,                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           		// did it return an error?                                                     C:\FRC\Fcode- 04-05-06\camera.c
002f42   d003     BRA       0x2f4a         		else if(return_value > 1)                                                      C:\FRC\Fcode- 04-05-06\camera.c
002f44   50df     MOVF      0xdf,0x0,0x0                                                                                    
002f46   0801     SUBLW     0x1                                                                                             
002f48   e200     BC        0x2f4a                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			DEBUG(("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value)); C:\FRC\Fcode- 04-05-06\camera.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// find out how much data, if any, is present in                                C:\FRC\Fcode- 04-05-06\camera.c
                                           	// the camera serial port's received data queue?                                C:\FRC\Fcode- 04-05-06\camera.c
002f4a   dada     RCALL     0x3500         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\FRC\Fcode- 04-05-06\camera.c
002f4c   6ee7     MOVWF     0xe7,0x0                                                                                        
002f4e   0e01     MOVLW     0x1                                                                                             
002f50   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002f52   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// have we received any data?                                                   C:\FRC\Fcode- 04-05-06\camera.c
002f54   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\FRC\Fcode- 04-05-06\camera.c
002f56   0800     SUBLW     0x0                                                                                             
002f58   e217     BC        0x2f88                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\FRC\Fcode- 04-05-06\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\FRC\Fcode- 04-05-06\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\FRC\Fcode- 04-05-06\camera.c
                                           		// data packets                                                                C:\FRC\Fcode- 04-05-06\camera.c
002f5a   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\FRC\Fcode- 04-05-06\camera.c
002f5c   6adb     CLRF      0xdb,0x0                                                                                        
002f5e   0e01     MOVLW     0x1                                                                                             
002f60   50db     MOVF      0xdb,0x0,0x0                                                                                    
002f62   6ef3     MOVWF     0xf3,0x0                                                                                        
002f64   0e03     MOVLW     0x3                                                                                             
002f66   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002f68   fff4                                                                                                               
002f6a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002f6c   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
002f6e   e20c     BC        0x2f88                                                                                          
002f82   0e03     MOVLW     0x3                                                                                             
002f84   2adb     INCF      0xdb,0x1,0x0                                                                                    
002f86   d7eb     BRA       0x2f5e                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			// get the next data byte                                                     C:\FRC\Fcode- 04-05-06\camera.c
002f70   dacb     RCALL     0x3508         			byte = Read_Camera_Serial_Port();                                             C:\FRC\Fcode- 04-05-06\camera.c
002f72   6ee7     MOVWF     0xe7,0x0                                                                                        
002f74   0e02     MOVLW     0x2                                                                                             
002f76   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002f78   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           			// send the byte to the camera state machine                                  C:\FRC\Fcode- 04-05-06\camera.c
002f7a   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\FRC\Fcode- 04-05-06\camera.c
002f7c   ffe6                                                                                                               
002f7e   d80a     RCALL     0x2f94                                                                                          
002f80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
002f88   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
002f8a   ffe1                                                                                                               
002f8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f8e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f90   ffd9                                                                                                               
002f92   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					in the case of packets, the global data structure is                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *					updated with the new data.					                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
002f94   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\FRC\Fcode- 04-05-06\camera.c
002f96   ffe6                                                                                                               
002f98   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f9a   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char packet_char_count;                                         C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
002f9c   0102     MOVLB     0x2            	switch(state)                                                                   C:\FRC\Fcode- 04-05-06\camera.c
002f9e   5175     MOVF      0x75,0x0,0x1                                                                                    
002fa0   0a06     XORLW     0x6                                                                                             
002fa2   e101     BNZ       0x2fa6                                                                                          
002fa4   d08f     BRA       0x30c4                                                                                          
002fa6   0a03     XORLW     0x3                                                                                             
002fa8   e068     BZ        0x307a                                                                                          
002faa   0a06     XORLW     0x6                                                                                             
002fac   e034     BZ        0x3016                                                                                          
002fae   0a01     XORLW     0x1                                                                                             
002fb0   e025     BZ        0x2ffc                                                                                          
002fb2   0a03     XORLW     0x3                                                                                             
002fb4   e001     BZ        0x2fb8                                                                                          
002fb6   d0ab     BRA       0x310e                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
002fb8   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\FRC\Fcode- 04-05-06\camera.c
002fba   50db     MOVF      0xdb,0x0,0x0                                                                                    
002fbc   6e00     MOVWF     0x0,0x0                                                                                         
002fbe   6a01     CLRF      0x1,0x0                                                                                         
002fc0   0eff     MOVLW     0xff                                                                                            
002fc2   1800     XORWF     0x0,0x0,0x0                                                                                     
002fc4   e101     BNZ       0x2fc8                                                                                          
002fc6   5001     MOVF      0x1,0x0,0x0                                                                                     
002fc8   e103     BNZ       0x2fd0                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002fca   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\FRC\Fcode- 04-05-06\camera.c
002fcc   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002fce   d015     BRA       0x2ffa         			else if(byte == 'A') // start of an ACK?                                      C:\FRC\Fcode- 04-05-06\camera.c
002fd0   0efe     MOVLW     0xfe                                                                                            
002fd2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002fd4   0841     SUBLW     0x41                                                                                            
002fd6   e107     BNZ       0x2fe6                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002fd8   0101     MOVLB     0x1            				packet_char_count = 2;                                                       C:\FRC\Fcode- 04-05-06\camera.c
002fda   0e02     MOVLW     0x2                                                                                             
002fdc   6fec     MOVWF     0xec,0x1                                                                                        
002fde   0102     MOVLB     0x2            				state = RECEIVING_ACK;                                                       C:\FRC\Fcode- 04-05-06\camera.c
002fe0   0e05     MOVLW     0x5                                                                                             
002fe2   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002fe4   d00a     BRA       0x2ffa         			else if(byte == 'N') // start of a NCK?                                       C:\FRC\Fcode- 04-05-06\camera.c
002fe6   0efe     MOVLW     0xfe                                                                                            
002fe8   50db     MOVF      0xdb,0x0,0x0                                                                                    
002fea   084e     SUBLW     0x4e                                                                                            
002fec   e106     BNZ       0x2ffa                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002fee   0101     MOVLB     0x1            				packet_char_count = 2;                                                       C:\FRC\Fcode- 04-05-06\camera.c
002ff0   0e02     MOVLW     0x2                                                                                             
002ff2   6fec     MOVWF     0xec,0x1                                                                                        
002ff4   0102     MOVLB     0x2            				state = RECEIVING_NCK;                                                       C:\FRC\Fcode- 04-05-06\camera.c
002ff6   0e06     MOVLW     0x6                                                                                             
002ff8   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
002ffa   d089     BRA       0x310e         			break;                                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
002ffc   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\FRC\Fcode- 04-05-06\camera.c
002ffe   50db     MOVF      0xdb,0x0,0x0                                                                                    
003000   0854     SUBLW     0x54                                                                                            
003002   e106     BNZ       0x3010                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003004   0101     MOVLB     0x1            				packet_buffer_index = 0;                                                     C:\FRC\Fcode- 04-05-06\camera.c
003006   6beb     CLRF      0xeb,0x1                                                                                        
003008   0102     MOVLB     0x2            				state = RECEIVING_T_PACKET;                                                  C:\FRC\Fcode- 04-05-06\camera.c
00300a   0e03     MOVLW     0x3                                                                                             
00300c   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00300e   d002     BRA       0x3014         			else // unknown packet type; go back to the unsynchronized state              C:\FRC\Fcode- 04-05-06\camera.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003010   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FRC\Fcode- 04-05-06\camera.c
003012   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003014   d07c     BRA       0x310e         			break;                                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
003016   0101     MOVLB     0x1            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\FRC\Fcode- 04-05-06\camera.c
003018   51eb     MOVF      0xeb,0x0,0x1                                                                                    
00301a   6e00     MOVWF     0x0,0x0                                                                                         
00301c   6a01     CLRF      0x1,0x0                                                                                         
00301e   0e08     MOVLW     0x8                                                                                             
003020   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003022   0e00     MOVLW     0x0                                                                                             
003024   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003026   e20a     BC        0x303c                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           				// move packet character to our buffer                                       C:\FRC\Fcode- 04-05-06\camera.c
003028   51eb     MOVF      0xeb,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\FRC\Fcode- 04-05-06\camera.c
00302a   6aea     CLRF      0xea,0x0                                                                                        
00302c   0fc9     ADDLW     0xc9                                                                                            
00302e   6ee9     MOVWF     0xe9,0x0                                                                                        
003030   0e01     MOVLW     0x1                                                                                             
003032   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003034   0efe     MOVLW     0xfe                                                                                            
003036   cfdb     MOVFF     0xfdb,0xfef                                                                                     
003038   ffef                                                                                                               
00303a   2beb     INCF      0xeb,0x1,0x1   				packet_buffer_index++;                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           			                                                                              C:\FRC\Fcode- 04-05-06\camera.c
00303c   51eb     MOVF      0xeb,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\FRC\Fcode- 04-05-06\camera.c
00303e   6e00     MOVWF     0x0,0x0                                                                                         
003040   6a01     CLRF      0x1,0x0                                                                                         
003042   0e08     MOVLW     0x8                                                                                             
003044   1800     XORWF     0x0,0x0,0x0                                                                                     
003046   e101     BNZ       0x304a                                                                                          
003048   5001     MOVF      0x1,0x0,0x0                                                                                     
00304a   e116     BNZ       0x3078                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00304c   c1c9     MOVFF     0x1c9,0x1c1    				T_Packet_Data.mx = packet_buffer[0];                                         C:\FRC\Fcode- 04-05-06\camera.c
00304e   f1c1                                                                                                               
003050   c1ca     MOVFF     0x1ca,0x1c2    				T_Packet_Data.my = packet_buffer[1];                                         C:\FRC\Fcode- 04-05-06\camera.c
003052   f1c2                                                                                                               
003054   c1cb     MOVFF     0x1cb,0x1c3    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\FRC\Fcode- 04-05-06\camera.c
003056   f1c3                                                                                                               
003058   c1cc     MOVFF     0x1cc,0x1c4    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\FRC\Fcode- 04-05-06\camera.c
00305a   f1c4                                                                                                               
00305c   c1cd     MOVFF     0x1cd,0x1c5    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\FRC\Fcode- 04-05-06\camera.c
00305e   f1c5                                                                                                               
003060   c1ce     MOVFF     0x1ce,0x1c6    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\FRC\Fcode- 04-05-06\camera.c
003062   f1c6                                                                                                               
003064   c1cf     MOVFF     0x1cf,0x1c7    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\FRC\Fcode- 04-05-06\camera.c
003066   f1c7                                                                                                               
003068   c1d0     MOVFF     0x1d0,0x1c8    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\FRC\Fcode- 04-05-06\camera.c
00306a   f1c8                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
00306c   0102     MOVLB     0x2            				camera_t_packets++;                                                          C:\FRC\Fcode- 04-05-06\camera.c
00306e   2b6f     INCF      0x6f,0x1,0x1                                                                                    
003070   0e00     MOVLW     0x0                                                                                             
003072   2370     ADDWFC    0x70,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
003074   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\FRC\Fcode- 04-05-06\camera.c
003076   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003078   d04a     BRA       0x310e         			break;                                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		case RECEIVING_ACK:                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
00307a   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\FRC\Fcode- 04-05-06\camera.c
00307c   0101     MOVLB     0x1                                                                                             
00307e   5dec     SUBWF     0xec,0x0,0x1                                                                                    
003080   e106     BNZ       0x308e                                                                                          
003082   0efe     MOVLW     0xfe                                                                                            
003084   50db     MOVF      0xdb,0x0,0x0                                                                                    
003086   0843     SUBLW     0x43                                                                                            
003088   e102     BNZ       0x308e                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00308a   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00308c   d01a     BRA       0x30c2         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\FRC\Fcode- 04-05-06\camera.c
00308e   0e03     MOVLW     0x3                                                                                             
003090   5dec     SUBWF     0xec,0x0,0x1                                                                                    
003092   e106     BNZ       0x30a0                                                                                          
003094   0efe     MOVLW     0xfe                                                                                            
003096   50db     MOVF      0xdb,0x0,0x0                                                                                    
003098   084b     SUBLW     0x4b                                                                                            
00309a   e102     BNZ       0x30a0                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00309c   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00309e   d011     BRA       0x30c2         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\FRC\Fcode- 04-05-06\camera.c
0030a0   0e04     MOVLW     0x4                                                                                             
0030a2   5dec     SUBWF     0xec,0x0,0x1                                                                                    
0030a4   e10b     BNZ       0x30bc                                                                                          
0030a6   0efe     MOVLW     0xfe                                                                                            
0030a8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030aa   080d     SUBLW     0xd                                                                                             
0030ac   e107     BNZ       0x30bc                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030ae   0102     MOVLB     0x2            				camera_acks++;                                                               C:\FRC\Fcode- 04-05-06\camera.c
0030b0   2b71     INCF      0x71,0x1,0x1                                                                                    
0030b2   0e00     MOVLW     0x0                                                                                             
0030b4   2372     ADDWFC    0x72,0x1,0x1                                                                                    
0030b6   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FRC\Fcode- 04-05-06\camera.c
0030b8   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030ba   d003     BRA       0x30c2         			else                                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030bc   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\FRC\Fcode- 04-05-06\camera.c
0030be   0e01     MOVLW     0x1                                                                                             
0030c0   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030c2   d025     BRA       0x310e         			break;                                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		case RECEIVING_NCK:                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
0030c4   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\FRC\Fcode- 04-05-06\camera.c
0030c6   0101     MOVLB     0x1                                                                                             
0030c8   5dec     SUBWF     0xec,0x0,0x1                                                                                    
0030ca   e106     BNZ       0x30d8                                                                                          
0030cc   0efe     MOVLW     0xfe                                                                                            
0030ce   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030d0   0843     SUBLW     0x43                                                                                            
0030d2   e102     BNZ       0x30d8                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030d4   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030d6   d01a     BRA       0x310c         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\FRC\Fcode- 04-05-06\camera.c
0030d8   0e03     MOVLW     0x3                                                                                             
0030da   5dec     SUBWF     0xec,0x0,0x1                                                                                    
0030dc   e106     BNZ       0x30ea                                                                                          
0030de   0efe     MOVLW     0xfe                                                                                            
0030e0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030e2   084b     SUBLW     0x4b                                                                                            
0030e4   e102     BNZ       0x30ea                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030e6   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030e8   d011     BRA       0x310c         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\FRC\Fcode- 04-05-06\camera.c
0030ea   0e04     MOVLW     0x4                                                                                             
0030ec   5dec     SUBWF     0xec,0x0,0x1                                                                                    
0030ee   e10b     BNZ       0x3106                                                                                          
0030f0   0efe     MOVLW     0xfe                                                                                            
0030f2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030f4   080d     SUBLW     0xd                                                                                             
0030f6   e107     BNZ       0x3106                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
0030f8   0102     MOVLB     0x2            				camera_ncks++;                                                               C:\FRC\Fcode- 04-05-06\camera.c
0030fa   2b73     INCF      0x73,0x1,0x1                                                                                    
0030fc   0e00     MOVLW     0x0                                                                                             
0030fe   2374     ADDWFC    0x74,0x1,0x1                                                                                    
003100   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FRC\Fcode- 04-05-06\camera.c
003102   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003104   d003     BRA       0x310c         			else                                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\camera.c
003106   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\FRC\Fcode- 04-05-06\camera.c
003108   0e01     MOVLW     0x1                                                                                             
00310a   6f75     MOVWF     0x75,0x1                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\camera.c
00310c   d000     BRA       0x310e         			break;	                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
00310e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
003110   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003112   ffd9                                                                                                               
003114   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *					camera.                                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					1: Initialization has completed.                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *					the time allowed. The returned value is the value                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					parameter found in camera.h.					                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\FRC\Fcode- 04-05-06\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *					camera.                                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *					                                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
003116   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\FRC\Fcode- 04-05-06\camera.c
003118   ffe6                                                                                                               
00311a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00311c   ffd9                                                                                                               
00311e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char state;                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned int loop_count;                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           	static unsigned char return_value;                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	unsigned char returned_value;                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\FRC\Fcode- 04-05-06\camera.c
003120   0102     MOVLB     0x2            	if(boot_initialization_flag == 1)                                               C:\FRC\Fcode- 04-05-06\camera.c
003122   0576     DECF      0x76,0x0,0x1                                                                                    
003124   e107     BNZ       0x3134                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           		// get the camera's attention                                                  C:\FRC\Fcode- 04-05-06\camera.c
003126   d98b     RCALL     0x343e         		Camera_Idle();                                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           		// set the command & packet transfer mode                                      C:\FRC\Fcode- 04-05-06\camera.c
003128   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\FRC\Fcode- 04-05-06\camera.c
00312a   6ee6     MOVWF     0xe6,0x0                                                                                        
00312c   d994     RCALL     0x3456                                                                                          
00312e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\FRC\Fcode- 04-05-06\camera.c
003130   0102     MOVLB     0x2            		boot_initialization_flag = 0;                                                  C:\FRC\Fcode- 04-05-06\camera.c
003132   6b76     CLRF      0x76,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\FRC\Fcode- 04-05-06\camera.c
003134   0577     DECF      0x77,0x0,0x1   	if(initialize_flag == 1)                                                        C:\FRC\Fcode- 04-05-06\camera.c
003136   e10d     BNZ       0x3152                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
003138   6b77     CLRF      0x77,0x1       		initialize_flag = 0;                                                           C:\FRC\Fcode- 04-05-06\camera.c
00313a   0101     MOVLB     0x1            		wait_for_ack = 0;                                                              C:\FRC\Fcode- 04-05-06\camera.c
00313c   6bee     CLRF      0xee,0x1                                                                                        
00313e   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\FRC\Fcode- 04-05-06\camera.c
003140   6fed     MOVWF     0xed,0x1                                                                                        
003142   6bef     CLRF      0xef,0x1       		loop_count = 0;                                                                C:\FRC\Fcode- 04-05-06\camera.c
003144   6bf0     CLRF      0xf0,0x1                                                                                        
003146   6bf1     CLRF      0xf1,0x1       		return_value = 0;                                                              C:\FRC\Fcode- 04-05-06\camera.c
003148   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\FRC\Fcode- 04-05-06\camera.c
00314a   6b71     CLRF      0x71,0x1                                                                                        
00314c   6b72     CLRF      0x72,0x1                                                                                        
00314e   6b73     CLRF      0x73,0x1       		camera_ncks = 0;                                                               C:\FRC\Fcode- 04-05-06\camera.c
003150   6b74     CLRF      0x74,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\FRC\Fcode- 04-05-06\camera.c
003152   0101     MOVLB     0x1            	if(wait_for_ack == 1)                                                           C:\FRC\Fcode- 04-05-06\camera.c
003154   05ee     DECF      0xee,0x0,0x1                                                                                    
003156   e129     BNZ       0x31aa                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
003158   0102     MOVLB     0x2            		if(camera_acks >= 1) // got ACK?                                               C:\FRC\Fcode- 04-05-06\camera.c
00315a   0e01     MOVLW     0x1                                                                                             
00315c   5d71     SUBWF     0x71,0x0,0x1                                                                                    
00315e   0e00     MOVLW     0x0                                                                                             
003160   5972     SUBWFB    0x72,0x0,0x1                                                                                    
003162   e305     BNC       0x316e                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\FRC\Fcode- 04-05-06\camera.c
003164   0101     MOVLB     0x1            			wait_for_ack = 0;                                                             C:\FRC\Fcode- 04-05-06\camera.c
003166   6bee     CLRF      0xee,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           			// reset the loop counter                                                     C:\FRC\Fcode- 04-05-06\camera.c
003168   6bef     CLRF      0xef,0x1       			loop_count = 0;                                                               C:\FRC\Fcode- 04-05-06\camera.c
00316a   6bf0     CLRF      0xf0,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
00316c   d01d     BRA       0x31a8         		else if(camera_ncks >= 1) // got NCK?                                          C:\FRC\Fcode- 04-05-06\camera.c
00316e   0e01     MOVLW     0x1                                                                                             
003170   5d73     SUBWF     0x73,0x0,0x1                                                                                    
003172   0e00     MOVLW     0x0                                                                                             
003174   5974     SUBWFB    0x74,0x0,0x1                                                                                    
003176   e304     BNC       0x3180                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			// return with a value that signals an error happened                         C:\FRC\Fcode- 04-05-06\camera.c
003178   0101     MOVLB     0x1            			return_value = state - 1;                                                     C:\FRC\Fcode- 04-05-06\camera.c
00317a   05ed     DECF      0xed,0x0,0x1                                                                                    
00317c   6ff1     MOVWF     0xf1,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
00317e   d014     BRA       0x31a8         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\FRC\Fcode- 04-05-06\camera.c
003180   0101     MOVLB     0x1                                                                                             
003182   0e0a     MOVLW     0xa                                                                                             
003184   5def     SUBWF     0xef,0x0,0x1                                                                                    
003186   0e00     MOVLW     0x0                                                                                             
003188   59f0     SUBWFB    0xf0,0x0,0x1                                                                                    
00318a   e30b     BNC       0x31a2                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			// return with a value that signals an error happened                         C:\FRC\Fcode- 04-05-06\camera.c
00318c   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\FRC\Fcode- 04-05-06\camera.c
00318e   25ed     ADDWF     0xed,0x0,0x1                                                                                    
003190   6e00     MOVWF     0x0,0x0                                                                                         
003192   6a01     CLRF      0x1,0x0                                                                                         
003194   0e00     MOVLW     0x0                                                                                             
003196   2201     ADDWFC    0x1,0x1,0x0                                                                                     
003198   0600     DECF      0x0,0x1,0x0                                                                                     
00319a   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00319c   c000     MOVFF     0x0,0x1f1                                                                                       
00319e   f1f1                                                                                                               
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
0031a0   d003     BRA       0x31a8         		else                                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\FRC\Fcode- 04-05-06\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\FRC\Fcode- 04-05-06\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\FRC\Fcode- 04-05-06\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\FRC\Fcode- 04-05-06\camera.c
0031a2   2bef     INCF      0xef,0x1,0x1   			loop_count++;                                                                 C:\FRC\Fcode- 04-05-06\camera.c
0031a4   0e00     MOVLW     0x0                                                                                             
0031a6   23f0     ADDWFC    0xf0,0x1,0x1                                                                                    
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
0031a8   d10a     BRA       0x33be         	else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\FRC\Fcode- 04-05-06\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\FRC\Fcode- 04-05-06\camera.c
                                           		DEBUG(("Camera: Initialization state = %u\r\n", (unsigned int)state));         C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\FRC\Fcode- 04-05-06\camera.c
0031aa   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\FRC\Fcode- 04-05-06\camera.c
0031ac   6b71     CLRF      0x71,0x1                                                                                        
0031ae   6b72     CLRF      0x72,0x1                                                                                        
0031b0   6b73     CLRF      0x73,0x1       		camera_ncks = 0;                                                               C:\FRC\Fcode- 04-05-06\camera.c
0031b2   6b74     CLRF      0x74,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
0031b4   0101     MOVLB     0x1            		switch(state)                                                                  C:\FRC\Fcode- 04-05-06\camera.c
0031b6   51ed     MOVF      0xed,0x0,0x1                                                                                    
0031b8   0a12     XORLW     0x12                                                                                            
0031ba   e101     BNZ       0x31be                                                                                          
0031bc   d0fd     BRA       0x33b8                                                                                          
0031be   0a03     XORLW     0x3                                                                                             
0031c0   e101     BNZ       0x31c4                                                                                          
0031c2   d0e3     BRA       0x338a                                                                                          
0031c4   0a01     XORLW     0x1                                                                                             
0031c6   e101     BNZ       0x31ca                                                                                          
0031c8   d0d6     BRA       0x3376                                                                                          
0031ca   0a1f     XORLW     0x1f                                                                                            
0031cc   e101     BNZ       0x31d0                                                                                          
0031ce   d0c6     BRA       0x335c                                                                                          
0031d0   0a01     XORLW     0x1                                                                                             
0031d2   e101     BNZ       0x31d6                                                                                          
0031d4   d0b6     BRA       0x3342                                                                                          
0031d6   0a03     XORLW     0x3                                                                                             
0031d8   e101     BNZ       0x31dc                                                                                          
0031da   d0a6     BRA       0x3328                                                                                          
0031dc   0a01     XORLW     0x1                                                                                             
0031de   e101     BNZ       0x31e2                                                                                          
0031e0   d096     BRA       0x330e                                                                                          
0031e2   0a07     XORLW     0x7                                                                                             
0031e4   e101     BNZ       0x31e8                                                                                          
0031e6   d086     BRA       0x32f4                                                                                          
0031e8   0a01     XORLW     0x1                                                                                             
0031ea   e101     BNZ       0x31ee                                                                                          
0031ec   d078     BRA       0x32de                                                                                          
0031ee   0a03     XORLW     0x3                                                                                             
0031f0   e069     BZ        0x32c4                                                                                          
0031f2   0a01     XORLW     0x1                                                                                             
0031f4   e05a     BZ        0x32aa                                                                                          
0031f6   0a0f     XORLW     0xf                                                                                             
0031f8   e04b     BZ        0x3290                                                                                          
0031fa   0a01     XORLW     0x1                                                                                             
0031fc   e03c     BZ        0x3276                                                                                          
0031fe   0a03     XORLW     0x3                                                                                             
003200   e02d     BZ        0x325c                                                                                          
003202   0a01     XORLW     0x1                                                                                             
003204   e01e     BZ        0x3242                                                                                          
003206   0a07     XORLW     0x7                                                                                             
003208   e00f     BZ        0x3228                                                                                          
00320a   0a01     XORLW     0x1                                                                                             
00320c   e009     BZ        0x3220                                                                                          
00320e   0a03     XORLW     0x3                                                                                             
003210   e001     BZ        0x3214                                                                                          
003212   d0d5     BRA       0x33be                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_ONE:                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           				// get the camera's attention                                                C:\FRC\Fcode- 04-05-06\camera.c
003214   d914     RCALL     0x343e         				Camera_Idle();                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003216   0101     MOVLB     0x1            				state = STATE_TWO;                                                           C:\FRC\Fcode- 04-05-06\camera.c
003218   0e02     MOVLW     0x2                                                                                             
00321a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\FRC\Fcode- 04-05-06\camera.c
00321c   6bee     CLRF      0xee,0x1       				wait_for_ack = 0;                                                            C:\FRC\Fcode- 04-05-06\camera.c
00321e   d0cf     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_TWO:                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003220   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\FRC\Fcode- 04-05-06\camera.c
003222   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\FRC\Fcode- 04-05-06\camera.c
003224   6bee     CLRF      0xee,0x1       				wait_for_ack = 0;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003226   d0cb     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_THREE:                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Common Control I register                                  C:\FRC\Fcode- 04-05-06\camera.c
003228   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
00322a   6ee6     MOVWF     0xe6,0x0                                                                                        
00322c   0e29     MOVLW     0x29                                                                                            
00322e   6ee6     MOVWF     0xe6,0x0                                                                                        
003230   d949     RCALL     0x34c4                                                                                          
003232   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003234   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003236   0101     MOVLB     0x1            				state = STATE_FOUR;                                                          C:\FRC\Fcode- 04-05-06\camera.c
003238   0e04     MOVLW     0x4                                                                                             
00323a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
00323c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
00323e   6fee     MOVWF     0xee,0x1                                                                                        
003240   d0be     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_FOUR:                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Common Control B register                                  C:\FRC\Fcode- 04-05-06\camera.c
003242   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
003244   6ee6     MOVWF     0xe6,0x0                                                                                        
003246   0e13     MOVLW     0x13                                                                                            
003248   6ee6     MOVWF     0xe6,0x0                                                                                        
00324a   d93c     RCALL     0x34c4                                                                                          
00324c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00324e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003250   0101     MOVLB     0x1            				state = STATE_FIVE;                                                          C:\FRC\Fcode- 04-05-06\camera.c
003252   0e05     MOVLW     0x5                                                                                             
003254   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003256   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003258   6fee     MOVWF     0xee,0x1                                                                                        
00325a   d0b1     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_FIVE:                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\FRC\Fcode- 04-05-06\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\FRC\Fcode- 04-05-06\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\FRC\Fcode- 04-05-06\camera.c
00325c   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
00325e   6ee6     MOVWF     0xe6,0x0                                                                                        
003260   0e2d     MOVLW     0x2d                                                                                            
003262   6ee6     MOVWF     0xe6,0x0                                                                                        
003264   d92f     RCALL     0x34c4                                                                                          
003266   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003268   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
00326a   0101     MOVLB     0x1            				state = STATE_SIX;                                                           C:\FRC\Fcode- 04-05-06\camera.c
00326c   0e06     MOVLW     0x6                                                                                             
00326e   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003270   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003272   6fee     MOVWF     0xee,0x1                                                                                        
003274   d0a4     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_SIX:                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\FRC\Fcode- 04-05-06\camera.c
003276   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
003278   6ee6     MOVWF     0xe6,0x0                                                                                        
00327a   0e2a     MOVLW     0x2a                                                                                            
00327c   6ee6     MOVWF     0xe6,0x0                                                                                        
00327e   d922     RCALL     0x34c4                                                                                          
003280   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003282   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003284   0101     MOVLB     0x1            				state = STATE_SEVEN;                                                         C:\FRC\Fcode- 04-05-06\camera.c
003286   0e07     MOVLW     0x7                                                                                             
003288   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
00328a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
00328c   6fee     MOVWF     0xee,0x1                                                                                        
00328e   d097     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_SEVEN:                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\FRC\Fcode- 04-05-06\camera.c
003290   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
003292   6ee6     MOVWF     0xe6,0x0                                                                                        
003294   0e2b     MOVLW     0x2b                                                                                            
003296   6ee6     MOVWF     0xe6,0x0                                                                                        
003298   d915     RCALL     0x34c4                                                                                          
00329a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00329c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
00329e   0101     MOVLB     0x1            				state = STATE_EIGHT;                                                         C:\FRC\Fcode- 04-05-06\camera.c
0032a0   0e08     MOVLW     0x8                                                                                             
0032a2   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
0032a4   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0032a6   6fee     MOVWF     0xee,0x1                                                                                        
0032a8   d08a     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_EIGHT:                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Common Control J register                                  C:\FRC\Fcode- 04-05-06\camera.c
0032aa   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
0032ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0032ae   0e2d     MOVLW     0x2d                                                                                            
0032b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0032b2   d908     RCALL     0x34c4                                                                                          
0032b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
0032b8   0101     MOVLB     0x1            				state = STATE_NINE;                                                          C:\FRC\Fcode- 04-05-06\camera.c
0032ba   0e09     MOVLW     0x9                                                                                             
0032bc   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
0032be   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0032c0   6fee     MOVWF     0xee,0x1                                                                                        
0032c2   d07d     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_NINE:                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Common Control A register                                  C:\FRC\Fcode- 04-05-06\camera.c
0032c4   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\FRC\Fcode- 04-05-06\camera.c
0032c6   6ee6     MOVWF     0xe6,0x0                                                                                        
0032c8   0e12     MOVLW     0x12                                                                                            
0032ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0032cc   d8fb     RCALL     0x34c4                                                                                          
0032ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
0032d2   0101     MOVLB     0x1            				state = STATE_TEN;                                                           C:\FRC\Fcode- 04-05-06\camera.c
0032d4   0e0a     MOVLW     0xa                                                                                             
0032d6   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
0032d8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0032da   6fee     MOVWF     0xee,0x1                                                                                        
0032dc   d070     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_TEN:                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\FRC\Fcode- 04-05-06\camera.c
0032de   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
0032e0   6ae6     CLRF      0xe6,0x0                                                                                        
0032e2   d8f0     RCALL     0x34c4                                                                                          
0032e4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
0032e8   0101     MOVLB     0x1            				state = STATE_ELEVEN;                                                        C:\FRC\Fcode- 04-05-06\camera.c
0032ea   0e0b     MOVLW     0xb                                                                                             
0032ec   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
0032ee   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0032f0   6fee     MOVWF     0xee,0x1                                                                                        
0032f2   d065     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_ELEVEN:                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\FRC\Fcode- 04-05-06\camera.c
0032f4   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
0032f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0032f8   0e01     MOVLW     0x1                                                                                             
0032fa   6ee6     MOVWF     0xe6,0x0                                                                                        
0032fc   d8e3     RCALL     0x34c4                                                                                          
0032fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003300   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003302   0101     MOVLB     0x1            				state = STATE_TWELVE;                                                        C:\FRC\Fcode- 04-05-06\camera.c
003304   0e0c     MOVLW     0xc                                                                                             
003306   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003308   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
00330a   6fee     MOVWF     0xee,0x1                                                                                        
00330c   d058     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_TWELVE:                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Red Gain Control register                                  C:\FRC\Fcode- 04-05-06\camera.c
00330e   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
003310   6ee6     MOVWF     0xe6,0x0                                                                                        
003312   0e02     MOVLW     0x2                                                                                             
003314   6ee6     MOVWF     0xe6,0x0                                                                                        
003316   d8d6     RCALL     0x34c4                                                                                          
003318   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00331a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
00331c   0101     MOVLB     0x1            				state = STATE_THIRTEEN;                                                      C:\FRC\Fcode- 04-05-06\camera.c
00331e   0e0d     MOVLW     0xd                                                                                             
003320   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003322   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003324   6fee     MOVWF     0xee,0x1                                                                                        
003326   d04b     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Saturation Control register                                C:\FRC\Fcode- 04-05-06\camera.c
003328   0e76     MOVLW     0x76           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
00332a   6ee6     MOVWF     0xe6,0x0                                                                                        
00332c   0e03     MOVLW     0x3                                                                                             
00332e   6ee6     MOVWF     0xe6,0x0                                                                                        
003330   d8c9     RCALL     0x34c4                                                                                          
003332   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003334   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003336   0101     MOVLB     0x1            				state = STATE_FOURTEEN;                                                      C:\FRC\Fcode- 04-05-06\camera.c
003338   0e0e     MOVLW     0xe                                                                                             
00333a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
00333c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
00333e   6fee     MOVWF     0xee,0x1                                                                                        
003340   d03e     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Brightness Control register                                C:\FRC\Fcode- 04-05-06\camera.c
003342   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
003344   6ee6     MOVWF     0xe6,0x0                                                                                        
003346   0e06     MOVLW     0x6                                                                                             
003348   6ee6     MOVWF     0xe6,0x0                                                                                        
00334a   d8bc     RCALL     0x34c4                                                                                          
00334c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00334e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
003350   0101     MOVLB     0x1            				state = STATE_FIFTEEN;                                                       C:\FRC\Fcode- 04-05-06\camera.c
003352   0e0f     MOVLW     0xf                                                                                             
003354   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003356   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003358   6fee     MOVWF     0xee,0x1                                                                                        
00335a   d031     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\FRC\Fcode- 04-05-06\camera.c
00335c   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\FRC\Fcode- 04-05-06\camera.c
00335e   6ee6     MOVWF     0xe6,0x0                                                                                        
003360   0e10     MOVLW     0x10                                                                                            
003362   6ee6     MOVWF     0xe6,0x0                                                                                        
003364   d8af     RCALL     0x34c4                                                                                          
003366   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003368   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
00336a   0101     MOVLB     0x1            				state = STATE_SIXTEEN;                                                       C:\FRC\Fcode- 04-05-06\camera.c
00336c   0e10     MOVLW     0x10                                                                                            
00336e   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003370   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003372   6fee     MOVWF     0xee,0x1                                                                                        
003374   d024     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           				// initialize the Noise Filter value                                         C:\FRC\Fcode- 04-05-06\camera.c
003376   0e01     MOVLW     0x1            				Noise_Filter(NF_DEFAULT);                                                    C:\FRC\Fcode- 04-05-06\camera.c
003378   6ee6     MOVWF     0xe6,0x0                                                                                        
00337a   d88b     RCALL     0x3492                                                                                          
00337c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
00337e   0101     MOVLB     0x1            				state = STATE_SEVENTEEN;                                                     C:\FRC\Fcode- 04-05-06\camera.c
003380   0e11     MOVLW     0x11                                                                                            
003382   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
003384   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
003386   6fee     MOVWF     0xee,0x1                                                                                        
003388   d01a     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           				// send the TC or Track Color command                                        C:\FRC\Fcode- 04-05-06\camera.c
00339a   0e71     MOVLW     0x71           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\FRC\Fcode- 04-05-06\camera.c
00339c   6ee6     MOVWF     0xe6,0x0                                                                                        
00339e   0e5d     MOVLW     0x5d                                                                                            
0033a0   6ee6     MOVWF     0xe6,0x0                                                                                        
003392   0e1a     MOVLW     0x1a           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\FRC\Fcode- 04-05-06\camera.c
003394   6ee6     MOVWF     0xe6,0x0                                                                                        
003396   0e0f     MOVLW     0xf                                                                                             
003398   6ee6     MOVWF     0xe6,0x0                                                                                        
00338a   0e83     MOVLW     0x83           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\FRC\Fcode- 04-05-06\camera.c
00338c   6ee6     MOVWF     0xe6,0x0                                                                                        
00338e   0e6f     MOVLW     0x6f                                                                                            
003390   6ee6     MOVWF     0xe6,0x0                                                                                        
0033a2   d81b     RCALL     0x33da                                                                                          
0033a4   6ef5     MOVWF     0xf5,0x0                                                                                        
0033a6   0e06     MOVLW     0x6                                                                                             
0033a8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0033aa   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\FRC\Fcode- 04-05-06\camera.c
0033ac   0101     MOVLB     0x1            				state = STATE_EIGHTEEN;                                                      C:\FRC\Fcode- 04-05-06\camera.c
0033ae   0e12     MOVLW     0x12                                                                                            
0033b0   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FRC\Fcode- 04-05-06\camera.c
0033b2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0033b4   6fee     MOVWF     0xee,0x1                                                                                        
0033b6   d003     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           				// signal that we're done                                                    C:\FRC\Fcode- 04-05-06\camera.c
0033b8   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\FRC\Fcode- 04-05-06\camera.c
0033ba   6ff1     MOVWF     0xf1,0x1                                                                                        
0033bc   d000     BRA       0x33be         				break;                                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	// If we're returning from this function with a value greater                   C:\FRC\Fcode- 04-05-06\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\FRC\Fcode- 04-05-06\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\FRC\Fcode- 04-05-06\camera.c
                                           	// the state machine if this function is called again.                          C:\FRC\Fcode- 04-05-06\camera.c
0033be   51f1     MOVF      0xf1,0x0,0x1   	if(return_value > 0)                                                            C:\FRC\Fcode- 04-05-06\camera.c
0033c0   0800     SUBLW     0x0                                                                                             
0033c2   e203     BC        0x33ca                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\camera.c
0033c4   0102     MOVLB     0x2            		initialize_flag = 1;                                                           C:\FRC\Fcode- 04-05-06\camera.c
0033c6   0e01     MOVLW     0x1                                                                                             
0033c8   6f77     MOVWF     0x77,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
0033ca   0101     MOVLB     0x1            	return(return_value);	                                                          C:\FRC\Fcode- 04-05-06\camera.c
0033cc   51f1     MOVF      0xf1,0x0,0x1                                                                                    
0033ce   d000     BRA       0x33d0                                                                                          
0033d0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
0033d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033d4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0033d6   ffd9                                                                                                               
0033d8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					to the camera.		                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\FRC\Fcode- 04-05-06\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
0033da   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\FRC\Fcode- 04-05-06\camera.c
0033dc   ffe6                                                                                                               
0033de   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0033e0   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
0033e2   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\FRC\Fcode- 04-05-06\camera.c
0033e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0033e6   d894     RCALL     0x3510                                                                                          
0033e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033ea   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\FRC\Fcode- 04-05-06\camera.c
0033ec   6ee6     MOVWF     0xe6,0x0                                                                                        
0033ee   d890     RCALL     0x3510                                                                                          
0033f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033f2   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\FRC\Fcode- 04-05-06\camera.c
0033f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0033f6   d88c     RCALL     0x3510                                                                                          
0033f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033fa   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\FRC\Fcode- 04-05-06\camera.c
0033fc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0033fe   ffe6                                                                                                               
003400   d887     RCALL     0x3510                                                                                          
003402   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003404   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\FRC\Fcode- 04-05-06\camera.c
003406   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003408   ffe6                                                                                                               
00340a   d882     RCALL     0x3510                                                                                          
00340c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00340e   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\FRC\Fcode- 04-05-06\camera.c
003410   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003412   ffe6                                                                                                               
003414   d87d     RCALL     0x3510                                                                                          
003416   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003418   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\FRC\Fcode- 04-05-06\camera.c
00341a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00341c   ffe6                                                                                                               
00341e   d878     RCALL     0x3510                                                                                          
003420   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003422   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\FRC\Fcode- 04-05-06\camera.c
003424   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003426   ffe6                                                                                                               
003428   d873     RCALL     0x3510                                                                                          
00342a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00342c   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\FRC\Fcode- 04-05-06\camera.c
00342e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003430   ffe6                                                                                                               
003432   d86e     RCALL     0x3510                                                                                          
003434   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003436   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
003438   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00343a   ffd9                                                                                                               
00343c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           void Camera_Idle(void)                                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
00343e   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\FRC\Fcode- 04-05-06\camera.c
003440   6ee6     MOVWF     0xe6,0x0                                                                                        
003442   d866     RCALL     0x3510                                                                                          
003444   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003446   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           void Restart_Camera(void)                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
003448   0102     MOVLB     0x2            	camera_initialized = 0;                                                         C:\FRC\Fcode- 04-05-06\camera.c
00344a   6b6e     CLRF      0x6e,0x1                                                                                        
00344c   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		                                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
00344e   0102     MOVLB     0x2            	return(camera_initialized);                                                     C:\FRC\Fcode- 04-05-06\camera.c
003450   516e     MOVF      0x6e,0x0,0x1                                                                                    
003452   d000     BRA       0x3454                                                                                          
003454   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\FRC\Fcode- 04-05-06\camera.c
                                           *					to the camera. 		                                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\FRC\Fcode- 04-05-06\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *					are not suppressed.                                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
003456   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\FRC\Fcode- 04-05-06\camera.c
003458   ffe6                                                                                                               
00345a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00345c   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
00345e   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\FRC\Fcode- 04-05-06\camera.c
003460   6ee6     MOVWF     0xe6,0x0                                                                                        
003462   d856     RCALL     0x3510                                                                                          
003464   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003466   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\FRC\Fcode- 04-05-06\camera.c
003468   6ee6     MOVWF     0xe6,0x0                                                                                        
00346a   d852     RCALL     0x3510                                                                                          
00346c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00346e   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\FRC\Fcode- 04-05-06\camera.c
003470   6ee6     MOVWF     0xe6,0x0                                                                                        
003472   d84e     RCALL     0x3510                                                                                          
003474   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003476   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\FRC\Fcode- 04-05-06\camera.c
003478   50db     MOVF      0xdb,0x0,0x0                                                                                    
00347a   0f30     ADDLW     0x30                                                                                            
00347c   6ee6     MOVWF     0xe6,0x0                                                                                        
00347e   d848     RCALL     0x3510                                                                                          
003480   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003482   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\FRC\Fcode- 04-05-06\camera.c
003484   6ee6     MOVWF     0xe6,0x0                                                                                        
003486   d844     RCALL     0x3510                                                                                          
003488   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00348a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
00348c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00348e   ffd9                                                                                                               
003490   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					command to the camera.                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
003492   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\FRC\Fcode- 04-05-06\camera.c
003494   ffe6                                                                                                               
003496   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003498   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
00349a   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\FRC\Fcode- 04-05-06\camera.c
00349c   6ee6     MOVWF     0xe6,0x0                                                                                        
00349e   d838     RCALL     0x3510                                                                                          
0034a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034a2   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\FRC\Fcode- 04-05-06\camera.c
0034a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0034a6   d834     RCALL     0x3510                                                                                          
0034a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034aa   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\FRC\Fcode- 04-05-06\camera.c
0034ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0034ae   d830     RCALL     0x3510                                                                                          
0034b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034b2   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\FRC\Fcode- 04-05-06\camera.c
0034b4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0034b6   ffe6                                                                                                               
0034b8   d82b     RCALL     0x3510                                                                                          
0034ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034bc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
0034be   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0034c0   ffd9                                                                                                               
0034c2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\FRC\Fcode- 04-05-06\camera.c
                                           *					to the camera.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
0034c4   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\FRC\Fcode- 04-05-06\camera.c
0034c6   ffe6                                                                                                               
0034c8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0034ca   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
0034cc   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\FRC\Fcode- 04-05-06\camera.c
0034ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0034d0   d81f     RCALL     0x3510                                                                                          
0034d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034d4   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\FRC\Fcode- 04-05-06\camera.c
0034d6   6ee6     MOVWF     0xe6,0x0                                                                                        
0034d8   d81b     RCALL     0x3510                                                                                          
0034da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034dc   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\FRC\Fcode- 04-05-06\camera.c
0034de   6ee6     MOVWF     0xe6,0x0                                                                                        
0034e0   d817     RCALL     0x3510                                                                                          
0034e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034e4   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\FRC\Fcode- 04-05-06\camera.c
0034e6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0034e8   ffe6                                                                                                               
0034ea   d812     RCALL     0x3510                                                                                          
0034ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034ee   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\FRC\Fcode- 04-05-06\camera.c
0034f0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0034f2   ffe6                                                                                                               
0034f4   d80d     RCALL     0x3510                                                                                          
0034f6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034f8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
0034fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0034fc   ffd9                                                                                                               
0034fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					received data queue.		                                                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.		                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
003500   eca0     CALL      0x4740,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\FRC\Fcode- 04-05-06\camera.c
003502   f023                                                                                                               
003504   d000     BRA       0x3506                                                                                          
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
003506   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data is not present in the camera serial port's received                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data queue, zero is returned.                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\FRC\Fcode- 04-05-06\camera.c
                                           *					calling this function to make sure data is present.                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
003508   ecd6     CALL      0x47ac,0x0     	return(Read_Serial_Port_Two());                                                 C:\FRC\Fcode- 04-05-06\camera.c
00350a   f023                                                                                                               
00350c   d000     BRA       0x350e                                                                                          
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
00350e   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
003510   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\FRC\Fcode- 04-05-06\camera.c
003512   ffe6                                                                                                               
003514   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003516   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FRC\Fcode- 04-05-06\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
003518   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\FRC\Fcode- 04-05-06\camera.c
00351a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00351c   ffe6                                                                                                               
00351e   ec1d     CALL      0x483a,0x0                                                                                      
003520   f024                                                                                                               
003522   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
003524   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
003526   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003528   ffd9                                                                                                               
00352a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\FRC\Fcode- 04-05-06\camera.c
                                           *					received data queue.                                                       C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FRC\Fcode- 04-05-06\camera.c
00352c   ec90     CALL      0x4720,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\FRC\Fcode- 04-05-06\camera.c
00352e   f023                                                                                                               
003530   d000     BRA       0x3532                                                                                          
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\FRC\Fcode- 04-05-06\camera.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
003532   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *					data queue, zero is returned.                                              C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\FRC\Fcode- 04-05-06\camera.c
                                           *					calling this function to make sure data is present.                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\FRC\Fcode- 04-05-06\camera.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FRC\Fcode- 04-05-06\camera.c
003534   ecb0     CALL      0x4760,0x0     	return(Read_Serial_Port_One());                                                 C:\FRC\Fcode- 04-05-06\camera.c
003536   f023                                                                                                               
003538   d000     BRA       0x353a                                                                                          
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\FRC\Fcode- 04-05-06\camera.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
00353a   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FRC\Fcode- 04-05-06\camera.c
                                           *					properly set in camera.h.                                                  C:\FRC\Fcode- 04-05-06\camera.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\camera.c
00353c   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\FRC\Fcode- 04-05-06\camera.c
00353e   ffe6                                                                                                               
003540   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003542   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FRC\Fcode- 04-05-06\camera.c
003544   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\FRC\Fcode- 04-05-06\camera.c
003546   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003548   ffe6                                                                                                               
00354a   ecfc     CALL      0x47f8,0x0                                                                                      
00354c   f023                                                                                                               
00354e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\FRC\Fcode- 04-05-06\camera.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\camera.c
003550   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\camera.c
003552   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003554   ffd9                                                                                                               
003556   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           * USAGE:                                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern void main (void);                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void _startup (void);                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           #define RND 6                                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void _entry (void)                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
000800   efc2     GOTO      0x5584         _asm goto _startup _endasm                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
000802   f02a                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void _startup (void)                                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
005584   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\FRC\Fcode- 04-05-06\ifi_startup.c
005586   f000                                                                                                               
005588   ee2e     LFSR      0x2,0xe00                                                                                       
00558a   f000                                                                                                               
00558c   6af8     CLRF      0xf8,0x0                                                                                        
00558e   9c3e     BCF       0x3e,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
005590   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
005592   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           loop:                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
005594   ec93     CALL      0x4326,0x0      	Clear_Memory();                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
005596   f021                                                                                                               
005598   ec4b     CALL      0x5096,0x0       _do_cinit ();                                                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
00559a   f028                                                                                                               
                                             /* Call the user's main routine */                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
00559c   ec9c     CALL      0x5538,0x0       main ();                                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
00559e   f02a                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
0055a0   d7f9     BRA       0x5594           goto loop;                                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
0055a2   0012     RETURN    0x0            }                               /* end _startup() */                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           extern far rom struct                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             unsigned short num_init;                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             struct _init_entry                                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               unsigned long from;                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               unsigned long to;                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               unsigned long size;                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             }                                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             entries[];                                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           }                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           _cinit;                                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           void                                                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                              */                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             static short long prom;                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             static short long data_ptr;                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* Initialized data... */                                                      C:\FRC\Fcode- 04-05-06\ifi_startup.c
005096   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
005098   6ef6     MOVWF     0xf6,0x0                                                                                        
00509a   0e08     MOVLW     0x8                                                                                             
00509c   6ef7     MOVWF     0xf7,0x0                                                                                        
00509e   0e00     MOVLW     0x0                                                                                             
0050a0   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050a2   0102     MOVLB     0x2                movlb data_ptr                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050a4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050a6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050a8   6f69     MOVWF     0x69,0x1           movwf curr_entry, 1                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050aa   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ac   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ae   6f6a     MOVWF     0x6a,0x1           movwf curr_entry+1, 1                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               test:                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050b0   e103     BNZ       0x50b8              bnz 3                                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050b2   6769     TSTFSZ    0x69,0x1           tstfsz curr_entry, 1                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050b4   d001     BRA       0x50b8             bra 1                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050b6   d03d     BRA       0x5132           goto done;                                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                * once.                                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                *                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                * size values.                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                */                                                                          C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* read the source address */                                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050b8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ba   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050bc   6f64     MOVWF     0x64,0x1           movwf prom, 1                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050be   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050c0   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050c2   6f65     MOVWF     0x65,0x1           movwf prom+1, 1                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050c4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050c6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050c8   6f66     MOVWF     0x66,0x1           movwf prom+2, 1                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ca   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050cc   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ce   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050d0   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050d2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050d4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050d6   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050d8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050da   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050dc   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050de   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050e0   6f67     MOVWF     0x67,0x1           movwf curr_byte, 1                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050e2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050e4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050e6   6f68     MOVWF     0x68,0x1           movwf curr_byte+1, 1                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050e8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ea   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                              * for the entry.                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                              */                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ec   cff6     MOVFF     0xff6,0x26b      data_ptr = TBLPTR;                                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050ee   f26b                                                                                                               
0050f0   cff7     MOVFF     0xff7,0x26c                                                                                     
0050f2   f26c                                                                                                               
0050f4   cff8     MOVFF     0xff8,0x26d                                                                                     
0050f6   f26d                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050f8   c264     MOVFF     0x264,0xff6      TBLPTR = prom;                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
0050fa   fff6                                                                                                               
0050fc   c265     MOVFF     0x265,0xff7                                                                                     
0050fe   fff7                                                                                                               
005100   c266     MOVFF     0x266,0xff8                                                                                     
005102   fff8                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             /* do the copy loop */                                                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\FRC\Fcode- 04-05-06\ifi_startup.c
005104   0102     MOVLB     0x2                movlb curr_byte                                                              C:\FRC\Fcode- 04-05-06\ifi_startup.c
005106   5367     MOVF      0x67,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           copy_loop:                                                                       C:\FRC\Fcode- 04-05-06\ifi_startup.c
005108   e102     BNZ       0x510e             bnz 2 /* copy_one_byte */                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
00510a   5368     MOVF      0x68,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
00510c   e007     BZ        0x511c             bz 7  /* done_copying */                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           copy_one_byte:                                                                   C:\FRC\Fcode- 04-05-06\ifi_startup.c
00510e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
005110   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FRC\Fcode- 04-05-06\ifi_startup.c
005112   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\FRC\Fcode- 04-05-06\ifi_startup.c
005114   0767     DECF      0x67,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
005116   e2f8     BC        0x5108             bc -8   /* copy_loop */                                                      C:\FRC\Fcode- 04-05-06\ifi_startup.c
005118   0768     DECF      0x68,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
00511a   d7f9     BRA       0x510e             bra -7  /* copy_one_byte */                                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           done_copying:                                                                    C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\FRC\Fcode- 04-05-06\ifi_startup.c
00511c   c26b     MOVFF     0x26b,0xff6      TBLPTR = data_ptr;                                                             C:\FRC\Fcode- 04-05-06\ifi_startup.c
00511e   fff6                                                                                                               
005120   c26c     MOVFF     0x26c,0xff7                                                                                     
005122   fff7                                                                                                               
005124   c26d     MOVFF     0x26d,0xff8                                                                                     
005126   fff8                                                                                                               
                                             /* next entry... */                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
005128   0102     MOVLB     0x2              curr_entry--;                                                                  C:\FRC\Fcode- 04-05-06\ifi_startup.c
00512a   0769     DECF      0x69,0x1,0x1                                                                                    
00512c   0e00     MOVLW     0x0                                                                                             
00512e   5b6a     SUBWFB    0x6a,0x1,0x1                                                                                    
005130   d7bf     BRA       0x50b0           goto test;                                                                     C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           done:                                                                            C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           ;                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
005132   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\ifi_startup.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * USAGE:                                                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *  custom file.                                                                  C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <usart.h>                                                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <capture.h>                                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <timers.h>                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <string.h>                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           char            ifi_printfBufr[80];                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c36   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c38   d002     BRA       0x4c3e                                                                                          
004c3c   d7fc     BRA       0x4c36                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c3a   d7fd     BRA       0x4c36             continue;                                                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             }                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c3e   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c40   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c42   ffe6                                                                                                               
004c44   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004c46   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c48   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c4a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004c4c   ffe6                                                                                                               
004c4e   eca5     CALL      0x434a,0x0                                                                                      
004c50   f021                                                                                                               
004c52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c54   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c56   6ead     MOVWF     0xad,0x0                                                                                        
004c58   dfee     RCALL     0x4c36           Wait4TXEmpty();                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c5a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c5c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004c5e   ffd9                                                                                                               
004c60   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c62   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c64   ffe6                                                                                                               
004c66   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004c68   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c6a   010f     MOVLB     0xf              ptr = (unsigned char *) &odata;                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c6c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
004c6e   0ffd     ADDLW     0xfd                                                                                            
004c70   6f50     MOVWF     0x50,0x1                                                                                        
004c72   0eff     MOVLW     0xff                                                                                            
004c74   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004c76   6f51     MOVWF     0x51,0x1                                                                                        
004c78   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c7a   6aea     CLRF      0xea,0x0                                                                                        
004c7c   2550     ADDWF     0x50,0x0,0x1                                                                                    
004c7e   6ee9     MOVWF     0xe9,0x0                                                                                        
004c80   5151     MOVF      0x51,0x0,0x1                                                                                    
004c82   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004c84   50ef     MOVF      0xef,0x0,0x0                                                                                    
004c86   6ee6     MOVWF     0xe6,0x0                                                                                        
004c88   eca5     CALL      0x434a,0x0                                                                                      
004c8a   f021                                                                                                               
004c8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c8e   cf50     MOVFF     0xf50,0xfe9      Hex_output(ptr[0]);                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004c90   ffe9                                                                                                               
004c92   cf51     MOVFF     0xf51,0xfea                                                                                     
004c94   ffea                                                                                                               
004c96   50ef     MOVF      0xef,0x0,0x0                                                                                    
004c98   6ee6     MOVWF     0xe6,0x0                                                                                        
004c9a   eca5     CALL      0x434a,0x0                                                                                      
004c9c   f021                                                                                                               
004c9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ca0   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004ca2   6ead     MOVWF     0xad,0x0                                                                                        
004ca4   dfc8     RCALL     0x4c36           Wait4TXEmpty();                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004ca6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004ca8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004caa   ffd9                                                                                                               
004cac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: PrintString                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Prints a string to the serial port.                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     bufr           pointer          I    word of data to be transmitted        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004cae   cfd9     MOVFF     0xfd9,0xfe6    void PrintString(char *bufr)                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004cb0   ffe6                                                                                                               
004cb2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004cb4   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             static int len,I;                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004cb6   0efd     MOVLW     0xfd             strcpypgm2ram (ifi_printfBufr,(rom char *) bufr); /*Move from flash to ram*/   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004cb8   cfdb     MOVFF     0xfdb,0x0                                                                                       
004cba   f000                                                                                                               
004cbc   0efe     MOVLW     0xfe                                                                                            
004cbe   cfdb     MOVFF     0xfdb,0x1                                                                                       
004cc0   f001                                                                                                               
004cc2   6a02     CLRF      0x2,0x0                                                                                         
004cc4   c000     MOVFF     0x0,0xfe6                                                                                       
004cc6   ffe6                                                                                                               
004cc8   c001     MOVFF     0x1,0xfe6                                                                                       
004cca   ffe6                                                                                                               
004ccc   c002     MOVFF     0x2,0xfe6                                                                                       
004cce   ffe6                                                                                                               
004cd0   0e00     MOVLW     0x0                                                                                             
004cd2   6ee6     MOVWF     0xe6,0x0                                                                                        
004cd4   0e0f     MOVLW     0xf                                                                                             
004cd6   6ee6     MOVWF     0xe6,0x0                                                                                        
004cd8   ec9a     CALL      0x5134,0x0                                                                                      
004cda   f028                                                                                                               
004cdc   6ef5     MOVWF     0xf5,0x0                                                                                        
004cde   0e05     MOVLW     0x5                                                                                             
004ce0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004ce2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004ce4   0e00     MOVLW     0x0              len = (int) strlen((const char *)ifi_printfBufr);                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004ce6   6ee6     MOVWF     0xe6,0x0                                                                                        
004ce8   0e0f     MOVLW     0xf                                                                                             
004cea   6ee6     MOVWF     0xe6,0x0                                                                                        
004cec   ecb3     CALL      0x5166,0x0                                                                                      
004cee   f028                                                                                                               
004cf0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004cf2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004cf4   cff3     MOVFF     0xff3,0xf54                                                                                     
004cf6   ff54                                                                                                               
004cf8   cff4     MOVFF     0xff4,0xf55                                                                                     
004cfa   ff55                                                                                                               
004cfc   010f     MOVLB     0xf              if (len > 80) len = 80;                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004cfe   3555     RLCF      0x55,0x0,0x1                                                                                    
004d00   e204     BC        0x4d0a                                                                                          
004d02   5154     MOVF      0x54,0x0,0x1                                                                                    
004d04   0850     SUBLW     0x50                                                                                            
004d06   0e00     MOVLW     0x0                                                                                             
004d08   5555     SUBFWB    0x55,0x0,0x1                                                                                    
004d0a   e203     BC        0x4d12                                                                                          
004d0c   0e50     MOVLW     0x50                                                                                            
004d0e   6f54     MOVWF     0x54,0x1                                                                                        
004d10   6b55     CLRF      0x55,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d12   6b56     CLRF      0x56,0x1         for (I=0;I<len;I++)                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d14   6b57     CLRF      0x57,0x1                                                                                        
004d16   5157     MOVF      0x57,0x0,0x1                                                                                    
004d18   1955     XORWF     0x55,0x0,0x1                                                                                    
004d1a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
004d1c   d002     BRA       0x4d22                                                                                          
004d1e   3555     RLCF      0x55,0x0,0x1                                                                                    
004d20   d004     BRA       0x4d2a                                                                                          
004d22   5154     MOVF      0x54,0x0,0x1                                                                                    
004d24   5d56     SUBWF     0x56,0x0,0x1                                                                                    
004d26   5155     MOVF      0x55,0x0,0x1                                                                                    
004d28   5957     SUBWFB    0x57,0x0,0x1                                                                                    
004d2a   e20e     BC        0x4d48                                                                                          
004d3e   010f     MOVLB     0xf                                                                                             
004d40   2b56     INCF      0x56,0x1,0x1                                                                                    
004d42   0e00     MOVLW     0x0                                                                                             
004d44   2357     ADDWFC    0x57,0x1,0x1                                                                                    
004d46   d7e7     BRA       0x4d16                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d2c   0e00     MOVLW     0x0                TXREG = ifi_printfBufr[I];                                                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d2e   2556     ADDWF     0x56,0x0,0x1                                                                                    
004d30   6ee9     MOVWF     0xe9,0x0                                                                                        
004d32   0e0f     MOVLW     0xf                                                                                             
004d34   2157     ADDWFC    0x57,0x0,0x1                                                                                    
004d36   6eea     MOVWF     0xea,0x0                                                                                        
004d38   50ef     MOVF      0xef,0x0,0x0                                                                                    
004d3a   6ead     MOVWF     0xad,0x0                                                                                        
004d3c   df7c     RCALL     0x4c36             Wait4TXEmpty();                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             }                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d48   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d4a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d4c   ffd9                                                                                                               
004d4e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d50   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d52   ffe6                                                                                                               
004d54   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004d56   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d58   010f     MOVLB     0xf              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d5a   6b52     CLRF      0x52,0x1                                                                                        
004d5c   0e1a     MOVLW     0x1a                                                                                            
004d5e   5d52     SUBWF     0x52,0x0,0x1                                                                                    
004d60   e211     BC        0x4d84                                                                                          
004d7e   010f     MOVLB     0xf                                                                                             
004d80   2b52     INCF      0x52,0x1,0x1                                                                                    
004d82   d7ec     BRA       0x4d5c                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d62   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d64   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004d66   ffe9                                                                                                               
004d68   2adb     INCF      0xdb,0x1,0x0                                                                                    
004d6a   0efe     MOVLW     0xfe                                                                                            
004d6c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004d6e   ffea                                                                                                               
004d70   e301     BNC       0x4d74                                                                                          
004d72   2adb     INCF      0xdb,0x1,0x0                                                                                    
004d74   50ef     MOVF      0xef,0x0,0x0                                                                                    
004d76   6ee6     MOVWF     0xe6,0x0                                                                                        
004d78   eca5     CALL      0x434a,0x0                                                                                      
004d7a   f021                                                                                                               
004d7c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d84   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d86   6ead     MOVWF     0xad,0x0                                                                                        
004d88   df56     RCALL     0x4c36           Wait4TXEmpty();                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d8a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d8c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d8e   ffd9                                                                                                               
004d90   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d92   010f     MOVLB     0xf              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d94   0ea0     MOVLW     0xa0                                                                                            
004d96   6f50     MOVWF     0x50,0x1                                                                                        
004d98   0e01     MOVLW     0x1                                                                                             
004d9a   6f51     MOVWF     0x51,0x1                                                                                        
004d9c   0101     MOVLB     0x1              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004d9e   51a0     MOVF      0xa0,0x0,0x1                                                                                    
004da0   0102     MOVLB     0x2                                                                                             
004da2   6f82     MOVWF     0x82,0x1                                                                                        
004da4   6b83     CLRF      0x83,0x1                                                                                        
004da6   5184     MOVF      0x84,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004da8   1982     XORWF     0x82,0x0,0x1                                                                                    
004daa   e102     BNZ       0x4db0                                                                                          
004dac   5185     MOVF      0x85,0x0,0x1                                                                                    
004dae   1983     XORWF     0x83,0x0,0x1                                                                                    
004db0   e018     BZ        0x4de2                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004db2   0101     MOVLB     0x1                if (statusflag.FIRST_TIME == 1)                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004db4   a5c0     BTFSS     0xc0,0x2,0x1                                                                                    
004db6   d002     BRA       0x4dbc                                                                                          
                                               {                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004db8   95c0     BCF       0xc0,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dba   d00f     BRA       0x4dda             else                                                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               {                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dbc   c284     MOVFF     0x284,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dbe   ffe6                                                                                                               
004dc0   eca5     CALL      0x434a,0x0                                                                                      
004dc2   f021                                                                                                               
004dc4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dc6   c282     MOVFF     0x282,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dc8   ffe6                                                                                                               
004dca   eca5     CALL      0x434a,0x0                                                                                      
004dcc   f021                                                                                                               
004dce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dd0   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dd2   6ead     MOVWF     0xad,0x0                                                                                        
004dd4   df30     RCALL     0x4c36               Wait4TXEmpty();                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dd6   0101     MOVLB     0x1                  statusflag.FIRST_TIME = 0;                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dd8   95c0     BCF       0xc0,0x2,0x1                                                                                    
                                               }                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dda   c282     MOVFF     0x282,0x284        ifi_last_packet1 = ifi_packet_num1;                                          C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004ddc   f284                                                                                                               
004dde   c283     MOVFF     0x283,0x285                                                                                     
004de0   f285                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004de2   0102     MOVLB     0x2              ifi_last_packet1++;                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004de4   2b84     INCF      0x84,0x1,0x1                                                                                    
004de6   0e00     MOVLW     0x0                                                                                             
004de8   2385     ADDWFC    0x85,0x1,0x1                                                                                    
004dea   3585     RLCF      0x85,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dec   e204     BC        0x4df6                                                                                          
004dee   5184     MOVF      0x84,0x0,0x1                                                                                    
004df0   08ff     SUBLW     0xff                                                                                            
004df2   0e00     MOVLW     0x0                                                                                             
004df4   5585     SUBFWB    0x85,0x0,0x1                                                                                    
004df6   e202     BC        0x4dfc                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004df8   6b84     CLRF      0x84,0x1           ifi_last_packet1 = 0;                                                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dfa   6b85     CLRF      0x85,0x1                                                                                        
                                             }                                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004dfc   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e02   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e04   6ee6     MOVWF     0xe6,0x0                                                                                        
004dfe   0e15     MOVLW     0x15               baud_115);                                                                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e00   6ee6     MOVWF     0xe6,0x0                                                                                        
004e06   ec11     CALL      0x5422,0x0                                                                                      
004e08   f02a                                                                                                               
004e0a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e0e   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e10   6ee6     MOVWF     0xe6,0x0                                                                                        
004e12   ecd2     CALL      0x55a4,0x0                                                                                      
004e14   f02a                                                                                                               
004e16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e18   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e1a   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e1c   ffe6                                                                                                               
004e1e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e20   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e22   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e24   cfdb     MOVFF     0xfdb,0xf53                                                                                     
004e26   ff53                                                                                                               
004e28   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004e2c   ffd9                                                                                                               
004e2e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e30   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e32   ffe6                                                                                                               
004e34   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e36   ffd9                                                                                                               
004e38   0e02     MOVLW     0x2                                                                                             
004e3a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             unsigned int result;                                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e4c   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e4e   6ee6     MOVWF     0xe6,0x0                                                                                        
004e3c   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e3e   6ee6     MOVWF     0xe6,0x0                                                                                        
004e40   0efe     MOVLW     0xfe                                                                                            
004e42   50db     MOVF      0xdb,0x0,0x0                                                                                    
004e44   0b7f     ANDLW     0x7f                                                                                            
004e46   0bfe     ANDLW     0xfe                                                                                            
004e48   0bfd     ANDLW     0xfd                                                                                            
004e4a   6ee6     MOVWF     0xe6,0x0                                                                                        
004e50   ecaa     CALL      0x5354,0x0                                                                                      
004e52   f029                                                                                                               
004e54   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e5a   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e5c   6ee6     MOVWF     0xe6,0x0                                                                                        
004e5e   ecfe     CALL      0x55fc,0x0                                                                                      
004e60   f02a                                                                                                               
004e62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e64   ec15     CALL      0x562a,0x0       ConvertADC();                                                                  C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e66   f02b                                                                                                               
004e68   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e6a   f004                                                                                                               
004e6c   0900     IORLW     0x0                                                                                             
004e6e   e001     BZ        0x4e72                                                                                          
004e70   d7fb     BRA       0x4e68                                                                                          
004e72   ec67     CALL      0x54ce,0x0       ReadADC();                                                                     C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e74   f02a                                                                                                               
004e76   ec12     CALL      0x5624,0x0       CloseADC();                                                                    C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e78   f02b                                                                                                               
004e7a   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e7c   6e02     MOVWF     0x2,0x0                                                                                         
004e7e   c002     MOVFF     0x2,0x3                                                                                         
004e80   f003                                                                                                               
004e82   6a02     CLRF      0x2,0x0                                                                                         
004e84   50c3     MOVF      0xc3,0x0,0x0                                                                                    
004e86   0100     MOVLB     0x0                                                                                             
004e88   1002     IORWF     0x2,0x0,0x0                                                                                     
004e8a   6e00     MOVWF     0x0,0x0                                                                                         
004e8c   c003     MOVFF     0x3,0x1                                                                                         
004e8e   f001                                                                                                               
004e90   c000     MOVFF     0x0,0xfde                                                                                       
004e92   ffde                                                                                                               
004e94   c001     MOVFF     0x1,0xfdd                                                                                       
004e96   ffdd                                                                                                               
004e98   cfde     MOVFF     0xfde,0x0        return result;                                                                 C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004e9a   f000                                                                                                               
004e9c   cfdd     MOVFF     0xfdd,0x1                                                                                       
004e9e   f001                                                                                                               
004ea0   c000     MOVFF     0x0,0xff3                                                                                       
004ea2   fff3                                                                                                               
004ea4   c001     MOVFF     0x1,0xff4                                                                                       
004ea6   fff4                                                                                                               
004ea8   d000     BRA       0x4eaa                                                                                          
004eaa   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\ifi_utilities.c
004eac   ffe1                                                                                                               
004eae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004eb0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004eb2   ffd9                                                                                                               
004eb4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\ifi_utilities.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\FRC\Fcode- 04-05-06\main.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\main.c
                                           * DESCRIPTION:                                                                   C:\FRC\Fcode- 04-05-06\main.c
                                           *  This file contains the main program loop.                                     C:\FRC\Fcode- 04-05-06\main.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\main.c
                                           * USAGE:                                                                         C:\FRC\Fcode- 04-05-06\main.c
                                           *  You should not need to modify this file.                                      C:\FRC\Fcode- 04-05-06\main.c
                                           *  Note the different loop speed for the two routines:                           C:\FRC\Fcode- 04-05-06\main.c
                                           *     Process_Data_From_Master_uP                                                C:\FRC\Fcode- 04-05-06\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\FRC\Fcode- 04-05-06\main.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\main.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\main.c
                                           #include "ifi_utilities.h"                                                       C:\FRC\Fcode- 04-05-06\main.c
                                           #include "user_routines.h"                                                       C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\FRC\Fcode- 04-05-06\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\FRC\Fcode- 04-05-06\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\main.c
                                           * FUNCTION NAME: main                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           * PURPOSE:       Main program function.                                          C:\FRC\Fcode- 04-05-06\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\FRC\Fcode- 04-05-06\main.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\FRC\Fcode- 04-05-06\main.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\main.c
                                           void main (void)                                                                 C:\FRC\Fcode- 04-05-06\main.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\FRC\Fcode- 04-05-06\main.c
005538   ec5e     CALL      0x28bc,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\FRC\Fcode- 04-05-06\main.c
00553a   f014                                                                                                               
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
00553c   ecd0     CALL      0x15a0,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\FRC\Fcode- 04-05-06\main.c
00553e   f00a                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
005540   0101     MOVLB     0x1              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\FRC\Fcode- 04-05-06\main.c
005542   91c0     BCF       0xc0,0x0,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
00555c   d7f3     BRA       0x5544           while (1)   /* This loop will repeat indefinitely. */                          C:\FRC\Fcode- 04-05-06\main.c
                                             {                                                                              C:\FRC\Fcode- 04-05-06\main.c
                                           #ifdef _SIMULATOR                                                                C:\FRC\Fcode- 04-05-06\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\FRC\Fcode- 04-05-06\main.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
005544   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FRC\Fcode- 04-05-06\main.c
005546   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
005548   d007     BRA       0x5558                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\FRC\Fcode- 04-05-06\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\FRC\Fcode- 04-05-06\main.c
00554a   ec27     CALL      0x164e,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\FRC\Fcode- 04-05-06\main.c
00554c   f00b                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
00554e   0101     MOVLB     0x1                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\FRC\Fcode- 04-05-06\main.c
005550   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
005552   d002     BRA       0x5558                                                                                          
                                                 {                                                                          C:\FRC\Fcode- 04-05-06\main.c
005554   ec19     CALL      0x2032,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\FRC\Fcode- 04-05-06\main.c
005556   f010                                                                                                               
                                                 }                                                                          C:\FRC\Fcode- 04-05-06\main.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\main.c
005558   ecef     CALL      0x27de,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\FRC\Fcode- 04-05-06\main.c
00555a   f013                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\FRC\Fcode- 04-05-06\main.c
                                             } /* while (1) */                                                              C:\FRC\Fcode- 04-05-06\main.c
00555e   0012     RETURN    0x0            }  /* END of Main */                                                             C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\main.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\main.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\main.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\main.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	DATE:		05-Jan-2006                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				functions mentioned below.                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				correctly:                                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  from the project and all project source files.                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  the project and all project source files.                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  like this:                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // receive functionality                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // transmit functionality                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // receive functionality                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // transmit functionality                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  printf("and");                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *				Copyright ©2004-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *		                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// accept any more data                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// the last reset                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// the last reset                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// accept any more data                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// accept any more data                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// the last reset                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// the last reset                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// accept any more data                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           													// circular queue                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					port one.                                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
0046bc   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
0046be   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046c0   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low speed                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high speed                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046c2   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046c4   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046c6   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046c8   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// initializing the receiver                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046ca   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046cc   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046ce   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables address detection                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables address detection                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046d0   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046d2   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							// asynchronous mode:                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables receiver                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enable receiver                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							// synchronous mode:                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046d4   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low-priority                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high-priority                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046d6   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif					//                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046d8   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\FRC\Fcode- 04-05-06\serial_ports.c
0046da   6989     SETF      0x89,0x1                                                                                        
0046dc   698a     SETF      0x8a,0x1                                                                                        
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046de   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046e0   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046e2   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046e4   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low-priority                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high-priority                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046e6   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046e8   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif					//                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0046ea   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0046ec   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					port two.                                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
0046ee   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
0046f0   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046f2   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low speed                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high speed                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046f4   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046f6   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046f8   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046fa   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// initializing the receiver                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046fc   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
0046fe   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004700   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables address detection                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables address detection                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004702   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004704   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							// asynchronous mode:                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables receiver                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enable receiver                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							// synchronous mode:                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004706   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low-priority                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high-priority                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004708   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif					//                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
00470a   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\FRC\Fcode- 04-05-06\serial_ports.c
00470c   6989     SETF      0x89,0x1                                                                                        
00470e   698a     SETF      0x8a,0x1                                                                                        
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004710   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004712   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004714   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004716   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: low-priority                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: high-priority                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004718   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//                                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
00471a   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif					//                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
00471c   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
00471e   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ones's received data queue.		                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the next byte.                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004720   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004722   ffe6                                                                                                               
004724   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004726   ffd9                                                                                                               
004728   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	unsigned char temp;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// using it.                                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
00472a   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
00472c   c220     MOVFF     0x220,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
00472e   ffdf                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004730   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// return the byte count                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004732   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004734   d000     BRA       0x4736                                                                                          
004736   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004738   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00473a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00473c   ffd9                                                                                                               
00473e   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					two's received data queue.		                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					the next byte.                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004740   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004742   ffe6                                                                                                               
004744   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004746   ffd9                                                                                                               
004748   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	unsigned char temp;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// using it.                                                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
00474a   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
00474c   c22c     MOVFF     0x22c,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
00474e   ffdf                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004750   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// return the byte count                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
004752   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004754   d000     BRA       0x4756                                                                                          
004756   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004758   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00475a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00475c   ffd9                                                                                                               
00475e   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004760   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
004762   ffe6                                                                                                               
004764   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004766   ffd9                                                                                                               
004768   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	unsigned char byte;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00476a   0102     MOVLB     0x2            	if(Rx_1_Queue_Empty)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00476c   511d     MOVF      0x1d,0x0,0x1                                                                                    
00476e   e003     BZ        0x4776                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// error: no data to read                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
004770   0e00     MOVLW     0x0            		return(0);                                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
004772   d017     BRA       0x47a2                                                                                          
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004774   d016     BRA       0x47a2         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004776   511e     MOVF      0x1e,0x0,0x1   		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
004778   6aea     CLRF      0xea,0x0                                                                                        
00477a   0f00     ADDLW     0x0                                                                                             
00477c   6ee9     MOVWF     0xe9,0x0                                                                                        
00477e   0e01     MOVLW     0x1                                                                                             
004780   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004782   cfef     MOVFF     0xfef,0xfdf                                                                                     
004784   ffdf                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004786   0720     DECF      0x20,0x1,0x1   		Rx_1_Queue_Byte_Count--;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the read pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004788   2b1e     INCF      0x1e,0x1,0x1   		Rx_1_Queue_Read_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
00478a   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
00478c   171e     ANDWF     0x1e,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get altered while we're using it.                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
00478e   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
004790   511f     MOVF      0x1f,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
004792   5d1e     SUBWF     0x1e,0x0,0x1                                                                                    
004794   e102     BNZ       0x479a                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004796   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
004798   6f1d     MOVWF     0x1d,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// interrupt back on.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
00479a   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
00479c   6b1c     CLRF      0x1c,0x1       		Rx_1_Queue_Full = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// return the data                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
00479e   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
0047a0   d000     BRA       0x47a2                                                                                          
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0047a2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0047a4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0047a6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0047a8   ffd9                                                                                                               
0047aa   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
0047ac   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
0047ae   ffe6                                                                                                               
0047b0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047b2   ffd9                                                                                                               
0047b4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	unsigned char byte;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0047b6   0102     MOVLB     0x2            	if(Rx_2_Queue_Empty)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0047b8   5129     MOVF      0x29,0x0,0x1                                                                                    
0047ba   e003     BZ        0x47c2                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// error: no data to read                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
0047bc   0e00     MOVLW     0x0            		return(0);                                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
0047be   d017     BRA       0x47ee                                                                                          
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0047c0   d016     BRA       0x47ee         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\FRC\Fcode- 04-05-06\serial_ports.c
0047c2   512a     MOVF      0x2a,0x0,0x1   		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
0047c4   6aea     CLRF      0xea,0x0                                                                                        
0047c6   0f40     ADDLW     0x40                                                                                            
0047c8   6ee9     MOVWF     0xe9,0x0                                                                                        
0047ca   0e01     MOVLW     0x1                                                                                             
0047cc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0047ce   cfef     MOVFF     0xfef,0xfdf                                                                                     
0047d0   ffdf                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0047d2   072c     DECF      0x2c,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the read pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
0047d4   2b2a     INCF      0x2a,0x1,0x1   		Rx_2_Queue_Read_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
0047d6   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0047d8   172a     ANDWF     0x2a,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get altered while we're using it.                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
0047da   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0047dc   512b     MOVF      0x2b,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0047de   5d2a     SUBWF     0x2a,0x0,0x1                                                                                    
0047e0   e102     BNZ       0x47e6                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0047e2   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
0047e4   6f29     MOVWF     0x29,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// interrupt back on.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
0047e6   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
0047e8   6b28     CLRF      0x28,0x1       		Rx_2_Queue_Full = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// return the data                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0047ea   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
0047ec   d000     BRA       0x47ee                                                                                          
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0047ee   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0047f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0047f2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0047f4   ffd9                                                                                                               
0047f6   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
0047f8   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
0047fa   ffe6                                                                                                               
0047fc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047fe   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\FRC\Fcode- 04-05-06\serial_ports.c
004800   0102     MOVLB     0x2            	while(Tx_1_Queue_Full);                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
004802   5123     MOVF      0x23,0x0,0x1                                                                                    
004804   e001     BZ        0x4808                                                                                          
004806   d7fc     BRA       0x4800                                                                                          
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
004808   5126     MOVF      0x26,0x0,0x1   	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
00480a   6aea     CLRF      0xea,0x0                                                                                        
00480c   0f20     ADDLW     0x20                                                                                            
00480e   6ee9     MOVWF     0xe9,0x0                                                                                        
004810   0e01     MOVLW     0x1                                                                                             
004812   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004814   0efe     MOVLW     0xfe                                                                                            
004816   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004818   ffef                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// increment the queue byte count                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
00481a   2b27     INCF      0x27,0x1,0x1   	Tx_1_Queue_Byte_Count++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// increment the write pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
00481c   2b26     INCF      0x26,0x1,0x1   	Tx_1_Queue_Write_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\FRC\Fcode- 04-05-06\serial_ports.c
00481e   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004820   1726     ANDWF     0x26,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// get altered while we're using it.                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
004822   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// is the circular queue now full?                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004824   5126     MOVF      0x26,0x0,0x1   	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\FRC\Fcode- 04-05-06\serial_ports.c
004826   5d25     SUBWF     0x25,0x0,0x1                                                                                    
004828   e102     BNZ       0x482e                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
00482a   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
00482c   6f23     MOVWF     0x23,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// interrupt back on.                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
00482e   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\FRC\Fcode- 04-05-06\serial_ports.c
004830   6b24     CLRF      0x24,0x1       	Tx_1_Queue_Empty = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
004832   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004834   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004836   ffd9                                                                                                               
004838   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
00483a   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
00483c   ffe6                                                                                                               
00483e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004840   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\FRC\Fcode- 04-05-06\serial_ports.c
004842   0102     MOVLB     0x2            	while(Tx_2_Queue_Full);                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
004844   512f     MOVF      0x2f,0x0,0x1                                                                                    
004846   e001     BZ        0x484a                                                                                          
004848   d7fc     BRA       0x4842                                                                                          
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
00484a   5132     MOVF      0x32,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
00484c   6aea     CLRF      0xea,0x0                                                                                        
00484e   0f60     ADDLW     0x60                                                                                            
004850   6ee9     MOVWF     0xe9,0x0                                                                                        
004852   0e01     MOVLW     0x1                                                                                             
004854   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004856   0efe     MOVLW     0xfe                                                                                            
004858   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00485a   ffef                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// increment the queue byte count                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
00485c   2b33     INCF      0x33,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// increment the write pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
00485e   2b32     INCF      0x32,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\FRC\Fcode- 04-05-06\serial_ports.c
004860   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004862   1732     ANDWF     0x32,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// get altered while we're using it.                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
004864   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// is the circular queue now full?                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004866   5132     MOVF      0x32,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\FRC\Fcode- 04-05-06\serial_ports.c
004868   5d31     SUBWF     0x31,0x0,0x1                                                                                    
00486a   e102     BNZ       0x4870                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
00486c   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
00486e   6f2f     MOVWF     0x2f,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// interrupt back on.                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
004870   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\FRC\Fcode- 04-05-06\serial_ports.c
004872   6b30     CLRF      0x30,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
004874   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004876   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004878   ffd9                                                                                                               
00487a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is received by serial port one.                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
00487c   0102     MOVLB     0x2            	if(Rx_1_Queue_Full)                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
00487e   511c     MOVF      0x1c,0x0,0x1                                                                                    
004880   e002     BZ        0x4886                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// more data is read.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
004882   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004884   d019     BRA       0x48b8         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
004886   511f     MOVF      0x1f,0x0,0x1   		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004888   6aea     CLRF      0xea,0x0                                                                                        
00488a   0f00     ADDLW     0x0                                                                                             
00488c   6ee9     MOVWF     0xe9,0x0                                                                                        
00488e   0e01     MOVLW     0x1                                                                                             
004890   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004892   cfae     MOVFF     0xfae,0xfef                                                                                     
004894   ffef                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to get data flowing again.                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004896   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
004898   d003     BRA       0x48a0                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\FRC\Fcode- 04-05-06\serial_ports.c
00489a   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// ...turn it back on                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
00489c   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// indicate that we've had an error                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
00489e   2b21     INCF      0x21,0x1,0x1   			RX_1_Overrun_Errors++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0048a0   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048a2   2b22     INCF      0x22,0x1,0x1   			RX_1_Framing_Errors++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048a4   2b20     INCF      0x20,0x1,0x1   		Rx_1_Queue_Byte_Count++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the write pointer                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
0048a6   2b1f     INCF      0x1f,0x1,0x1   		Rx_1_Queue_Write_Index++;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
0048a8   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0048aa   171f     ANDWF     0x1f,0x1,0x1                                                                                    
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now full?                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0048ac   511f     MOVF      0x1f,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0048ae   5d1e     SUBWF     0x1e,0x0,0x1                                                                                    
0048b0   e102     BNZ       0x48b6                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048b2   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
0048b4   6f1c     MOVWF     0x1c,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048b6   6b1d     CLRF      0x1d,0x1       		Rx_1_Queue_Empty = FALSE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0048b8   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					is received by serial port two.                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0048ba   0102     MOVLB     0x2            	if(Rx_2_Queue_Full)                                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0048bc   5128     MOVF      0x28,0x0,0x1                                                                                    
0048be   e002     BZ        0x48c4                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// more data is read.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
0048c0   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0048c2   d019     BRA       0x48f6         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
0048c4   512b     MOVF      0x2b,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
0048c6   6aea     CLRF      0xea,0x0                                                                                        
0048c8   0f40     ADDLW     0x40                                                                                            
0048ca   6ee9     MOVWF     0xe9,0x0                                                                                        
0048cc   0e01     MOVLW     0x1                                                                                             
0048ce   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0048d0   cf6e     MOVFF     0xf6e,0xfef                                                                                     
0048d2   ffef                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to get data flowing again.                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
0048d4   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0048d6   d003     BRA       0x48de                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\FRC\Fcode- 04-05-06\serial_ports.c
0048d8   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// ...turn it back on                                                         C:\FRC\Fcode- 04-05-06\serial_ports.c
0048da   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           			// indicate that we've had an error                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
0048dc   2b2d     INCF      0x2d,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0048de   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048e0   2b2e     INCF      0x2e,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048e2   2b2c     INCF      0x2c,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the write pointer                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
0048e4   2b2b     INCF      0x2b,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
0048e6   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0048e8   172b     ANDWF     0x2b,0x1,0x1                                                                                    
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now full?                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
0048ea   512b     MOVF      0x2b,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0048ec   5d2a     SUBWF     0x2a,0x0,0x1                                                                                    
0048ee   e102     BNZ       0x48f4                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048f0   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
0048f2   6f28     MOVWF     0x28,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
0048f4   6b29     CLRF      0x29,0x1       		Rx_2_Queue_Empty = FALSE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
0048f6   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
0048f8   0102     MOVLB     0x2            	if(Tx_1_Queue_Empty)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
0048fa   5124     MOVF      0x24,0x0,0x1                                                                                    
0048fc   e002     BZ        0x4902                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// more data is sent.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
0048fe   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004900   d012     BRA       0x4926         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004902   5125     MOVF      0x25,0x0,0x1   		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
004904   6aea     CLRF      0xea,0x0                                                                                        
004906   0f20     ADDLW     0x20                                                                                            
004908   6ee9     MOVWF     0xe9,0x0                                                                                        
00490a   0e01     MOVLW     0x1                                                                                             
00490c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00490e   50ef     MOVF      0xef,0x0,0x0                                                                                    
004910   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004912   0727     DECF      0x27,0x1,0x1   		Tx_1_Queue_Byte_Count--;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the read pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004914   2b25     INCF      0x25,0x1,0x1   		Tx_1_Queue_Read_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
004916   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004918   1725     ANDWF     0x25,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00491a   5126     MOVF      0x26,0x0,0x1   		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00491c   5d25     SUBWF     0x25,0x0,0x1                                                                                    
00491e   e102     BNZ       0x4924                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004920   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
004922   6f24     MOVWF     0x24,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
004924   6b23     CLRF      0x23,0x1       		Tx_1_Queue_Full = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004926   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004928   0102     MOVLB     0x2            	if(Tx_2_Queue_Empty)                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00492a   5130     MOVF      0x30,0x0,0x1                                                                                    
00492c   e002     BZ        0x4932                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// more data is sent.                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
00492e   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004930   d012     BRA       0x4956         	else                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\FRC\Fcode- 04-05-06\serial_ports.c
004932   5131     MOVF      0x31,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\FRC\Fcode- 04-05-06\serial_ports.c
004934   6aea     CLRF      0xea,0x0                                                                                        
004936   0f60     ADDLW     0x60                                                                                            
004938   6ee9     MOVWF     0xe9,0x0                                                                                        
00493a   0e01     MOVLW     0x1                                                                                             
00493c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00493e   50ef     MOVF      0xef,0x0,0x0                                                                                    
004940   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004942   0733     DECF      0x33,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// increment the read pointer                                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004944   2b31     INCF      0x31,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FRC\Fcode- 04-05-06\serial_ports.c
004946   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004948   1731     ANDWF     0x31,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00494a   5132     MOVF      0x32,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00494c   5d31     SUBWF     0x31,0x0,0x1                                                                                    
00494e   e102     BNZ       0x4954                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
004950   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\FRC\Fcode- 04-05-06\serial_ports.c
004952   6f30     MOVWF     0x30,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FRC\Fcode- 04-05-06\serial_ports.c
004954   6b2f     CLRF      0x2f,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
004956   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\serial_ports.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\serial_ports.c
004958   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\FRC\Fcode- 04-05-06\serial_ports.c
00495a   ffe6                                                                                                               
00495c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00495e   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004960   0102     MOVLB     0x2            	if(stdout_serial_port == NUL)                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004962   511b     MOVF      0x1b,0x0,0x1                                                                                    
004964   e101     BNZ       0x4968                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004966   d010     BRA       0x4988         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004968   051b     DECF      0x1b,0x0,0x1                                                                                    
00496a   e106     BNZ       0x4978                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// send the data to serial port one                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00496c   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
00496e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004970   ffe6                                                                                                               
004972   df42     RCALL     0x47f8                                                                                          
004974   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif                                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
004976   d008     BRA       0x4988         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\FRC\Fcode- 04-05-06\serial_ports.c
004978   0e02     MOVLW     0x2                                                                                             
00497a   5d1b     SUBWF     0x1b,0x0,0x1                                                                                    
00497c   e105     BNZ       0x4988                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           		// send the data to serial port two                                            C:\FRC\Fcode- 04-05-06\serial_ports.c
00497e   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\FRC\Fcode- 04-05-06\serial_ports.c
004980   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004982   ffe6                                                                                                               
004984   df5a     RCALL     0x483a                                                                                          
004986   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\serial_ports.c
                                           	#endif                                                                          C:\FRC\Fcode- 04-05-06\serial_ports.c
004988   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\serial_ports.c
00498a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00498c   ffd9                                                                                                               
00498e   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	TITLE:		terminal.c                                                             C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	DATE:		25-Nov-2005                                                             C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\terminal.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\FRC\Fcode- 04-05-06\terminal.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\FRC\Fcode- 04-05-06\terminal.c
                                           *				without permission. Thanks.                                                 C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	25-Nov-2005  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include <math.h>                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include "camera.h"                                                              C:\FRC\Fcode- 04-05-06\terminal.c
                                           #include "tracking.h"                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	FUNCTION:		Tracking_Info_Terminal()                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	PURPOSE:		This function is designed to send tracking information               C:\FRC\Fcode- 04-05-06\terminal.c
                                           *					to a terminal attached to your robot controller's                          C:\FRC\Fcode- 04-05-06\terminal.c
                                           *					programming port.                                                          C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	PARAMETERS:		none                                                              C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	RETURNS:		nothing                                                              C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *	COMMENTS:		This code assumes that the terminal serial port is                  C:\FRC\Fcode- 04-05-06\terminal.c
                                           *					properly set in camera.h                                                   C:\FRC\Fcode- 04-05-06\terminal.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\terminal.c
                                           void Tracking_Info_Terminal(void)                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           	static unsigned char count = 0;                                                 C:\FRC\Fcode- 04-05-06\terminal.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\FRC\Fcode- 04-05-06\terminal.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           	// has a new camera tracking packet arrived since we last checked?              C:\FRC\Fcode- 04-05-06\terminal.c
004fd8   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\FRC\Fcode- 04-05-06\terminal.c
004fda   5187     MOVF      0x87,0x0,0x1                                                                                    
004fdc   0102     MOVLB     0x2                                                                                             
004fde   196f     XORWF     0x6f,0x0,0x1                                                                                    
004fe0   e104     BNZ       0x4fea                                                                                          
004fe2   0102     MOVLB     0x2                                                                                             
004fe4   5188     MOVF      0x88,0x0,0x1                                                                                    
004fe6   0102     MOVLB     0x2                                                                                             
004fe8   1970     XORWF     0x70,0x0,0x1                                                                                    
004fea   e054     BZ        0x5094                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\terminal.c
004fec   0102     MOVLB     0x2            		count++;                                                                       C:\FRC\Fcode- 04-05-06\terminal.c
004fee   2b86     INCF      0x86,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           		// only show data on every five t-packets                                      C:\FRC\Fcode- 04-05-06\terminal.c
004ff0   0e05     MOVLW     0x5            		if(count >= 5)                                                                 C:\FRC\Fcode- 04-05-06\terminal.c
004ff2   5d86     SUBWF     0x86,0x0,0x1                                                                                    
004ff4   e34f     BNC       0x5094                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\terminal.c
                                           			// reset the counter                                                          C:\FRC\Fcode- 04-05-06\terminal.c
004ff6   6b86     CLRF      0x86,0x1       			count = 0;                                                                    C:\FRC\Fcode- 04-05-06\terminal.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           			// does the camera have a tracking solution?                                  C:\FRC\Fcode- 04-05-06\terminal.c
004ff8   0101     MOVLB     0x1            			if(T_Packet_Data.my == 0)                                                     C:\FRC\Fcode- 04-05-06\terminal.c
004ffa   51c2     MOVF      0xc2,0x0,0x1                                                                                    
004ffc   e111     BNZ       0x5020                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\terminal.c
004ffe   0eef     MOVLW     0xef           				printf("Searching...\r\n");                                                  C:\FRC\Fcode- 04-05-06\terminal.c
005000   6e00     MOVWF     0x0,0x0                                                                                         
005002   0e4e     MOVLW     0x4e                                                                                            
005004   6e01     MOVWF     0x1,0x0                                                                                         
005006   6a02     CLRF      0x2,0x0                                                                                         
005008   c000     MOVFF     0x0,0xfe6                                                                                       
00500a   ffe6                                                                                                               
00500c   c001     MOVFF     0x1,0xfe6                                                                                       
00500e   ffe6                                                                                                               
005010   c002     MOVFF     0x2,0xfe6                                                                                       
005012   ffe6                                                                                                               
005014   ece6     CALL      0x51cc,0x0                                                                                      
005016   f028                                                                                                               
005018   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00501a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00501c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				//printf("TiltAngle: %d\r\n", dtan(45));                                     C:\FRC\Fcode- 04-05-06\terminal.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\terminal.c
00501e   d03a     BRA       0x5094         			else                                                                          C:\FRC\Fcode- 04-05-06\terminal.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\terminal.c
005020   0eec     MOVLW     0xec           				printf("\r\n");                                                              C:\FRC\Fcode- 04-05-06\terminal.c
005022   6e00     MOVWF     0x0,0x0                                                                                         
005024   0e4e     MOVLW     0x4e                                                                                            
005026   6e01     MOVWF     0x1,0x0                                                                                         
005028   6a02     CLRF      0x2,0x0                                                                                         
00502a   c000     MOVFF     0x0,0xfe6                                                                                       
00502c   ffe6                                                                                                               
00502e   c001     MOVFF     0x1,0xfe6                                                                                       
005030   ffe6                                                                                                               
005032   c002     MOVFF     0x2,0xfe6                                                                                       
005034   ffe6                                                                                                               
005036   ece6     CALL      0x51cc,0x0                                                                                      
005038   f028                                                                                                               
00503a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00503c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00503e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           				// pan angle = ((current pan PWM) - (pan center PWM)) * degrees/pan PWM step C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf(" Pan Angle (degrees) = %d\r\n", (((int)PAN_SERVO - 124) * 65)/124); C:\FRC\Fcode- 04-05-06\terminal.c
005040   0101     MOVLB     0x1            				printf(" Pan Angle (PWMval) = %d\r\n", PAN_SERVO);                           C:\FRC\Fcode- 04-05-06\terminal.c
005042   5184     MOVF      0x84,0x0,0x1                                                                                    
005044   6ee6     MOVWF     0xe6,0x0                                                                                        
005046   6ae6     CLRF      0xe6,0x0                                                                                        
005048   0ed1     MOVLW     0xd1                                                                                            
00504a   6e00     MOVWF     0x0,0x0                                                                                         
00504c   0e4e     MOVLW     0x4e                                                                                            
00504e   6e01     MOVWF     0x1,0x0                                                                                         
005050   6a02     CLRF      0x2,0x0                                                                                         
005052   c000     MOVFF     0x0,0xfe6                                                                                       
005054   ffe6                                                                                                               
005056   c001     MOVFF     0x1,0xfe6                                                                                       
005058   ffe6                                                                                                               
00505a   c002     MOVFF     0x2,0xfe6                                                                                       
00505c   ffe6                                                                                                               
00505e   ece6     CALL      0x51cc,0x0                                                                                      
005060   f028                                                                                                               
005062   6ef5     MOVWF     0xf5,0x0                                                                                        
005064   0e05     MOVLW     0x5                                                                                             
005066   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005068   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           				// tilt angle = ((current tilt PWM) - (tilt center PWM)) * degrees/tilt PWM step C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf("Tilt Angle (degrees) = %d\r\n", (((int)TILT_SERVO - 144) * 25)/50); C:\FRC\Fcode- 04-05-06\terminal.c
00506a   0101     MOVLB     0x1            				printf("Tilt Angle (PWMval) = %d\r\n", TILT_SERVO);                          C:\FRC\Fcode- 04-05-06\terminal.c
00506c   5185     MOVF      0x85,0x0,0x1                                                                                    
00506e   6ee6     MOVWF     0xe6,0x0                                                                                        
005070   6ae6     CLRF      0xe6,0x0                                                                                        
005072   0eb6     MOVLW     0xb6                                                                                            
005074   6e00     MOVWF     0x0,0x0                                                                                         
005076   0e4e     MOVLW     0x4e                                                                                            
005078   6e01     MOVWF     0x1,0x0                                                                                         
00507a   6a02     CLRF      0x2,0x0                                                                                         
00507c   c000     MOVFF     0x0,0xfe6                                                                                       
00507e   ffe6                                                                                                               
005080   c001     MOVFF     0x1,0xfe6                                                                                       
005082   ffe6                                                                                                               
005084   c002     MOVFF     0x2,0xfe6                                                                                       
005086   ffe6                                                                                                               
005088   ece6     CALL      0x51cc,0x0                                                                                      
00508a   f028                                                                                                               
00508c   6ef5     MOVWF     0xf5,0x0                                                                                        
00508e   0e05     MOVLW     0x5                                                                                             
005090   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005092   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf(" Pan Error (Pixels)  = %d\r\n", (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT); C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf("Tilt Error (Pixels)  = %d\r\n", (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT); C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf(" Blob Size (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.pixels); C:\FRC\Fcode- 04-05-06\terminal.c
                                           				//printf("Confidence (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.confidence); C:\FRC\Fcode- 04-05-06\terminal.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\terminal.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\terminal.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\terminal.c
005094   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\terminal.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	TITLE:		tracking.c                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	DATE:		1-Jan-2006                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	COMMENTS:	This is the "streamlined" version of tracking.c                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				You are free to use this source code for any non-commercial                 C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				without permission. Thanks.                                                 C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\tracking.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\tracking.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           #include "camera.h"                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           #include "tracking.h"                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	FUNCTION:		Servo_Track()                                                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	PURPOSE:		This function reads data placed in the T_Packet_Data                 C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					structure by the Camera_Handler() function and if new                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					tracking data is available, attempts to keep the center                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					of the tracked object in the center of the camera's                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					image using two servos that drive a pan/tilt platform.                     C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					If the camera doesn't have the object within it's field                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					of view, this function will execute a search algorithm                     C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					in an attempt to find the object.		                                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *	COMMENTS:		This version of the tracking code uses a proportional               C:\FRC\Fcode- 04-05-06\tracking.c
                                           *					feedback controller to track the object.                                   C:\FRC\Fcode- 04-05-06\tracking.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\tracking.c
003b24   cfd9     MOVFF     0xfd9,0xfe6    void Servo_Track(void)                                                           C:\FRC\Fcode- 04-05-06\tracking.c
003b26   ffe6                                                                                                               
003b28   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003b2a   ffd9                                                                                                               
003b2c   0e0a     MOVLW     0xa                                                                                             
003b2e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\FRC\Fcode- 04-05-06\tracking.c
                                           	static unsigned char new_search = 1;                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           	static unsigned char loop_count = 0;                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           	int temp_pan_servo;                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           	int temp_tilt_servo;                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           	int servo_step;                                                                 C:\FRC\Fcode- 04-05-06\tracking.c
                                           	int pan_error;                                                                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           	int tilt_error;                                                                 C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           	// Has a new camera t-packet arrived since we last checked?                     C:\FRC\Fcode- 04-05-06\tracking.c
003b30   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\FRC\Fcode- 04-05-06\tracking.c
003b32   517e     MOVF      0x7e,0x0,0x1                                                                                    
003b34   0102     MOVLB     0x2                                                                                             
003b36   196f     XORWF     0x6f,0x0,0x1                                                                                    
003b38   e104     BNZ       0x3b42                                                                                          
003b3a   0102     MOVLB     0x2                                                                                             
003b3c   517f     MOVF      0x7f,0x0,0x1                                                                                    
003b3e   0102     MOVLB     0x2                                                                                             
003b40   1970     XORWF     0x70,0x0,0x1                                                                                    
003b42   e101     BNZ       0x3b46                                                                                          
003b44   d1ec     BRA       0x3f1e                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\tracking.c
003b46   c26f     MOVFF     0x26f,0x27e    		old_camera_t_packets = camera_t_packets;                                       C:\FRC\Fcode- 04-05-06\tracking.c
003b48   f27e                                                                                                               
003b4a   c270     MOVFF     0x270,0x27f                                                                                     
003b4c   f27f                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           		// Does the camera have a tracking solution? If so,                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           		// do we need to move the servos to keep the center                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           		// of the tracked object centered within the image?                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           		// If not, we need to drop down below to start or                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           		// continue a search                                                           C:\FRC\Fcode- 04-05-06\tracking.c
003b4e   0101     MOVLB     0x1            		if(T_Packet_Data.my != 0)                                                      C:\FRC\Fcode- 04-05-06\tracking.c
003b50   51c2     MOVF      0xc2,0x0,0x1                                                                                    
003b52   e101     BNZ       0x3b56                                                                                          
003b54   d166     BRA       0x3e22                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// if we're tracking, reset the search                                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// algorithm so that a new search pattern                                     C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// will start should we lose tracking lock                                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//new_search = 1;                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			////////////////////////////////                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//                            //                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//	x-axis/pan tracking code  //                                               C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//                            //                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			////////////////////////////////                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// save the current pan servo PWM value into a local                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// the pan servo PWM value with a new value                                   C:\FRC\Fcode- 04-05-06\tracking.c
003b56   0101     MOVLB     0x1            			temp_pan_servo = (int)PAN_SERVO;                                              C:\FRC\Fcode- 04-05-06\tracking.c
003b58   5184     MOVF      0x84,0x0,0x1                                                                                    
003b5a   6ede     MOVWF     0xde,0x0                                                                                        
003b5c   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// vertical center line.                                                      C:\FRC\Fcode- 04-05-06\tracking.c
003b5e   0101     MOVLB     0x1            			pan_error = (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT;                 C:\FRC\Fcode- 04-05-06\tracking.c
003b60   51c1     MOVF      0xc1,0x0,0x1                                                                                    
003b62   6e00     MOVWF     0x0,0x0                                                                                         
003b64   6a01     CLRF      0x1,0x0                                                                                         
003b66   0e7f     MOVLW     0x7f                                                                                            
003b68   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003b6a   0e00     MOVLW     0x0                                                                                             
003b6c   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003b6e   0e06     MOVLW     0x6                                                                                             
003b70   c000     MOVFF     0x0,0xfdb                                                                                       
003b72   ffdb                                                                                                               
003b74   0e07     MOVLW     0x7                                                                                             
003b76   c001     MOVFF     0x1,0xfdb                                                                                       
003b78   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// Are we too far to the left or right of the vertical                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// center line? If so, calculate how far we should step                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// the pan servo to reduce the error.                                         C:\FRC\Fcode- 04-05-06\tracking.c
003b7a   0e06     MOVLW     0x6            			if(pan_error > PAN_ALLOWABLE_ERROR_DEFAULT)                                   C:\FRC\Fcode- 04-05-06\tracking.c
003b7c   cfdb     MOVFF     0xfdb,0x0                                                                                       
003b7e   f000                                                                                                               
003b80   0e07     MOVLW     0x7                                                                                             
003b82   cfdb     MOVFF     0xfdb,0x1                                                                                       
003b84   f001                                                                                                               
003b86   3401     RLCF      0x1,0x0,0x0                                                                                     
003b88   e204     BC        0x3b92                                                                                          
003b8a   5000     MOVF      0x0,0x0,0x0                                                                                     
003b8c   0806     SUBLW     0x6                                                                                             
003b8e   0e00     MOVLW     0x0                                                                                             
003b90   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003b92   e225     BC        0x3bde                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\FRC\Fcode- 04-05-06\tracking.c
003b94   0e04     MOVLW     0x4            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\FRC\Fcode- 04-05-06\tracking.c
003b96   6e00     MOVWF     0x0,0x0                                                                                         
003b98   6a01     CLRF      0x1,0x0                                                                                         
003b9a   0e06     MOVLW     0x6                                                                                             
003b9c   cfdb     MOVFF     0xfdb,0x35                                                                                      
003b9e   f035                                                                                                               
003ba0   0e07     MOVLW     0x7                                                                                             
003ba2   cfdb     MOVFF     0xfdb,0x36                                                                                      
003ba4   f036                                                                                                               
003ba6   c000     MOVFF     0x0,0x3a                                                                                        
003ba8   f03a                                                                                                               
003baa   c001     MOVFF     0x1,0x3b                                                                                        
003bac   f03b                                                                                                               
003bae   ec2f     CALL      0x385e,0x0                                                                                      
003bb0   f01c                                                                                                               
003bb2   0e04     MOVLW     0x4                                                                                             
003bb4   c035     MOVFF     0x35,0xfdb                                                                                      
003bb6   ffdb                                                                                                               
003bb8   0e05     MOVLW     0x5                                                                                             
003bba   c036     MOVFF     0x36,0xfdb                                                                                      
003bbc   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// impossible to converge on the target when x_error is                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// smaller than X_GAIN. To get around this problem, we just                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// test for the zero case and set the step size to one.                      C:\FRC\Fcode- 04-05-06\tracking.c
003bbe   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003bc0   0f04     ADDLW     0x4                                                                                             
003bc2   6ee9     MOVWF     0xe9,0x0                                                                                        
003bc4   cfda     MOVFF     0xfda,0xfea                                                                                     
003bc6   ffea                                                                                                               
003bc8   50ee     MOVF      0xee,0x0,0x0                                                                                    
003bca   10ed     IORWF     0xed,0x0,0x0                                                                                    
003bcc   e107     BNZ       0x3bdc                                                                                          
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003bce   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003bd0   6ef3     MOVWF     0xf3,0x0                                                                                        
003bd2   0e04     MOVLW     0x4                                                                                             
003bd4   cff3     MOVFF     0xff3,0xfdb                                                                                     
003bd6   ffdb                                                                                                               
003bd8   0e05     MOVLW     0x5                                                                                             
003bda   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003bdc   d034     BRA       0x3c46         			else if(pan_error < -1 * PAN_ALLOWABLE_ERROR_DEFAULT)                         C:\FRC\Fcode- 04-05-06\tracking.c
003bde   0e06     MOVLW     0x6                                                                                             
003be0   cfdb     MOVFF     0xfdb,0x0                                                                                       
003be2   f000                                                                                                               
003be4   0e07     MOVLW     0x7                                                                                             
003be6   cfdb     MOVFF     0xfdb,0x1                                                                                       
003be8   f001                                                                                                               
003bea   80d8     BSF       0xd8,0x0,0x0                                                                                    
003bec   5001     MOVF      0x1,0x0,0x0                                                                                     
003bee   e704     BNN       0x3bf8                                                                                          
003bf0   0efa     MOVLW     0xfa                                                                                            
003bf2   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003bf4   0eff     MOVLW     0xff                                                                                            
003bf6   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003bf8   e222     BC        0x3c3e                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\FRC\Fcode- 04-05-06\tracking.c
003bfa   0e04     MOVLW     0x4            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\FRC\Fcode- 04-05-06\tracking.c
003bfc   6e00     MOVWF     0x0,0x0                                                                                         
003bfe   6a01     CLRF      0x1,0x0                                                                                         
003c00   0e06     MOVLW     0x6                                                                                             
003c02   cfdb     MOVFF     0xfdb,0x35                                                                                      
003c04   f035                                                                                                               
003c06   0e07     MOVLW     0x7                                                                                             
003c08   cfdb     MOVFF     0xfdb,0x36                                                                                      
003c0a   f036                                                                                                               
003c0c   c000     MOVFF     0x0,0x3a                                                                                        
003c0e   f03a                                                                                                               
003c10   c001     MOVFF     0x1,0x3b                                                                                        
003c12   f03b                                                                                                               
003c14   ec2f     CALL      0x385e,0x0                                                                                      
003c16   f01c                                                                                                               
003c18   0e04     MOVLW     0x4                                                                                             
003c1a   c035     MOVFF     0x35,0xfdb                                                                                      
003c1c   ffdb                                                                                                               
003c1e   0e05     MOVLW     0x5                                                                                             
003c20   c036     MOVFF     0x36,0xfdb                                                                                      
003c22   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// impossible to converge on the target when x_error is                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// smaller than X_GAIN. To get around this problem, we just                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// test for the zero case and set the step size to one.                      C:\FRC\Fcode- 04-05-06\tracking.c
003c24   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003c26   0f04     ADDLW     0x4                                                                                             
003c28   6ee9     MOVWF     0xe9,0x0                                                                                        
003c2a   cfda     MOVFF     0xfda,0xfea                                                                                     
003c2c   ffea                                                                                                               
003c2e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c30   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c32   e104     BNZ       0x3c3c                                                                                          
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003c34   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003c36   68db     SETF      0xdb,0x0                                                                                        
003c38   0e05     MOVLW     0x5                                                                                             
003c3a   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003c3c   d004     BRA       0x3c46         			else                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// neither too far to the left or too far to the right                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// of the vertical center line of the image and don't                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// need to move the servo                                                    C:\FRC\Fcode- 04-05-06\tracking.c
003c3e   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\FRC\Fcode- 04-05-06\tracking.c
003c40   6adb     CLRF      0xdb,0x0                                                                                        
003c42   0e05     MOVLW     0x5                                                                                             
003c44   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\FRC\Fcode- 04-05-06\tracking.c
003c46   0e04     MOVLW     0x4            			temp_pan_servo += PAN_ROTATION_SIGN_DEFAULT * servo_step;                     C:\FRC\Fcode- 04-05-06\tracking.c
003c48   cfdb     MOVFF     0xfdb,0x0                                                                                       
003c4a   f000                                                                                                               
003c4c   0e05     MOVLW     0x5                                                                                             
003c4e   cfdb     MOVFF     0xfdb,0x1                                                                                       
003c50   f001                                                                                                               
003c52   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
003c54   ffe9                                                                                                               
003c56   cfda     MOVFF     0xfda,0xfea                                                                                     
003c58   ffea                                                                                                               
003c5a   5000     MOVF      0x0,0x0,0x0                                                                                     
003c5c   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003c5e   5001     MOVF      0x1,0x0,0x0                                                                                     
003c60   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// check the pan servo PWM value for under/overflow                           C:\FRC\Fcode- 04-05-06\tracking.c
003c62   cfde     MOVFF     0xfde,0x0      			if(temp_pan_servo < PAN_MIN_PWM_DEFAULT)                                      C:\FRC\Fcode- 04-05-06\tracking.c
003c64   f000                                                                                                               
003c66   cfdd     MOVFF     0xfdd,0x1                                                                                       
003c68   f001                                                                                                               
003c6a   0100     MOVLB     0x0                                                                                             
003c6c   0e80     MOVLW     0x80                                                                                            
003c6e   1401     ANDWF     0x1,0x0,0x0                                                                                     
003c70   e003     BZ        0x3c78                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003c72   6ade     CLRF      0xde,0x0       				temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                        C:\FRC\Fcode- 04-05-06\tracking.c
003c74   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003c76   d00e     BRA       0x3c94         			else if(temp_pan_servo > PAN_MAX_PWM_DEFAULT)                                 C:\FRC\Fcode- 04-05-06\tracking.c
003c78   cfde     MOVFF     0xfde,0x0                                                                                       
003c7a   f000                                                                                                               
003c7c   cfdd     MOVFF     0xfdd,0x1                                                                                       
003c7e   f001                                                                                                               
003c80   3401     RLCF      0x1,0x0,0x0                                                                                     
003c82   e204     BC        0x3c8c                                                                                          
003c84   5000     MOVF      0x0,0x0,0x0                                                                                     
003c86   08f8     SUBLW     0xf8                                                                                            
003c88   0e00     MOVLW     0x0                                                                                             
003c8a   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003c8c   e203     BC        0x3c94                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003c8e   0ef8     MOVLW     0xf8           				temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                        C:\FRC\Fcode- 04-05-06\tracking.c
003c90   6ede     MOVWF     0xde,0x0                                                                                        
003c92   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// update pan servo PWM value                                                 C:\FRC\Fcode- 04-05-06\tracking.c
003c94   cfdf     MOVFF     0xfdf,0x184    			PAN_SERVO = (unsigned char)temp_pan_servo;                                    C:\FRC\Fcode- 04-05-06\tracking.c
003c96   f184                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			/////////////////////////////////                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//                             //                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//	y-axis/tilt tracking code  //                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//                             //                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           			/////////////////////////////////                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// save the current tilt servo PWM value into a local                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// the tilt servo PWM value with a new value                                  C:\FRC\Fcode- 04-05-06\tracking.c
003c98   0101     MOVLB     0x1            			temp_tilt_servo = (int)TILT_SERVO;                                            C:\FRC\Fcode- 04-05-06\tracking.c
003c9a   5185     MOVF      0x85,0x0,0x1                                                                                    
003c9c   6ee6     MOVWF     0xe6,0x0                                                                                        
003c9e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ca0   0f02     ADDLW     0x2                                                                                             
003ca2   6ee9     MOVWF     0xe9,0x0                                                                                        
003ca4   cfda     MOVFF     0xfda,0xfea                                                                                     
003ca6   ffea                                                                                                               
003ca8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003caa   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003cac   6eee     MOVWF     0xee,0x0                                                                                        
003cae   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// horizontal center line.                                                    C:\FRC\Fcode- 04-05-06\tracking.c
003cb0   0101     MOVLB     0x1            			tilt_error = (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT;               C:\FRC\Fcode- 04-05-06\tracking.c
003cb2   51c2     MOVF      0xc2,0x0,0x1                                                                                    
003cb4   6e00     MOVWF     0x0,0x0                                                                                         
003cb6   6a01     CLRF      0x1,0x0                                                                                         
003cb8   0e77     MOVLW     0x77                                                                                            
003cba   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003cbc   0e00     MOVLW     0x0                                                                                             
003cbe   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003cc0   0e08     MOVLW     0x8                                                                                             
003cc2   c000     MOVFF     0x0,0xfdb                                                                                       
003cc4   ffdb                                                                                                               
003cc6   0e09     MOVLW     0x9                                                                                             
003cc8   c001     MOVFF     0x1,0xfdb                                                                                       
003cca   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// Are we too far above or below the horizontal center line?                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// If so, calculate how far we should step the tilt servo to                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// reduce the error.                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003ccc   0e08     MOVLW     0x8            			if(tilt_error > TILT_ALLOWABLE_ERROR_DEFAULT)                                 C:\FRC\Fcode- 04-05-06\tracking.c
003cce   cfdb     MOVFF     0xfdb,0x0                                                                                       
003cd0   f000                                                                                                               
003cd2   0e09     MOVLW     0x9                                                                                             
003cd4   cfdb     MOVFF     0xfdb,0x1                                                                                       
003cd6   f001                                                                                                               
003cd8   3401     RLCF      0x1,0x0,0x0                                                                                     
003cda   e204     BC        0x3ce4                                                                                          
003cdc   5000     MOVF      0x0,0x0,0x0                                                                                     
003cde   0806     SUBLW     0x6                                                                                             
003ce0   0e00     MOVLW     0x0                                                                                             
003ce2   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003ce4   e225     BC        0x3d30                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\FRC\Fcode- 04-05-06\tracking.c
003ce6   0e04     MOVLW     0x4            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\FRC\Fcode- 04-05-06\tracking.c
003ce8   6e00     MOVWF     0x0,0x0                                                                                         
003cea   6a01     CLRF      0x1,0x0                                                                                         
003cec   0e08     MOVLW     0x8                                                                                             
003cee   cfdb     MOVFF     0xfdb,0x35                                                                                      
003cf0   f035                                                                                                               
003cf2   0e09     MOVLW     0x9                                                                                             
003cf4   cfdb     MOVFF     0xfdb,0x36                                                                                      
003cf6   f036                                                                                                               
003cf8   c000     MOVFF     0x0,0x3a                                                                                        
003cfa   f03a                                                                                                               
003cfc   c001     MOVFF     0x1,0x3b                                                                                        
003cfe   f03b                                                                                                               
003d00   ec2f     CALL      0x385e,0x0                                                                                      
003d02   f01c                                                                                                               
003d04   0e04     MOVLW     0x4                                                                                             
003d06   c035     MOVFF     0x35,0xfdb                                                                                      
003d08   ffdb                                                                                                               
003d0a   0e05     MOVLW     0x5                                                                                             
003d0c   c036     MOVFF     0x36,0xfdb                                                                                      
003d0e   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// impossible to converge on the target when y_error is                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// smaller than Y_GAIN. To get around this problem, we just                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// test for the zero case and set the step size to one.                      C:\FRC\Fcode- 04-05-06\tracking.c
003d10   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003d12   0f04     ADDLW     0x4                                                                                             
003d14   6ee9     MOVWF     0xe9,0x0                                                                                        
003d16   cfda     MOVFF     0xfda,0xfea                                                                                     
003d18   ffea                                                                                                               
003d1a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d1c   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d1e   e107     BNZ       0x3d2e                                                                                          
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003d20   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003d22   6ef3     MOVWF     0xf3,0x0                                                                                        
003d24   0e04     MOVLW     0x4                                                                                             
003d26   cff3     MOVFF     0xff3,0xfdb                                                                                     
003d28   ffdb                                                                                                               
003d2a   0e05     MOVLW     0x5                                                                                             
003d2c   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003d2e   d034     BRA       0x3d98         			else if (tilt_error < -1 * TILT_ALLOWABLE_ERROR_DEFAULT)                      C:\FRC\Fcode- 04-05-06\tracking.c
003d30   0e08     MOVLW     0x8                                                                                             
003d32   cfdb     MOVFF     0xfdb,0x0                                                                                       
003d34   f000                                                                                                               
003d36   0e09     MOVLW     0x9                                                                                             
003d38   cfdb     MOVFF     0xfdb,0x1                                                                                       
003d3a   f001                                                                                                               
003d3c   80d8     BSF       0xd8,0x0,0x0                                                                                    
003d3e   5001     MOVF      0x1,0x0,0x0                                                                                     
003d40   e704     BNN       0x3d4a                                                                                          
003d42   0efa     MOVLW     0xfa                                                                                            
003d44   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003d46   0eff     MOVLW     0xff                                                                                            
003d48   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003d4a   e222     BC        0x3d90                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\FRC\Fcode- 04-05-06\tracking.c
003d4c   0e04     MOVLW     0x4            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\FRC\Fcode- 04-05-06\tracking.c
003d4e   6e00     MOVWF     0x0,0x0                                                                                         
003d50   6a01     CLRF      0x1,0x0                                                                                         
003d52   0e08     MOVLW     0x8                                                                                             
003d54   cfdb     MOVFF     0xfdb,0x35                                                                                      
003d56   f035                                                                                                               
003d58   0e09     MOVLW     0x9                                                                                             
003d5a   cfdb     MOVFF     0xfdb,0x36                                                                                      
003d5c   f036                                                                                                               
003d5e   c000     MOVFF     0x0,0x3a                                                                                        
003d60   f03a                                                                                                               
003d62   c001     MOVFF     0x1,0x3b                                                                                        
003d64   f03b                                                                                                               
003d66   ec2f     CALL      0x385e,0x0                                                                                      
003d68   f01c                                                                                                               
003d6a   0e04     MOVLW     0x4                                                                                             
003d6c   c035     MOVFF     0x35,0xfdb                                                                                      
003d6e   ffdb                                                                                                               
003d70   0e05     MOVLW     0x5                                                                                             
003d72   c036     MOVFF     0x36,0xfdb                                                                                      
003d74   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// impossible to converge on the target when x_error is                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// smaller than X_GAIN. To get around this problem, we just                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// test for the zero case and set the step size to one.                      C:\FRC\Fcode- 04-05-06\tracking.c
003d76   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003d78   0f04     ADDLW     0x4                                                                                             
003d7a   6ee9     MOVWF     0xe9,0x0                                                                                        
003d7c   cfda     MOVFF     0xfda,0xfea                                                                                     
003d7e   ffea                                                                                                               
003d80   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d82   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d84   e104     BNZ       0x3d8e                                                                                          
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003d86   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003d88   68db     SETF      0xdb,0x0                                                                                        
003d8a   0e05     MOVLW     0x5                                                                                             
003d8c   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003d8e   d004     BRA       0x3d98         			else                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// neither too far below or to far above the horizontal                      C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// center line of the image and don't need to move the                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// servo                                                                     C:\FRC\Fcode- 04-05-06\tracking.c
003d90   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\FRC\Fcode- 04-05-06\tracking.c
003d92   6adb     CLRF      0xdb,0x0                                                                                        
003d94   0e05     MOVLW     0x5                                                                                             
003d96   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\FRC\Fcode- 04-05-06\tracking.c
003d98   6835     SETF      0x35,0x0       			temp_tilt_servo += TILT_ROTATION_SIGN_DEFAULT * servo_step;                   C:\FRC\Fcode- 04-05-06\tracking.c
003d9a   6836     SETF      0x36,0x0                                                                                        
003d9c   0e04     MOVLW     0x4                                                                                             
003d9e   cfdb     MOVFF     0xfdb,0x3a                                                                                      
003da0   f03a                                                                                                               
003da2   0e05     MOVLW     0x5                                                                                             
003da4   cfdb     MOVFF     0xfdb,0x3b                                                                                      
003da6   f03b                                                                                                               
003da8   ec89     CALL      0x3912,0x0                                                                                      
003daa   f01c                                                                                                               
003dac   c033     MOVFF     0x33,0x0                                                                                        
003dae   f000                                                                                                               
003db0   c034     MOVFF     0x34,0x1                                                                                        
003db2   f001                                                                                                               
003db4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003db6   0f02     ADDLW     0x2                                                                                             
003db8   6ee9     MOVWF     0xe9,0x0                                                                                        
003dba   cfda     MOVFF     0xfda,0xfea                                                                                     
003dbc   ffea                                                                                                               
003dbe   5000     MOVF      0x0,0x0,0x0                                                                                     
003dc0   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003dc2   5001     MOVF      0x1,0x0,0x0                                                                                     
003dc4   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// check the tilt PWM value for under/overflow                                C:\FRC\Fcode- 04-05-06\tracking.c
003dc6   0e02     MOVLW     0x2            			if(temp_tilt_servo < TILT_MIN_PWM_DEFAULT)                                    C:\FRC\Fcode- 04-05-06\tracking.c
003dc8   cfdb     MOVFF     0xfdb,0x0                                                                                       
003dca   f000                                                                                                               
003dcc   0e03     MOVLW     0x3                                                                                             
003dce   cfdb     MOVFF     0xfdb,0x1                                                                                       
003dd0   f001                                                                                                               
003dd2   90d8     BCF       0xd8,0x0,0x0                                                                                    
003dd4   5001     MOVF      0x1,0x0,0x0                                                                                     
003dd6   e604     BN        0x3de0                                                                                          
003dd8   0e90     MOVLW     0x90                                                                                            
003dda   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003ddc   0e00     MOVLW     0x0                                                                                             
003dde   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003de0   e208     BC        0x3df2                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003de2   0e90     MOVLW     0x90           				temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                      C:\FRC\Fcode- 04-05-06\tracking.c
003de4   6ef3     MOVWF     0xf3,0x0                                                                                        
003de6   0e02     MOVLW     0x2                                                                                             
003de8   cff3     MOVFF     0xff3,0xfdb                                                                                     
003dea   ffdb                                                                                                               
003dec   0e03     MOVLW     0x3                                                                                             
003dee   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003df0   d014     BRA       0x3e1a         			else if(temp_tilt_servo > TILT_MAX_PWM_DEFAULT)                               C:\FRC\Fcode- 04-05-06\tracking.c
003df2   0e02     MOVLW     0x2                                                                                             
003df4   cfdb     MOVFF     0xfdb,0x0                                                                                       
003df6   f000                                                                                                               
003df8   0e03     MOVLW     0x3                                                                                             
003dfa   cfdb     MOVFF     0xfdb,0x1                                                                                       
003dfc   f001                                                                                                               
003dfe   3401     RLCF      0x1,0x0,0x0                                                                                     
003e00   e204     BC        0x3e0a                                                                                          
003e02   5000     MOVF      0x0,0x0,0x0                                                                                     
003e04   08be     SUBLW     0xbe                                                                                            
003e06   0e00     MOVLW     0x0                                                                                             
003e08   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003e0a   e207     BC        0x3e1a                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003e0c   0ebe     MOVLW     0xbe           				temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                      C:\FRC\Fcode- 04-05-06\tracking.c
003e0e   6ef3     MOVWF     0xf3,0x0                                                                                        
003e10   0e02     MOVLW     0x2                                                                                             
003e12   cff3     MOVFF     0xff3,0xfdb                                                                                     
003e14   ffdb                                                                                                               
003e16   0e03     MOVLW     0x3                                                                                             
003e18   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// update tilt servo PWM value                                                C:\FRC\Fcode- 04-05-06\tracking.c
003e1a   0e02     MOVLW     0x2            			TILT_SERVO = (unsigned char)temp_tilt_servo;                                  C:\FRC\Fcode- 04-05-06\tracking.c
003e1c   cfdb     MOVFF     0xfdb,0x185                                                                                     
003e1e   f185                                                                                                               
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\tracking.c
003e20   d07e     BRA       0x3f1e         		else                                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           			///////////////////                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//               //                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//  search code  //                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           			//               //                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           			///////////////////                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// To provide a delay for the camera to lock onto the                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// target between position changes, we only step the camera                   C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// to a new position every SEARCH_DELAY times while we're                     C:\FRC\Fcode- 04-05-06\tracking.c
                                           			// in search mode. SEARCH_DELAY is #define'd in tracking.h                    C:\FRC\Fcode- 04-05-06\tracking.c
003e22   0102     MOVLB     0x2            			loop_count++;                                                                 C:\FRC\Fcode- 04-05-06\tracking.c
003e24   2b81     INCF      0x81,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003e26   5181     MOVF      0x81,0x0,0x1   			if(loop_count > SEARCH_DELAY_DEFAULT)                                         C:\FRC\Fcode- 04-05-06\tracking.c
003e28   0801     SUBLW     0x1                                                                                             
003e2a   e301     BNC       0x3e2e                                                                                          
003e2c   d078     BRA       0x3f1e                                                                                          
                                           			{                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// reset the loop counter                                                    C:\FRC\Fcode- 04-05-06\tracking.c
003e2e   6b81     CLRF      0x81,0x1       				loop_count = 0;                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// If we're starting a new search, initialize the pan                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// and tilt servos to the search starting point.                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// Otherwise, just continue the search pattern from                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// where we left off. The variable new_search is reset                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// to one each time the tracking code (above) executes.                      C:\FRC\Fcode- 04-05-06\tracking.c
003e30   0580     DECF      0x80,0x0,0x1   				if(new_search == 1)                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003e32   e10b     BNZ       0x3e4a                                                                                          
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003e34   6b80     CLRF      0x80,0x1       					new_search = 0;                                                             C:\FRC\Fcode- 04-05-06\tracking.c
003e36   6ade     CLRF      0xde,0x0       					temp_pan_servo = 0;                                                         C:\FRC\Fcode- 04-05-06\tracking.c
003e38   6add     CLRF      0xdd,0x0                                                                                        
003e3a   0e90     MOVLW     0x90           					temp_tilt_servo = TILT_CENTER_PWM_DEFAULT;                                  C:\FRC\Fcode- 04-05-06\tracking.c
003e3c   6ef3     MOVWF     0xf3,0x0                                                                                        
003e3e   0e02     MOVLW     0x2                                                                                             
003e40   cff3     MOVFF     0xff3,0xfdb                                                                                     
003e42   ffdb                                                                                                               
003e44   0e03     MOVLW     0x3                                                                                             
003e46   6adb     CLRF      0xdb,0x0                                                                                        
                                           										                                                                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
003e48   d065     BRA       0x3f14         				else                                                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           				{                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           					// calculate new servo position(s) based upon our                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           					// current servo position(s)                                                C:\FRC\Fcode- 04-05-06\tracking.c
003e4a   0101     MOVLB     0x1            					temp_pan_servo = (int)PAN_SERVO;                                            C:\FRC\Fcode- 04-05-06\tracking.c
003e4c   5184     MOVF      0x84,0x0,0x1                                                                                    
003e4e   6ede     MOVWF     0xde,0x0                                                                                        
003e50   6add     CLRF      0xdd,0x0                                                                                        
003e52   5185     MOVF      0x85,0x0,0x1   					temp_tilt_servo = (int)TILT_SERVO;                                          C:\FRC\Fcode- 04-05-06\tracking.c
003e54   6ee6     MOVWF     0xe6,0x0                                                                                        
003e56   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003e58   0f02     ADDLW     0x2                                                                                             
003e5a   6ee9     MOVWF     0xe9,0x0                                                                                        
003e5c   cfda     MOVFF     0xfda,0xfea                                                                                     
003e5e   ffea                                                                                                               
003e60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e62   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003e64   6eee     MOVWF     0xee,0x0                                                                                        
003e66   6aed     CLRF      0xed,0x0                                                                                        
                                           	                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           					// if the pan servo is at the end of its travel,                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           					// send it back to the start and step the tilt                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           					// servo to its next position                                               C:\FRC\Fcode- 04-05-06\tracking.c
003e68   cfde     MOVFF     0xfde,0x0      					if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                   C:\FRC\Fcode- 04-05-06\tracking.c
003e6a   f000                                                                                                               
003e6c   cfdd     MOVFF     0xfdd,0x1                                                                                       
003e6e   f001                                                                                                               
003e70   90d8     BCF       0xd8,0x0,0x0                                                                                    
003e72   5001     MOVF      0x1,0x0,0x0                                                                                     
003e74   e604     BN        0x3e7e                                                                                          
003e76   0ef8     MOVLW     0xf8                                                                                            
003e78   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003e7a   0e00     MOVLW     0x0                                                                                             
003e7c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003e7e   e337     BNC       0x3eee                                                                                          
                                           					{                                                                           C:\FRC\Fcode- 04-05-06\tracking.c
003e80   6ade     CLRF      0xde,0x0       						temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                      C:\FRC\Fcode- 04-05-06\tracking.c
003e82   6add     CLRF      0xdd,0x0                                                                                        
                                           		                                                                               C:\FRC\Fcode- 04-05-06\tracking.c
                                           						// if the tilt servo is at the end of its                                  C:\FRC\Fcode- 04-05-06\tracking.c
                                           						// travel, send it back to the start                                       C:\FRC\Fcode- 04-05-06\tracking.c
003e84   0e02     MOVLW     0x2            						if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                                C:\FRC\Fcode- 04-05-06\tracking.c
003e86   cfdb     MOVFF     0xfdb,0x0                                                                                       
003e88   f000                                                                                                               
003e8a   0e03     MOVLW     0x3                                                                                             
003e8c   cfdb     MOVFF     0xfdb,0x1                                                                                       
003e8e   f001                                                                                                               
003e90   90d8     BCF       0xd8,0x0,0x0                                                                                    
003e92   5001     MOVF      0x1,0x0,0x0                                                                                     
003e94   e604     BN        0x3e9e                                                                                          
003e96   0ebe     MOVLW     0xbe                                                                                            
003e98   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003e9a   0e00     MOVLW     0x0                                                                                             
003e9c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003e9e   e308     BNC       0x3eb0                                                                                          
                                           						{                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003ea0   0e90     MOVLW     0x90           							temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                   C:\FRC\Fcode- 04-05-06\tracking.c
003ea2   6ef3     MOVWF     0xf3,0x0                                                                                        
003ea4   0e02     MOVLW     0x2                                                                                             
003ea6   cff3     MOVFF     0xff3,0xfdb                                                                                     
003ea8   ffdb                                                                                                               
003eaa   0e03     MOVLW     0x3                                                                                             
003eac   6adb     CLRF      0xdb,0x0                                                                                        
                                           						}                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003eae   d01e     BRA       0x3eec         						else                                                                       C:\FRC\Fcode- 04-05-06\tracking.c
                                           						{                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           							// step the tilt servo to its next destination                            C:\FRC\Fcode- 04-05-06\tracking.c
003eb0   50d9     MOVF      0xd9,0x0,0x0   							temp_tilt_servo += TILT_SEARCH_STEP_SIZE_DEFAULT;                         C:\FRC\Fcode- 04-05-06\tracking.c
003eb2   0f02     ADDLW     0x2                                                                                             
003eb4   6ee9     MOVWF     0xe9,0x0                                                                                        
003eb6   cfda     MOVFF     0xfda,0xfea                                                                                     
003eb8   ffea                                                                                                               
003eba   0e18     MOVLW     0x18                                                                                            
003ebc   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003ebe   0e00     MOVLW     0x0                                                                                             
003ec0   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           			                                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           							// make sure its new position isn't beyond                                C:\FRC\Fcode- 04-05-06\tracking.c
                                           							// the maximum value set in tracking.h                                    C:\FRC\Fcode- 04-05-06\tracking.c
003ec2   0e02     MOVLW     0x2            							if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                               C:\FRC\Fcode- 04-05-06\tracking.c
003ec4   cfdb     MOVFF     0xfdb,0x0                                                                                       
003ec6   f000                                                                                                               
003ec8   0e03     MOVLW     0x3                                                                                             
003eca   cfdb     MOVFF     0xfdb,0x1                                                                                       
003ecc   f001                                                                                                               
003ece   90d8     BCF       0xd8,0x0,0x0                                                                                    
003ed0   5001     MOVF      0x1,0x0,0x0                                                                                     
003ed2   e604     BN        0x3edc                                                                                          
003ed4   0ebe     MOVLW     0xbe                                                                                            
003ed6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003ed8   0e00     MOVLW     0x0                                                                                             
003eda   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003edc   e307     BNC       0x3eec                                                                                          
                                           							{                                                                         C:\FRC\Fcode- 04-05-06\tracking.c
003ede   0ebe     MOVLW     0xbe           								temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                  C:\FRC\Fcode- 04-05-06\tracking.c
003ee0   6ef3     MOVWF     0xf3,0x0                                                                                        
003ee2   0e02     MOVLW     0x2                                                                                             
003ee4   cff3     MOVFF     0xff3,0xfdb                                                                                     
003ee6   ffdb                                                                                                               
003ee8   0e03     MOVLW     0x3                                                                                             
003eea   6adb     CLRF      0xdb,0x0                                                                                        
                                           							}                                                                         C:\FRC\Fcode- 04-05-06\tracking.c
                                           						}                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\tracking.c
003eec   d013     BRA       0x3f14         					else                                                                        C:\FRC\Fcode- 04-05-06\tracking.c
                                           					{                                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           						// step the pan servo to its next destination                              C:\FRC\Fcode- 04-05-06\tracking.c
003eee   0e1f     MOVLW     0x1f           						temp_pan_servo += PAN_SEARCH_STEP_SIZE_DEFAULT;                            C:\FRC\Fcode- 04-05-06\tracking.c
003ef0   26de     ADDWF     0xde,0x1,0x0                                                                                    
003ef2   0e00     MOVLW     0x0                                                                                             
003ef4   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		                                                                               C:\FRC\Fcode- 04-05-06\tracking.c
                                           						// make sure its new position isn't beyond                                 C:\FRC\Fcode- 04-05-06\tracking.c
                                           						// the maximum value set in tracking.h                                     C:\FRC\Fcode- 04-05-06\tracking.c
003ef6   cfde     MOVFF     0xfde,0x0      						if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                  C:\FRC\Fcode- 04-05-06\tracking.c
003ef8   f000                                                                                                               
003efa   cfdd     MOVFF     0xfdd,0x1                                                                                       
003efc   f001                                                                                                               
003efe   90d8     BCF       0xd8,0x0,0x0                                                                                    
003f00   5001     MOVF      0x1,0x0,0x0                                                                                     
003f02   e604     BN        0x3f0c                                                                                          
003f04   0ef8     MOVLW     0xf8                                                                                            
003f06   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003f08   0e00     MOVLW     0x0                                                                                             
003f0a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003f0c   e303     BNC       0x3f14                                                                                          
                                           						{                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
003f0e   0ef8     MOVLW     0xf8           							temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                     C:\FRC\Fcode- 04-05-06\tracking.c
003f10   6ede     MOVWF     0xde,0x0                                                                                        
003f12   6add     CLRF      0xdd,0x0                                                                                        
                                           						}                                                                          C:\FRC\Fcode- 04-05-06\tracking.c
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\tracking.c
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           				// update the pan and tilt servo PWM value                                   C:\FRC\Fcode- 04-05-06\tracking.c
003f14   cfdf     MOVFF     0xfdf,0x184    				PAN_SERVO = (unsigned char)temp_pan_servo;                                   C:\FRC\Fcode- 04-05-06\tracking.c
003f16   f184                                                                                                               
003f18   0e02     MOVLW     0x2            				TILT_SERVO = (unsigned char)temp_tilt_servo;                                 C:\FRC\Fcode- 04-05-06\tracking.c
003f1a   cfdb     MOVFF     0xfdb,0x185                                                                                     
003f1c   f185                                                                                                               
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\tracking.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\tracking.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\tracking.c
003f1e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\tracking.c
003f20   ffe1                                                                                                               
003f22   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f24   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003f26   ffd9                                                                                                               
003f28   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\tracking.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * DESCRIPTION:                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * USAGE:                                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include <math.h>                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "user_routines.h"                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "serial_ports.h"                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "camera.h"                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "tracking.h"                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "terminal.h"                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "custom_vars.h"                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "adc.h"                                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #include "gyro.h"                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           extern unsigned char aBreakerWasTripped;                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //extern unsigned float bomb = '';                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //extern string andy_ligotti = "AHAHAHA|AHAHAHA|KABOOM|cheese";                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\FRC\Fcode- 04-05-06\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           */                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Max                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it exceeds 127 and the     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                limit switch is on.                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
0014ae   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Max(unsigned char switch_state, unsigned char *input_value)    C:\FRC\Fcode- 04-05-06\user_routines.c
0014b0   ffe6                                                                                                               
0014b2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014b4   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0014b6   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
0014b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014ba   e111     BNZ       0x14de                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
0014bc   0efc     MOVLW     0xfc               if(*input_value > 127)                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
0014be   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0014c0   ffe9                                                                                                               
0014c2   0efd     MOVLW     0xfd                                                                                            
0014c4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0014c6   ffea                                                                                                               
0014c8   50ef     MOVF      0xef,0x0,0x0                                                                                    
0014ca   087f     SUBLW     0x7f                                                                                            
0014cc   e208     BC        0x14de                                                                                          
0014ce   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
0014d0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0014d2   ffe9                                                                                                               
0014d4   0efd     MOVLW     0xfd                                                                                            
0014d6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0014d8   ffea                                                                                                               
0014da   0e7f     MOVLW     0x7f                                                                                            
0014dc   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
0014de   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0014e0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0014e2   ffd9                                                                                                               
0014e4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Min                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it's less than 127 and the C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                limit switch is on.                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
0014e6   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Min(unsigned char switch_state, unsigned char *input_value)    C:\FRC\Fcode- 04-05-06\user_routines.c
0014e8   ffe6                                                                                                               
0014ea   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014ec   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0014ee   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
0014f0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014f2   e113     BNZ       0x151a                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
0014f4   0efc     MOVLW     0xfc               if(*input_value < 127)                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
0014f6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0014f8   ffe9                                                                                                               
0014fa   0efd     MOVLW     0xfd                                                                                            
0014fc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0014fe   ffea                                                                                                               
001500   cfef     MOVFF     0xfef,0x0                                                                                       
001502   f000                                                                                                               
001504   0e7f     MOVLW     0x7f                                                                                            
001506   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001508   e208     BC        0x151a                                                                                          
00150a   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
00150c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00150e   ffe9                                                                                                               
001510   0efd     MOVLW     0xfd                                                                                            
001512   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001514   ffea                                                                                                               
001516   0e7f     MOVLW     0x7f                                                                                            
001518   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
00151a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
00151c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00151e   ffd9                                                                                                               
001520   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: Limit_Mix                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       Limits the mixed value for one joystick drive.                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   Default_Routine, this file                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     Argument             Type    IO   Description                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     --------             ----    --   -----------                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *     intermediate_value    int    I                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       unsigned char                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
001522   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Limit_Mix (int intermediate_value)                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001524   ffe6                                                                                                               
001526   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001528   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                             static int limited_value;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00152a   0efd     MOVLW     0xfd             if (intermediate_value < 2000)                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
00152c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00152e   f000                                                                                                               
001530   0efe     MOVLW     0xfe                                                                                            
001532   cfdb     MOVFF     0xfdb,0x1                                                                                       
001534   f001                                                                                                               
001536   90d8     BCF       0xd8,0x0,0x0                                                                                    
001538   5001     MOVF      0x1,0x0,0x0                                                                                     
00153a   e604     BN        0x1544                                                                                          
00153c   0ed0     MOVLW     0xd0                                                                                            
00153e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001540   0e07     MOVLW     0x7                                                                                             
001542   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001544   e206     BC        0x1552                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001546   0102     MOVLB     0x2                limited_value = 2000;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
001548   0ed0     MOVLW     0xd0                                                                                            
00154a   6f7c     MOVWF     0x7c,0x1                                                                                        
00154c   0e07     MOVLW     0x7                                                                                             
00154e   6f7d     MOVWF     0x7d,0x1                                                                                        
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001550   d019     BRA       0x1584           else if (intermediate_value > 2254)                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001552   0efd     MOVLW     0xfd                                                                                            
001554   cfdb     MOVFF     0xfdb,0x0                                                                                       
001556   f000                                                                                                               
001558   0efe     MOVLW     0xfe                                                                                            
00155a   cfdb     MOVFF     0xfdb,0x1                                                                                       
00155c   f001                                                                                                               
00155e   3401     RLCF      0x1,0x0,0x0                                                                                     
001560   e204     BC        0x156a                                                                                          
001562   5000     MOVF      0x0,0x0,0x0                                                                                     
001564   08ce     SUBLW     0xce                                                                                            
001566   0e08     MOVLW     0x8                                                                                             
001568   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00156a   e206     BC        0x1578                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
00156c   0102     MOVLB     0x2                limited_value = 2254;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
00156e   0ece     MOVLW     0xce                                                                                            
001570   6f7c     MOVWF     0x7c,0x1                                                                                        
001572   0e08     MOVLW     0x8                                                                                             
001574   6f7d     MOVWF     0x7d,0x1                                                                                        
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001576   d006     BRA       0x1584           else                                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001578   0efd     MOVLW     0xfd               limited_value = intermediate_value;                                          C:\FRC\Fcode- 04-05-06\user_routines.c
00157a   cfdb     MOVFF     0xfdb,0x27c                                                                                     
00157c   f27c                                                                                                               
00157e   0efe     MOVLW     0xfe                                                                                            
001580   cfdb     MOVFF     0xfdb,0x27d                                                                                     
001582   f27d                                                                                                               
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001584   c27c     MOVFF     0x27c,0x0        return (unsigned char) (limited_value - 2000);                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001586   f000                                                                                                               
001588   c27d     MOVFF     0x27d,0x1                                                                                       
00158a   f001                                                                                                               
00158c   0ed0     MOVLW     0xd0                                                                                            
00158e   5e00     SUBWF     0x0,0x1,0x0                                                                                     
001590   0e07     MOVLW     0x7                                                                                             
001592   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
001594   5000     MOVF      0x0,0x0,0x0                                                                                     
001596   d000     BRA       0x1598                                                                                          
001598   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
00159a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00159c   ffd9                                                                                                               
00159e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                You may modify and add to this function.                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           void User_Initialization (void)                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */       C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\FRC\Fcode- 04-05-06\user_routines.c
0015a0   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\FRC\Fcode- 04-05-06\user_routines.c
0015a2   8893     BSF       0x93,0x4,0x0                                                                                    
0015a4   8693     BSF       0x93,0x3,0x0                                                                                    
0015a6   8493     BSF       0x93,0x2,0x0                                                                                    
0015a8   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\FRC\Fcode- 04-05-06\user_routines.c
0015aa   8099     BSF       0x99,0x0,0x0                                                                                    
0015ac   8e93     BSF       0x93,0x7,0x0                                                                                    
0015ae   8c93     BSF       0x93,0x6,0x0                                                                                    
0015b0   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\FRC\Fcode- 04-05-06\user_routines.c
0015b2   829a     BSF       0x9a,0x1,0x0                                                                                    
0015b4   8699     BSF       0x99,0x3,0x0                                                                                    
0015b6   8499     BSF       0x99,0x2,0x0                                                                                    
0015b8   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\FRC\Fcode- 04-05-06\user_routines.c
0015ba   889a     BSF       0x9a,0x4,0x0                                                                                    
0015bc   8094     BSF       0x94,0x0,0x0                                                                                    
0015be   869a     BSF       0x9a,0x3,0x0                                                                                    
0015c0   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\FRC\Fcode- 04-05-06\user_routines.c
                                               /*                                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      is the same as the following:                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      ...                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                               */                                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\FRC\Fcode- 04-05-06\user_routines.c
0015c2   9c9a     BCF       0x9a,0x6,0x0     digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\FRC\Fcode- 04-05-06\user_routines.c
0015c4   9c91     BCF       0x91,0x6,0x0     rc_dig_out17 = 0;                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\FRC\Fcode- 04-05-06\user_routines.c
0015c6   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\FRC\Fcode- 04-05-06\user_routines.c
0015c8   0e7f     MOVLW     0x7f                                                                                            
0015ca   6f8b     MOVWF     0x8b,0x1                                                                                        
0015cc   c18b     MOVFF     0x18b,0x18a                                                                                     
0015ce   f18a                                                                                                               
0015d0   c18b     MOVFF     0x18b,0x189                                                                                     
0015d2   f189                                                                                                               
0015d4   c18b     MOVFF     0x18b,0x188                                                                                     
0015d6   f188                                                                                                               
0015d8   c18b     MOVFF     0x18b,0x187                                                                                     
0015da   f187                                                                                                               
0015dc   c18b     MOVFF     0x18b,0x186                                                                                     
0015de   f186                                                                                                               
0015e0   c18b     MOVFF     0x18b,0x185                                                                                     
0015e2   f185                                                                                                               
0015e4   c18b     MOVFF     0x18b,0x184                                                                                     
0015e6   f184                                                                                                               
0015e8   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\FRC\Fcode- 04-05-06\user_routines.c
0015ea   c193     MOVFF     0x193,0x192                                                                                     
0015ec   f192                                                                                                               
0015ee   c193     MOVFF     0x193,0x191                                                                                     
0015f0   f191                                                                                                               
0015f2   c193     MOVFF     0x193,0x190                                                                                     
0015f4   f190                                                                                                               
0015f6   c193     MOVFF     0x193,0x18f                                                                                     
0015f8   f18f                                                                                                               
0015fa   c193     MOVFF     0x193,0x18e                                                                                     
0015fc   f18e                                                                                                               
0015fe   c193     MOVFF     0x193,0x18d                                                                                     
001600   f18d                                                                                                               
001602   c193     MOVFF     0x193,0x18c                                                                                     
001604   f18c                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\FRC\Fcode- 04-05-06\user_routines.c
001606   0e00     MOVLW     0x0              Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                        C:\FRC\Fcode- 04-05-06\user_routines.c
001608   6ee6     MOVWF     0xe6,0x0                                                                                        
00160a   6ae6     CLRF      0xe6,0x0                                                                                        
00160c   6ee6     MOVWF     0xe6,0x0                                                                                        
00160e   6ae6     CLRF      0xe6,0x0                                                                                        
001610   6ee6     MOVWF     0xe6,0x0                                                                                        
001612   6ae6     CLRF      0xe6,0x0                                                                                        
001614   6ee6     MOVWF     0xe6,0x0                                                                                        
001616   6ae6     CLRF      0xe6,0x0                                                                                        
001618   ec62     CALL      0x2ac4,0x0                                                                                      
00161a   f015                                                                                                               
00161c   6ef5     MOVWF     0xf5,0x0                                                                                        
00161e   0e08     MOVLW     0x8                                                                                             
001620   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001622   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                             /*                                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    T2CON = 0;                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\FRC\Fcode- 04-05-06\user_routines.c
                                             */                                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001624   ec5e     CALL      0x46bc,0x0       Init_Serial_Port_One();                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
001626   f023                                                                                                               
001628   ec77     CALL      0x46ee,0x0       Init_Serial_Port_Two();                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
00162a   f023                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
00162c   0102     MOVLB     0x2              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\FRC\Fcode- 04-05-06\user_routines.c
00162e   0e01     MOVLW     0x1                                                                                             
001630   6f1b     MOVWF     0x1b,0x1                                                                                        
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           #endif                                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001632   ecc8     CALL      0x4990,0x0       Initialize_Gyro();                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
001634   f024                                                                                                               
001636   ec95     CALL      0x3f2a,0x0       Initialize_ADC();                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001638   f01f                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00163a   0e80     MOVLW     0x80             Putdata(&txdata);            /* DO NOT CHANGE! */                              C:\FRC\Fcode- 04-05-06\user_routines.c
00163c   6ee6     MOVWF     0xe6,0x0                                                                                        
00163e   0e01     MOVLW     0x1                                                                                             
001640   6ee6     MOVWF     0xe6,0x0                                                                                        
001642   ec20     CALL      0x2a40,0x0                                                                                      
001644   f015                                                                                                               
001646   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001648   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  Serial_Driver_Initialize();                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  printf("IFI 2006 User Processor Initialized ...\r");  /* Optional - Print initialization message. */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00164a   efa7     GOTO      0x294e           User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\FRC\Fcode- 04-05-06\user_routines.c
00164c   f014                                                                                                               
                                           }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                microprocessor.                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
00164e   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\FRC\Fcode- 04-05-06\user_routines.c
001650   ffe6                                                                                                               
001652   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001654   ffd9                                                                                                               
001656   0e04     MOVLW     0x4                                                                                             
001658   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
00165a   0ea0     MOVLW     0xa0           	Getdata(&rxdata);                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
00165c   6ee6     MOVWF     0xe6,0x0                                                                                        
00165e   0e01     MOVLW     0x1                                                                                             
001660   6ee6     MOVWF     0xe6,0x0                                                                                        
001662   ec07     CALL      0x2a0e,0x0                                                                                      
001664   f015                                                                                                               
001666   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001668   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// send diagnostic information to the terminal                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //	Tracking_Info_Terminal();                                                     C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// structure with the received tracking information.                            C:\FRC\Fcode- 04-05-06\user_routines.c
00166a   ec91     CALL      0x2f22,0x0     	Camera_Handler();                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
00166c   f017                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// This function reads data placed in the T_Packet_Data                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// structure by the Camera_Handler() function and if new                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// tracking data is available, attempts to keep the center                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// of the tracked object in the center of the camera's                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// image using two servos that drive a pan/tilt platform.                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// If the camera doesn't have the object within it's field                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// of view, this function will execute a search algorithm                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// in an attempt to find the object.                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//if (p4_sw_top > 0) {  //only track and waste battery if the switch is toggled. C:\FRC\Fcode- 04-05-06\user_routines.c
00166e   ec92     CALL      0x3b24,0x0     		Servo_Track();                                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001670   f01d                                                                                                               
                                           	//}                                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001672   0e80     MOVLW     0x80           	Putdata(&txdata);       //DO NOT CHANGE! CHANGING IS A VIOLATION OF LAW 127.02.255 AND YOU WILL GET YOUR ASS KICKED SO HARD THAT YOU WONT BE ABLE TO FEEL IT FOR WEEKS C:\FRC\Fcode- 04-05-06\user_routines.c
001674   6ee6     MOVWF     0xe6,0x0                                                                                        
001676   0e01     MOVLW     0x1                                                                                             
001678   6ee6     MOVWF     0xe6,0x0                                                                                        
00167a   ec20     CALL      0x2a40,0x0                                                                                      
00167c   f015                                                                                                               
00167e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001680   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	static unsigned int i = 0;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	static unsigned int j = 0;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//int temp_gyro_rate;                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	long temp_gyro_angle;                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//int temp_gyro_bias;                                                           C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001682   0ea0     MOVLW     0xa0           	Getdata(&rxdata);   /* Get fresh data from the master microprocessor. */        C:\FRC\Fcode- 04-05-06\user_routines.c
001684   6ee6     MOVWF     0xe6,0x0                                                                                        
001686   0e01     MOVLW     0x1                                                                                             
001688   6ee6     MOVWF     0xe6,0x0                                                                                        
00168a   ec07     CALL      0x2a0e,0x0                                                                                      
00168c   f015                                                                                                               
00168e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001690   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001692   010f     MOVLB     0xf            	i++;                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001694   2b58     INCF      0x58,0x1,0x1                                                                                    
001696   0e00     MOVLW     0x0                                                                                             
001698   2359     ADDWFC    0x59,0x1,0x1                                                                                    
00169a   2b5a     INCF      0x5a,0x1,0x1   	j++; // this will rollover every ~1000 seconds                                  C:\FRC\Fcode- 04-05-06\user_routines.c
00169c   235b     ADDWFC    0x5b,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00169e   0e01     MOVLW     0x1            	if(j == 1)                                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
0016a0   195a     XORWF     0x5a,0x0,0x1                                                                                    
0016a2   e101     BNZ       0x16a6                                                                                          
0016a4   515b     MOVF      0x5b,0x0,0x1                                                                                    
0016a6   e110     BNZ       0x16c8                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
0016a8   0e3a     MOVLW     0x3a           		printf("\rCalculating Gyro Bias...");                                          C:\FRC\Fcode- 04-05-06\user_routines.c
0016aa   6e00     MOVWF     0x0,0x0                                                                                         
0016ac   0e4f     MOVLW     0x4f                                                                                            
0016ae   6e01     MOVWF     0x1,0x0                                                                                         
0016b0   6a02     CLRF      0x2,0x0                                                                                         
0016b2   c000     MOVFF     0x0,0xfe6                                                                                       
0016b4   ffe6                                                                                                               
0016b6   c001     MOVFF     0x1,0xfe6                                                                                       
0016b8   ffe6                                                                                                               
0016ba   c002     MOVFF     0x2,0xfe6                                                                                       
0016bc   ffe6                                                                                                               
0016be   ece6     CALL      0x51cc,0x0                                                                                      
0016c0   f028                                                                                                               
0016c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0016c8   010f     MOVLB     0xf            	if(j == 6)                                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
0016ca   0e06     MOVLW     0x6                                                                                             
0016cc   195a     XORWF     0x5a,0x0,0x1                                                                                    
0016ce   e101     BNZ       0x16d2                                                                                          
0016d0   515b     MOVF      0x5b,0x0,0x1                                                                                    
0016d2   e102     BNZ       0x16d8                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		// start a gyro bias calculation                                               C:\FRC\Fcode- 04-05-06\user_routines.c
0016d4   ec6d     CALL      0x4ada,0x0     		Start_Gyro_Bias_Calc();                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
0016d6   f025                                                                                                               
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0016d8   010f     MOVLB     0xf            	if(j == 200)                                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
0016da   0ec8     MOVLW     0xc8                                                                                            
0016dc   195a     XORWF     0x5a,0x0,0x1                                                                                    
0016de   e101     BNZ       0x16e2                                                                                          
0016e0   515b     MOVF      0x5b,0x0,0x1                                                                                    
0016e2   e114     BNZ       0x170c                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		// terminate the gyro bias calculation                                         C:\FRC\Fcode- 04-05-06\user_routines.c
0016e4   ec79     CALL      0x4af2,0x0     		Stop_Gyro_Bias_Calc();                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
0016e6   f025                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		// reset the gyro heading angle                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0016e8   ecaf     CALL      0x4b5e,0x0     		Reset_Gyro_Angle();                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0016ea   f025                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0016ec   0e34     MOVLW     0x34           		printf("Done\r");                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
0016ee   6e00     MOVWF     0x0,0x0                                                                                         
0016f0   0e4f     MOVLW     0x4f                                                                                            
0016f2   6e01     MOVWF     0x1,0x0                                                                                         
0016f4   6a02     CLRF      0x2,0x0                                                                                         
0016f6   c000     MOVFF     0x0,0xfe6                                                                                       
0016f8   ffe6                                                                                                               
0016fa   c001     MOVFF     0x1,0xfe6                                                                                       
0016fc   ffe6                                                                                                               
0016fe   c002     MOVFF     0x2,0xfe6                                                                                       
001700   ffe6                                                                                                               
001702   ece6     CALL      0x51cc,0x0                                                                                      
001704   f028                                                                                                               
001706   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001708   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00170a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00170c   010f     MOVLB     0xf            	if(i >= 30 && j >= 200)                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
00170e   0e1e     MOVLW     0x1e                                                                                            
001710   5d58     SUBWF     0x58,0x0,0x1                                                                                    
001712   0e00     MOVLW     0x0                                                                                             
001714   5959     SUBWFB    0x59,0x0,0x1                                                                                    
001716   e314     BNC       0x1740                                                                                          
001718   0ec8     MOVLW     0xc8                                                                                            
00171a   5d5a     SUBWF     0x5a,0x0,0x1                                                                                    
00171c   0e00     MOVLW     0x0                                                                                             
00171e   595b     SUBWFB    0x5b,0x0,0x1                                                                                    
001720   e30f     BNC       0x1740                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		//temp_gyro_rate = Get_Gyro_Rate();                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001722   ec25     CALL      0x4a4a,0x0     		temp_gyro_angle = Get_Gyro_Angle();                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001724   f025                                                                                                               
001726   c033     MOVFF     0x33,0xfde                                                                                      
001728   ffde                                                                                                               
00172a   c034     MOVFF     0x34,0xfde                                                                                      
00172c   ffde                                                                                                               
00172e   c035     MOVFF     0x35,0xfde                                                                                      
001730   ffde                                                                                                               
001732   c036     MOVFF     0x36,0xfdd                                                                                      
001734   ffdd                                                                                                               
001736   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001738   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           		//printf(" Gyro Rate=%d\r\n", temp_gyro_rate);                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		//printf("Gyro Angle=%d\r\n\r\n", (int)temp_gyro_angle);                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00173a   010f     MOVLB     0xf            		i = 0;                                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
00173c   6b58     CLRF      0x58,0x1                                                                                        
00173e   6b59     CLRF      0x59,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  static unsigned char i;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  Getdata(&rxdata);   /* Get fresh data from the master microprocessor. */     C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001740   dae0     RCALL     0x1d02           Default_Routine();  /* Optional.  See below. */                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  /* Add your own code here. (a printf will not be displayed when connected to the breaker panel unless a Y cable is used) */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  printf("Port1 Y %3d, X %3d, Fire %d, Top %d\r",p1_y,p1_x,p1_sw_trig,p1_sw_top);  /* printf EXAMPLE */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  /* Eample code to check if a breaker was ever tripped. */                    C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  if (aBreakerWasTripped)                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  {                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //    for (i=1;i<29;i++)                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //    {                                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //      if (Breaker_Tripped(i))                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //        User_Byte1 = i;  /* Update the last breaker tripped on User_Byte1 (to demonstrate the use of a user byte)  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                            Normally, you do something else if a breaker got tripped (ex: limit a PWM output)     */ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //    }                                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //  Putdata(&txdata);             /* DO NOT CHANGE! */                           C:\FRC\Fcode- 04-05-06\user_routines.c
001742   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001744   ffe1                                                                                                               
001746   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001748   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00174a   ffd9                                                                                                               
00174c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //function FLIP_AXIS                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
00174e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char flip_axis(unsigned char valueToFlip, unsigned char axisFlipOver) { C:\FRC\Fcode- 04-05-06\user_routines.c
001750   ffe6                                                                                                               
001752   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001754   ffd9                                                                                                               
001756   0e02     MOVLW     0x2                                                                                             
001758   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnValue;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
00175a   0efe     MOVLW     0xfe           	returnValue = (-1)*(valueToFlip - axisFlipOver);                                C:\FRC\Fcode- 04-05-06\user_routines.c
00175c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00175e   ffe6                                                                                                               
001760   0efd     MOVLW     0xfd                                                                                            
001762   50db     MOVF      0xdb,0x0,0x0                                                                                    
001764   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001766   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001768   0dff     MULLW     0xff                                                                                            
00176a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00176c   6ede     MOVWF     0xde,0x0                                                                                        
00176e   6add     CLRF      0xdd,0x0                                                                                        
001770   0efd     MOVLW     0xfd           	returnValue += axisFlipOver;                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
001772   50db     MOVF      0xdb,0x0,0x0                                                                                    
001774   26de     ADDWF     0xde,0x1,0x0                                                                                    
001776   0e00     MOVLW     0x0                                                                                             
001778   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
00177a   50df     MOVF      0xdf,0x0,0x0   	return returnValue;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
00177c   d000     BRA       0x177e                                                                                          
00177e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001780   ffe1                                                                                                               
001782   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001784   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001786   ffd9                                                                                                               
001788   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
00178a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char amp_pwm(unsigned char valueToAccel, unsigned char factor) {        C:\FRC\Fcode- 04-05-06\user_routines.c
00178c   ffe6                                                                                                               
00178e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001790   ffd9                                                                                                               
001792   0e02     MOVLW     0x2                                                                                             
001794   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnValue;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001796   0efd     MOVLW     0xfd           	returnValue = ((factor*(valueToAccel-127)))+127;                                C:\FRC\Fcode- 04-05-06\user_routines.c
001798   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00179a   ffe6                                                                                                               
00179c   0efe     MOVLW     0xfe                                                                                            
00179e   50db     MOVF      0xdb,0x0,0x0                                                                                    
0017a0   0f81     ADDLW     0x81                                                                                            
0017a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017a4   02e7     MULWF     0xe7,0x0                                                                                        
0017a6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0017a8   0f7f     ADDLW     0x7f                                                                                            
0017aa   6ede     MOVWF     0xde,0x0                                                                                        
0017ac   6add     CLRF      0xdd,0x0                                                                                        
0017ae   cfde     MOVFF     0xfde,0x0      	if (returnValue > 255) {                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
0017b0   f000                                                                                                               
0017b2   cfdd     MOVFF     0xfdd,0x1                                                                                       
0017b4   f001                                                                                                               
0017b6   3401     RLCF      0x1,0x0,0x0                                                                                     
0017b8   e204     BC        0x17c2                                                                                          
0017ba   5000     MOVF      0x0,0x0,0x0                                                                                     
0017bc   08ff     SUBLW     0xff                                                                                            
0017be   0e00     MOVLW     0x0                                                                                             
0017c0   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0017c2   e203     BC        0x17ca                                                                                          
0017c4   68de     SETF      0xde,0x0       		returnValue = 255;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0017c6   6add     CLRF      0xdd,0x0                                                                                        
0017c8   d00a     BRA       0x17de         	}else if (returnValue < 0) {                                                    C:\FRC\Fcode- 04-05-06\user_routines.c
0017ca   cfde     MOVFF     0xfde,0x0                                                                                       
0017cc   f000                                                                                                               
0017ce   cfdd     MOVFF     0xfdd,0x1                                                                                       
0017d0   f001                                                                                                               
0017d2   0100     MOVLB     0x0                                                                                             
0017d4   0e80     MOVLW     0x80                                                                                            
0017d6   1401     ANDWF     0x1,0x0,0x0                                                                                     
0017d8   e002     BZ        0x17de                                                                                          
0017da   6ade     CLRF      0xde,0x0       		returnValue = 0;                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
0017dc   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
0017de   50df     MOVF      0xdf,0x0,0x0   	return returnValue;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0017e0   d000     BRA       0x17e2                                                                                          
0017e2   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0017e4   ffe1                                                                                                               
0017e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017e8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0017ea   ffd9                                                                                                               
0017ec   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0017ee   cfd9     MOVFF     0xfd9,0xfe6    unsigned char damp_pwm (unsigned char valueToDampen, unsigned char factor) {     C:\FRC\Fcode- 04-05-06\user_routines.c
0017f0   ffe6                                                                                                               
0017f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0017f4   ffd9                                                                                                               
0017f6   0e02     MOVLW     0x2                                                                                             
0017f8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnValue;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0017fa   0efe     MOVLW     0xfe           	returnValue = ((valueToDampen-127)/factor)+127;                                 C:\FRC\Fcode- 04-05-06\user_routines.c
0017fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0017fe   0f81     ADDLW     0x81                                                                                            
001800   6e00     MOVWF     0x0,0x0                                                                                         
001802   c000     MOVFF     0x0,0x36                                                                                        
001804   f036                                                                                                               
001806   0efd     MOVLW     0xfd                                                                                            
001808   cfdb     MOVFF     0xfdb,0x3b                                                                                      
00180a   f03b                                                                                                               
00180c   ecf0     CALL      0x55e0,0x0                                                                                      
00180e   f02a                                                                                                               
001810   5036     MOVF      0x36,0x0,0x0                                                                                    
001812   0f7f     ADDLW     0x7f                                                                                            
001814   6ede     MOVWF     0xde,0x0                                                                                        
001816   6add     CLRF      0xdd,0x0                                                                                        
001818   50df     MOVF      0xdf,0x0,0x0   	return returnValue;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
00181a   d000     BRA       0x181c                                                                                          
00181c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
00181e   ffe1                                                                                                               
001820   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001822   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001824   ffd9                                                                                                               
001826   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001828   cfd9     MOVFF     0xfd9,0xfe6    unsigned char set_pwm_deadband(unsigned char valueToSet, unsigned char deadband, unsigned char maxLimit, unsigned char minLimit) { C:\FRC\Fcode- 04-05-06\user_routines.c
00182a   ffe6                                                                                                               
00182c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00182e   ffd9                                                                                                               
001830   0e02     MOVLW     0x2                                                                                             
001832   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnValue;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//rev @ cokmpetetion: values spread by |13|                                     C:\FRC\Fcode- 04-05-06\user_routines.c
001834   0efe     MOVLW     0xfe           	if (valueToSet > 128) {  // around center point of 124                          C:\FRC\Fcode- 04-05-06\user_routines.c
001836   50db     MOVF      0xdb,0x0,0x0                                                                                    
001838   6e00     MOVWF     0x0,0x0                                                                                         
00183a   6a01     CLRF      0x1,0x0                                                                                         
00183c   3401     RLCF      0x1,0x0,0x0                                                                                     
00183e   e204     BC        0x1848                                                                                          
001840   5000     MOVF      0x0,0x0,0x0                                                                                     
001842   0880     SUBLW     0x80                                                                                            
001844   0e00     MOVLW     0x0                                                                                             
001846   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001848   e213     BC        0x1870                                                                                          
                                           	//	returnValue = ((valueToSet-127)*((127-deadband)/127))+deadband+127;          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//	returnValue = valueToSet + deadband;                                         C:\FRC\Fcode- 04-05-06\user_routines.c
00184a   0e0c     MOVLW     0xc            		returnValue = 158 + ((p4_x)/12);  //189| 162 for shopfloor, 167 for wresting floor - competition floor?? C:\FRC\Fcode- 04-05-06\user_routines.c
00184c   6e02     MOVWF     0x2,0x0                                                                                         
00184e   c002     MOVFF     0x2,0x3b                                                                                        
001850   f03b                                                                                                               
001852   c1ad     MOVFF     0x1ad,0x36                                                                                      
001854   f036                                                                                                               
001856   ecf0     CALL      0x55e0,0x0                                                                                      
001858   f02a                                                                                                               
00185a   5036     MOVF      0x36,0x0,0x0                                                                                    
00185c   6a01     CLRF      0x1,0x0                                                                                         
00185e   0f9e     ADDLW     0x9e                                                                                            
001860   6e00     MOVWF     0x0,0x0                                                                                         
001862   0e00     MOVLW     0x0                                                                                             
001864   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001866   c000     MOVFF     0x0,0xfde                                                                                       
001868   ffde                                                                                                               
00186a   c001     MOVFF     0x1,0xfdd                                                                                       
00186c   ffdd                                                                                                               
00186e   d01a     BRA       0x18a4         	}else if (valueToSet < 120){  //around center point of 124                      C:\FRC\Fcode- 04-05-06\user_routines.c
001870   0e78     MOVLW     0x78                                                                                            
001872   6ef3     MOVWF     0xf3,0x0                                                                                        
001874   0efe     MOVLW     0xfe                                                                                            
001876   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001878   fff4                                                                                                               
00187a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00187c   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
00187e   e20f     BC        0x189e                                                                                          
                                           	//	returnValue = ((valueToSet+127)*((127-deadband)/127))-deadband-127;          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//	returnValue = valueToSet - deadband;                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001880   0e66     MOVLW     0x66           		returnValue = 102 - ((p4_x)/12); //89 | 102 for shopfloor, 107 for wresting floor - competition floor?? C:\FRC\Fcode- 04-05-06\user_routines.c
001882   6e00     MOVWF     0x0,0x0                                                                                         
001884   0e0c     MOVLW     0xc                                                                                             
001886   6e01     MOVWF     0x1,0x0                                                                                         
001888   c001     MOVFF     0x1,0x3b                                                                                        
00188a   f03b                                                                                                               
00188c   c1ad     MOVFF     0x1ad,0x36                                                                                      
00188e   f036                                                                                                               
001890   ecf0     CALL      0x55e0,0x0                                                                                      
001892   f02a                                                                                                               
001894   5036     MOVF      0x36,0x0,0x0                                                                                    
001896   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001898   6ede     MOVWF     0xde,0x0                                                                                        
00189a   6add     CLRF      0xdd,0x0                                                                                        
00189c   d003     BRA       0x18a4         	}else{                                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
00189e   0e7f     MOVLW     0x7f           		returnValue = 127;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0018a0   6ede     MOVWF     0xde,0x0                                                                                        
0018a2   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//printf("rval: %d\r\n", returnValue);                                          C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	/*if (returnValue > maxLimit) {                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		returnValue = maxLimit;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	}else if (returnValue < minLimit) {                                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                           		returnValue = minLimit;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	}*/                                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0018a4   50df     MOVF      0xdf,0x0,0x0   	return returnValue;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0018a6   d000     BRA       0x18a8                                                                                          
0018a8   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
0018aa   ffe1                                                                                                               
0018ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018ae   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0018b0   ffd9                                                                                                               
0018b2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0018b4   cfd9     MOVFF     0xfd9,0xfe6    unsigned char PIkDControl(char Kp, char Ki, char Kd, int error) {                C:\FRC\Fcode- 04-05-06\user_routines.c
0018b6   ffe6                                                                                                               
0018b8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0018ba   ffd9                                                                                                               
0018bc   0e06     MOVLW     0x6                                                                                             
0018be   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	static int errorTotal = 0;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	static int prevError = 0;                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
0018c0   6ade     CLRF      0xde,0x0       	int P = 0;                                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
0018c2   6add     CLRF      0xdd,0x0                                                                                        
0018c4   0e02     MOVLW     0x2            	int I = 0;                                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
0018c6   6adb     CLRF      0xdb,0x0                                                                                        
0018c8   0e03     MOVLW     0x3                                                                                             
0018ca   6adb     CLRF      0xdb,0x0                                                                                        
0018cc   0e04     MOVLW     0x4            	int D = 0;                                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
0018ce   6adb     CLRF      0xdb,0x0                                                                                        
0018d0   0e05     MOVLW     0x5                                                                                             
0018d2   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0018d4   0efe     MOVLW     0xfe           	P = (error*Kp)/100;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
0018d6   cfdb     MOVFF     0xfdb,0x2                                                                                       
0018d8   f002                                                                                                               
0018da   6a03     CLRF      0x3,0x0                                                                                         
0018dc   be02     BTFSC     0x2,0x7,0x0                                                                                     
0018de   6803     SETF      0x3,0x0                                                                                         
0018e0   0efa     MOVLW     0xfa                                                                                            
0018e2   cfdb     MOVFF     0xfdb,0x35                                                                                      
0018e4   f035                                                                                                               
0018e6   0efb     MOVLW     0xfb                                                                                            
0018e8   cfdb     MOVFF     0xfdb,0x36                                                                                      
0018ea   f036                                                                                                               
0018ec   c002     MOVFF     0x2,0x3a                                                                                        
0018ee   f03a                                                                                                               
0018f0   c003     MOVFF     0x3,0x3b                                                                                        
0018f2   f03b                                                                                                               
0018f4   ec89     CALL      0x3912,0x0                                                                                      
0018f6   f01c                                                                                                               
0018f8   c033     MOVFF     0x33,0x0                                                                                        
0018fa   f000                                                                                                               
0018fc   c034     MOVFF     0x34,0x1                                                                                        
0018fe   f001                                                                                                               
001900   0e64     MOVLW     0x64                                                                                            
001902   6e3a     MOVWF     0x3a,0x0                                                                                        
001904   6a3b     CLRF      0x3b,0x0                                                                                        
001906   c000     MOVFF     0x0,0x35                                                                                        
001908   f035                                                                                                               
00190a   c001     MOVFF     0x1,0x36                                                                                        
00190c   f036                                                                                                               
00190e   ec2f     CALL      0x385e,0x0                                                                                      
001910   f01c                                                                                                               
001912   c035     MOVFF     0x35,0x0                                                                                        
001914   f000                                                                                                               
001916   c036     MOVFF     0x36,0x1                                                                                        
001918   f001                                                                                                               
00191a   c000     MOVFF     0x0,0xfde                                                                                       
00191c   ffde                                                                                                               
00191e   c001     MOVFF     0x1,0xfdd                                                                                       
001920   ffdd                                                                                                               
001922   0efd     MOVLW     0xfd           	I = (errorTotal*Ki)/100;                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
001924   cfdb     MOVFF     0xfdb,0x2                                                                                       
001926   f002                                                                                                               
001928   6a03     CLRF      0x3,0x0                                                                                         
00192a   be02     BTFSC     0x2,0x7,0x0                                                                                     
00192c   6803     SETF      0x3,0x0                                                                                         
00192e   010f     MOVLB     0xf                                                                                             
001930   5002     MOVF      0x2,0x0,0x0                                                                                     
001932   035c     MULWF     0x5c,0x1                                                                                        
001934   cff3     MOVFF     0xff3,0x0                                                                                       
001936   f000                                                                                                               
001938   cff4     MOVFF     0xff4,0x1                                                                                       
00193a   f001                                                                                                               
00193c   035d     MULWF     0x5d,0x1                                                                                        
00193e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001940   0100     MOVLB     0x0                                                                                             
001942   2601     ADDWF     0x1,0x1,0x0                                                                                     
001944   5003     MOVF      0x3,0x0,0x0                                                                                     
001946   010f     MOVLB     0xf                                                                                             
001948   035c     MULWF     0x5c,0x1                                                                                        
00194a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00194c   0100     MOVLB     0x0                                                                                             
00194e   2601     ADDWF     0x1,0x1,0x0                                                                                     
001950   0e64     MOVLW     0x64                                                                                            
001952   6e3a     MOVWF     0x3a,0x0                                                                                        
001954   6a3b     CLRF      0x3b,0x0                                                                                        
001956   c000     MOVFF     0x0,0x35                                                                                        
001958   f035                                                                                                               
00195a   c001     MOVFF     0x1,0x36                                                                                        
00195c   f036                                                                                                               
00195e   ec2f     CALL      0x385e,0x0                                                                                      
001960   f01c                                                                                                               
001962   c035     MOVFF     0x35,0x0                                                                                        
001964   f000                                                                                                               
001966   c036     MOVFF     0x36,0x1                                                                                        
001968   f001                                                                                                               
00196a   0e02     MOVLW     0x2                                                                                             
00196c   c000     MOVFF     0x0,0xfdb                                                                                       
00196e   ffdb                                                                                                               
001970   0e03     MOVLW     0x3                                                                                             
001972   c001     MOVFF     0x1,0xfdb                                                                                       
001974   ffdb                                                                                                               
001976   0efa     MOVLW     0xfa           	D = ((error - prevError)*Kd)/100;                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001978   cfdb     MOVFF     0xfdb,0x35                                                                                      
00197a   f035                                                                                                               
00197c   0efb     MOVLW     0xfb                                                                                            
00197e   cfdb     MOVFF     0xfdb,0x36                                                                                      
001980   f036                                                                                                               
001982   010f     MOVLB     0xf                                                                                             
001984   515e     MOVF      0x5e,0x0,0x1                                                                                    
001986   5c35     SUBWF     0x35,0x0,0x0                                                                                    
001988   6e02     MOVWF     0x2,0x0                                                                                         
00198a   515f     MOVF      0x5f,0x0,0x1                                                                                    
00198c   5836     SUBWFB    0x36,0x0,0x0                                                                                    
00198e   6e03     MOVWF     0x3,0x0                                                                                         
001990   0efc     MOVLW     0xfc                                                                                            
001992   cfdb     MOVFF     0xfdb,0x4                                                                                       
001994   f004                                                                                                               
001996   6a05     CLRF      0x5,0x0                                                                                         
001998   be04     BTFSC     0x4,0x7,0x0                                                                                     
00199a   6805     SETF      0x5,0x0                                                                                         
00199c   0100     MOVLB     0x0                                                                                             
00199e   5004     MOVF      0x4,0x0,0x0                                                                                     
0019a0   0202     MULWF     0x2,0x0                                                                                         
0019a2   cff3     MOVFF     0xff3,0x0                                                                                       
0019a4   f000                                                                                                               
0019a6   cff4     MOVFF     0xff4,0x1                                                                                       
0019a8   f001                                                                                                               
0019aa   0203     MULWF     0x3,0x0                                                                                         
0019ac   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0019ae   2601     ADDWF     0x1,0x1,0x0                                                                                     
0019b0   5005     MOVF      0x5,0x0,0x0                                                                                     
0019b2   0202     MULWF     0x2,0x0                                                                                         
0019b4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0019b6   2601     ADDWF     0x1,0x1,0x0                                                                                     
0019b8   0e64     MOVLW     0x64                                                                                            
0019ba   6e3a     MOVWF     0x3a,0x0                                                                                        
0019bc   6a3b     CLRF      0x3b,0x0                                                                                        
0019be   c000     MOVFF     0x0,0x35                                                                                        
0019c0   f035                                                                                                               
0019c2   c001     MOVFF     0x1,0x36                                                                                        
0019c4   f036                                                                                                               
0019c6   ec2f     CALL      0x385e,0x0                                                                                      
0019c8   f01c                                                                                                               
0019ca   c035     MOVFF     0x35,0x0                                                                                        
0019cc   f000                                                                                                               
0019ce   c036     MOVFF     0x36,0x1                                                                                        
0019d0   f001                                                                                                               
0019d2   0e04     MOVLW     0x4                                                                                             
0019d4   c000     MOVFF     0x0,0xfdb                                                                                       
0019d6   ffdb                                                                                                               
0019d8   0e05     MOVLW     0x5                                                                                             
0019da   c001     MOVFF     0x1,0xfdb                                                                                       
0019dc   ffdb                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0019de   0efa     MOVLW     0xfa           	errorTotal += error;                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
0019e0   cfdb     MOVFF     0xfdb,0x35                                                                                      
0019e2   f035                                                                                                               
0019e4   0efb     MOVLW     0xfb                                                                                            
0019e6   cfdb     MOVFF     0xfdb,0x36                                                                                      
0019e8   f036                                                                                                               
0019ea   5035     MOVF      0x35,0x0,0x0                                                                                    
0019ec   010f     MOVLB     0xf                                                                                             
0019ee   275c     ADDWF     0x5c,0x1,0x1                                                                                    
0019f0   5036     MOVF      0x36,0x0,0x0                                                                                    
0019f2   235d     ADDWFC    0x5d,0x1,0x1                                                                                    
0019f4   0efa     MOVLW     0xfa           	prevError = error;                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
0019f6   cfdb     MOVFF     0xfdb,0xf5e                                                                                     
0019f8   ff5e                                                                                                               
0019fa   0efb     MOVLW     0xfb                                                                                            
0019fc   cfdb     MOVFF     0xfdb,0xf5f                                                                                     
0019fe   ff5f                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//Saturate the P value                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
001a00   cfde     MOVFF     0xfde,0x0      	if (P > 60) {   //Value for matted gym floor 50 ; test 60 for carpet            C:\FRC\Fcode- 04-05-06\user_routines.c
001a02   f000                                                                                                               
001a04   cfdd     MOVFF     0xfdd,0x1                                                                                       
001a06   f001                                                                                                               
001a08   3401     RLCF      0x1,0x0,0x0                                                                                     
001a0a   e204     BC        0x1a14                                                                                          
001a0c   5000     MOVF      0x0,0x0,0x0                                                                                     
001a0e   083c     SUBLW     0x3c                                                                                            
001a10   0e00     MOVLW     0x0                                                                                             
001a12   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001a14   e204     BC        0x1a1e                                                                                          
001a16   0e3c     MOVLW     0x3c           		P = 60;                                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
001a18   6ede     MOVWF     0xde,0x0                                                                                        
001a1a   6add     CLRF      0xdd,0x0                                                                                        
001a1c   d00f     BRA       0x1a3c         	}else if (P < -70) { //Value for matted gym floor -60; test -70 for Caarpet     C:\FRC\Fcode- 04-05-06\user_routines.c
001a1e   cfde     MOVFF     0xfde,0x0                                                                                       
001a20   f000                                                                                                               
001a22   cfdd     MOVFF     0xfdd,0x1                                                                                       
001a24   f001                                                                                                               
001a26   80d8     BSF       0xd8,0x0,0x0                                                                                    
001a28   5001     MOVF      0x1,0x0,0x0                                                                                     
001a2a   e704     BNN       0x1a34                                                                                          
001a2c   0eba     MOVLW     0xba                                                                                            
001a2e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001a30   0eff     MOVLW     0xff                                                                                            
001a32   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001a34   e203     BC        0x1a3c                                                                                          
001a36   0eba     MOVLW     0xba           		P = -70;                                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
001a38   6ede     MOVWF     0xde,0x0                                                                                        
001a3a   68dd     SETF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//Saturate the Total Error                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
001a3c   355d     RLCF      0x5d,0x0,0x1   	if (errorTotal > 600) {                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001a3e   e204     BC        0x1a48                                                                                          
001a40   515c     MOVF      0x5c,0x0,0x1                                                                                    
001a42   0858     SUBLW     0x58                                                                                            
001a44   0e02     MOVLW     0x2                                                                                             
001a46   555d     SUBFWB    0x5d,0x0,0x1                                                                                    
001a48   e205     BC        0x1a54                                                                                          
001a4a   0e58     MOVLW     0x58           		errorTotal = 600;                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001a4c   6f5c     MOVWF     0x5c,0x1                                                                                        
001a4e   0e02     MOVLW     0x2                                                                                             
001a50   6f5d     MOVWF     0x5d,0x1                                                                                        
001a52   d00c     BRA       0x1a6c         	}else if (errorTotal < -600) {                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
001a54   80d8     BSF       0xd8,0x0,0x0                                                                                    
001a56   515d     MOVF      0x5d,0x0,0x1                                                                                    
001a58   e704     BNN       0x1a62                                                                                          
001a5a   0ea8     MOVLW     0xa8                                                                                            
001a5c   5d5c     SUBWF     0x5c,0x0,0x1                                                                                    
001a5e   0efd     MOVLW     0xfd                                                                                            
001a60   595d     SUBWFB    0x5d,0x0,0x1                                                                                    
001a62   e204     BC        0x1a6c                                                                                          
001a64   0ea8     MOVLW     0xa8           		errorTotal = -600;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
001a66   6f5c     MOVWF     0x5c,0x1                                                                                        
001a68   0efd     MOVLW     0xfd                                                                                            
001a6a   6f5d     MOVWF     0x5d,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//Kleggs Integrator	                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001a6c   0efa     MOVLW     0xfa           	if (error < -2 || error > 2) {                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
001a6e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001a70   f000                                                                                                               
001a72   0efb     MOVLW     0xfb                                                                                            
001a74   cfdb     MOVFF     0xfdb,0x1                                                                                       
001a76   f001                                                                                                               
001a78   80d8     BSF       0xd8,0x0,0x0                                                                                    
001a7a   5001     MOVF      0x1,0x0,0x0                                                                                     
001a7c   e704     BNN       0x1a86                                                                                          
001a7e   0efe     MOVLW     0xfe                                                                                            
001a80   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001a82   0eff     MOVLW     0xff                                                                                            
001a84   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001a86   e30d     BNC       0x1aa2                                                                                          
001a88   0efa     MOVLW     0xfa                                                                                            
001a8a   cfdb     MOVFF     0xfdb,0x2                                                                                       
001a8c   f002                                                                                                               
001a8e   0efb     MOVLW     0xfb                                                                                            
001a90   cfdb     MOVFF     0xfdb,0x3                                                                                       
001a92   f003                                                                                                               
001a94   3403     RLCF      0x3,0x0,0x0                                                                                     
001a96   e204     BC        0x1aa0                                                                                          
001a98   5002     MOVF      0x2,0x0,0x0                                                                                     
001a9a   0802     SUBLW     0x2                                                                                             
001a9c   0e00     MOVLW     0x0                                                                                             
001a9e   5403     SUBFWB    0x3,0x0,0x0                                                                                     
001aa0   e202     BC        0x1aa6                                                                                          
001aa2   6b5c     CLRF      0x5c,0x1       		errorTotal = 0;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001aa4   6b5d     CLRF      0x5d,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	//printf("P: %d | ", P);                                                        C:\FRC\Fcode- 04-05-06\user_routines.c
001aa6   0efd     MOVLW     0xfd           	printf("P: %d | I: %d | D: %d | error: %d | Kp: %d | Ki: %d\r\n", P, I, D, error, Kp, Ki); C:\FRC\Fcode- 04-05-06\user_routines.c
001aa8   cfdb     MOVFF     0xfdb,0x0                                                                                       
001aaa   f000                                                                                                               
001aac   6a01     CLRF      0x1,0x0                                                                                         
001aae   be00     BTFSC     0x0,0x7,0x0                                                                                     
001ab0   6801     SETF      0x1,0x0                                                                                         
001ab2   c000     MOVFF     0x0,0xfe6                                                                                       
001ab4   ffe6                                                                                                               
001ab6   c001     MOVFF     0x1,0xfe6                                                                                       
001ab8   ffe6                                                                                                               
001aba   0efe     MOVLW     0xfe                                                                                            
001abc   cfdb     MOVFF     0xfdb,0x2                                                                                       
001abe   f002                                                                                                               
001ac0   6a03     CLRF      0x3,0x0                                                                                         
001ac2   be02     BTFSC     0x2,0x7,0x0                                                                                     
001ac4   6803     SETF      0x3,0x0                                                                                         
001ac6   c002     MOVFF     0x2,0xfe6                                                                                       
001ac8   ffe6                                                                                                               
001aca   c003     MOVFF     0x3,0xfe6                                                                                       
001acc   ffe6                                                                                                               
001ace   0efa     MOVLW     0xfa                                                                                            
001ad0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ad2   ffe6                                                                                                               
001ad4   0efb     MOVLW     0xfb                                                                                            
001ad6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ad8   ffe6                                                                                                               
001ada   0e04     MOVLW     0x4                                                                                             
001adc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ade   ffe6                                                                                                               
001ae0   0e05     MOVLW     0x5                                                                                             
001ae2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ae4   ffe6                                                                                                               
001ae6   0e02     MOVLW     0x2                                                                                             
001ae8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001aea   ffe6                                                                                                               
001aec   0e03     MOVLW     0x3                                                                                             
001aee   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001af0   ffe6                                                                                                               
001af2   cfde     MOVFF     0xfde,0xfe6                                                                                     
001af4   ffe6                                                                                                               
001af6   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
001af8   ffe6                                                                                                               
001afa   0efe     MOVLW     0xfe                                                                                            
001afc   6e04     MOVWF     0x4,0x0                                                                                         
001afe   0e4e     MOVLW     0x4e                                                                                            
001b00   6e05     MOVWF     0x5,0x0                                                                                         
001b02   6a06     CLRF      0x6,0x0                                                                                         
001b04   c004     MOVFF     0x4,0xfe6                                                                                       
001b06   ffe6                                                                                                               
001b08   c005     MOVFF     0x5,0xfe6                                                                                       
001b0a   ffe6                                                                                                               
001b0c   c006     MOVFF     0x6,0xfe6                                                                                       
001b0e   ffe6                                                                                                               
001b10   ece6     CALL      0x51cc,0x0                                                                                      
001b12   f028                                                                                                               
001b14   6ef5     MOVWF     0xf5,0x0                                                                                        
001b16   0e0f     MOVLW     0xf                                                                                             
001b18   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001b1a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001b1c   cfde     MOVFF     0xfde,0x4      	return  (Limit_Mix(2000+127+P+I+D));                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001b1e   f004                                                                                                               
001b20   cfdd     MOVFF     0xfdd,0x5                                                                                       
001b22   f005                                                                                                               
001b24   0e4f     MOVLW     0x4f                                                                                            
001b26   2604     ADDWF     0x4,0x1,0x0                                                                                     
001b28   0e08     MOVLW     0x8                                                                                             
001b2a   2205     ADDWFC    0x5,0x1,0x0                                                                                     
001b2c   0e02     MOVLW     0x2                                                                                             
001b2e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b30   2404     ADDWF     0x4,0x0,0x0                                                                                     
001b32   6e02     MOVWF     0x2,0x0                                                                                         
001b34   0e03     MOVLW     0x3                                                                                             
001b36   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b38   2005     ADDWFC    0x5,0x0,0x0                                                                                     
001b3a   6e03     MOVWF     0x3,0x0                                                                                         
001b3c   0e04     MOVLW     0x4                                                                                             
001b3e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b40   2402     ADDWF     0x2,0x0,0x0                                                                                     
001b42   6e00     MOVWF     0x0,0x0                                                                                         
001b44   0e05     MOVLW     0x5                                                                                             
001b46   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b48   2003     ADDWFC    0x3,0x0,0x0                                                                                     
001b4a   6e01     MOVWF     0x1,0x0                                                                                         
001b4c   c000     MOVFF     0x0,0xfe6                                                                                       
001b4e   ffe6                                                                                                               
001b50   c001     MOVFF     0x1,0xfe6                                                                                       
001b52   ffe6                                                                                                               
001b54   dce6     RCALL     0x1522                                                                                          
001b56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b5a   d000     BRA       0x1b5c                                                                                          
001b5c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001b5e   ffe1                                                                                                               
001b60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b62   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001b64   ffd9                                                                                                               
001b66   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001b68   cfd9     MOVFF     0xfd9,0xfe6    unsigned char capPwm (unsigned int valueToCap, unsigned char cap) {              C:\FRC\Fcode- 04-05-06\user_routines.c
001b6a   ffe6                                                                                                               
001b6c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001b6e   ffd9                                                                                                               
001b70   0e02     MOVLW     0x2                                                                                             
001b72   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnValue;                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001b74   0efd     MOVLW     0xfd           	if (valueToCap > cap) {                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001b76   cfdb     MOVFF     0xfdb,0x0                                                                                       
001b78   f000                                                                                                               
001b7a   0efe     MOVLW     0xfe                                                                                            
001b7c   cfdb     MOVFF     0xfdb,0x1                                                                                       
001b7e   f001                                                                                                               
001b80   0efc     MOVLW     0xfc                                                                                            
001b82   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b84   6e02     MOVWF     0x2,0x0                                                                                         
001b86   6a03     CLRF      0x3,0x0                                                                                         
001b88   5000     MOVF      0x0,0x0,0x0                                                                                     
001b8a   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001b8c   5001     MOVF      0x1,0x0,0x0                                                                                     
001b8e   5803     SUBWFB    0x3,0x0,0x0                                                                                     
001b90   e205     BC        0x1b9c                                                                                          
001b92   0efc     MOVLW     0xfc           		returnValue = cap;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
001b94   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b96   6ede     MOVWF     0xde,0x0                                                                                        
001b98   6add     CLRF      0xdd,0x0                                                                                        
001b9a   d013     BRA       0x1bc2         	}else if (valueToCap < 0) {                                                     C:\FRC\Fcode- 04-05-06\user_routines.c
001b9c   0efd     MOVLW     0xfd                                                                                            
001b9e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001ba0   f000                                                                                                               
001ba2   0efe     MOVLW     0xfe                                                                                            
001ba4   cfdb     MOVFF     0xfdb,0x1                                                                                       
001ba6   f001                                                                                                               
001ba8   0e00     MOVLW     0x0                                                                                             
001baa   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001bac   0e00     MOVLW     0x0                                                                                             
001bae   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001bb0   e203     BC        0x1bb8                                                                                          
001bb2   6ade     CLRF      0xde,0x0       		returnValue = 0;                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001bb4   6add     CLRF      0xdd,0x0                                                                                        
001bb6   d005     BRA       0x1bc2         	}else {                                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001bb8   0efd     MOVLW     0xfd           		returnValue = valueToCap;                                                      C:\FRC\Fcode- 04-05-06\user_routines.c
001bba   cfdb     MOVFF     0xfdb,0xfde                                                                                     
001bbc   ffde                                                                                                               
001bbe   cfdb     MOVFF     0xfdb,0xfdd                                                                                     
001bc0   ffdd                                                                                                               
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001bc2   50df     MOVF      0xdf,0x0,0x0   	return returnValue;                                                             C:\FRC\Fcode- 04-05-06\user_routines.c
001bc4   d000     BRA       0x1bc6                                                                                          
001bc6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001bc8   ffe1                                                                                                               
001bca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bcc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001bce   ffd9                                                                                                               
001bd0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //error is a value between 0 and 255, with 127 as NO ERROR                       C:\FRC\Fcode- 04-05-06\user_routines.c
001bd2   cfd9     MOVFF     0xfd9,0xfe6    unsigned char track_quadratic(unsigned char deadZone, unsigned char maxCap, unsigned char error) { C:\FRC\Fcode- 04-05-06\user_routines.c
001bd4   ffe6                                                                                                               
001bd6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001bd8   ffd9                                                                                                               
001bda   0e02     MOVLW     0x2                                                                                             
001bdc   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int returnVal;                                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	// y = widthFactor*(x-vertexX)*(x-vertexX) + vertexY                            C:\FRC\Fcode- 04-05-06\user_routines.c
001bde   0efc     MOVLW     0xfc           	if (error > 127) {                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001be0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001be2   087f     SUBLW     0x7f                                                                                            
001be4   e238     BC        0x1c56                                                                                          
001be6   0efd     MOVLW     0xfd           		returnVal = ((maxCap+127)/(16129))*((error-127)*(error-127)) + deadZone;       C:\FRC\Fcode- 04-05-06\user_routines.c
001be8   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bea   0f7f     ADDLW     0x7f                                                                                            
001bec   6e04     MOVWF     0x4,0x0                                                                                         
001bee   6a05     CLRF      0x5,0x0                                                                                         
001bf0   0e01     MOVLW     0x1                                                                                             
001bf2   6e3a     MOVWF     0x3a,0x0                                                                                        
001bf4   0e3f     MOVLW     0x3f                                                                                            
001bf6   6e3b     MOVWF     0x3b,0x0                                                                                        
001bf8   c004     MOVFF     0x4,0x35                                                                                        
001bfa   f035                                                                                                               
001bfc   c005     MOVFF     0x5,0x36                                                                                        
001bfe   f036                                                                                                               
001c00   ec2f     CALL      0x385e,0x0                                                                                      
001c02   f01c                                                                                                               
001c04   c035     MOVFF     0x35,0x4                                                                                        
001c06   f004                                                                                                               
001c08   c036     MOVFF     0x36,0x5                                                                                        
001c0a   f005                                                                                                               
001c0c   0efc     MOVLW     0xfc                                                                                            
001c0e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c10   0f81     ADDLW     0x81                                                                                            
001c12   6e08     MOVWF     0x8,0x0                                                                                         
001c14   0efc     MOVLW     0xfc                                                                                            
001c16   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c18   0f81     ADDLW     0x81                                                                                            
001c1a   0208     MULWF     0x8,0x0                                                                                         
001c1c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c1e   6e06     MOVWF     0x6,0x0                                                                                         
001c20   6a07     CLRF      0x7,0x0                                                                                         
001c22   0100     MOVLB     0x0                                                                                             
001c24   5006     MOVF      0x6,0x0,0x0                                                                                     
001c26   0204     MULWF     0x4,0x0                                                                                         
001c28   cff3     MOVFF     0xff3,0x2                                                                                       
001c2a   f002                                                                                                               
001c2c   cff4     MOVFF     0xff4,0x3                                                                                       
001c2e   f003                                                                                                               
001c30   0205     MULWF     0x5,0x0                                                                                         
001c32   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c34   2603     ADDWF     0x3,0x1,0x0                                                                                     
001c36   5007     MOVF      0x7,0x0,0x0                                                                                     
001c38   0204     MULWF     0x4,0x0                                                                                         
001c3a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c3c   2603     ADDWF     0x3,0x1,0x0                                                                                     
001c3e   0efe     MOVLW     0xfe                                                                                            
001c40   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c42   2402     ADDWF     0x2,0x0,0x0                                                                                     
001c44   6e00     MOVWF     0x0,0x0                                                                                         
001c46   0e00     MOVLW     0x0                                                                                             
001c48   2003     ADDWFC    0x3,0x0,0x0                                                                                     
001c4a   6e01     MOVWF     0x1,0x0                                                                                         
001c4c   c000     MOVFF     0x0,0xfde                                                                                       
001c4e   ffde                                                                                                               
001c50   c001     MOVFF     0x1,0xfdd                                                                                       
001c52   ffdd                                                                                                               
001c54   d04e     BRA       0x1cf2         	}else if(error < 127) {                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001c56   0e7f     MOVLW     0x7f                                                                                            
001c58   6ef3     MOVWF     0xf3,0x0                                                                                        
001c5a   0efc     MOVLW     0xfc                                                                                            
001c5c   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001c5e   fff4                                                                                                               
001c60   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c62   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001c64   e243     BC        0x1cec                                                                                          
001c66   0efe     MOVLW     0xfe           		returnVal = (-1)*((maxCap+127)/(16129))*((error-127)*(error-127)) - deadZone;  C:\FRC\Fcode- 04-05-06\user_routines.c
001c68   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c6a   6e09     MOVWF     0x9,0x0                                                                                         
001c6c   6a0a     CLRF      0xa,0x0                                                                                         
001c6e   0efc     MOVLW     0xfc                                                                                            
001c70   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c72   0f81     ADDLW     0x81                                                                                            
001c74   6e08     MOVWF     0x8,0x0                                                                                         
001c76   0efc     MOVLW     0xfc                                                                                            
001c78   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c7a   0f81     ADDLW     0x81                                                                                            
001c7c   0208     MULWF     0x8,0x0                                                                                         
001c7e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001c80   6e06     MOVWF     0x6,0x0                                                                                         
001c82   6a07     CLRF      0x7,0x0                                                                                         
001c84   0efd     MOVLW     0xfd                                                                                            
001c86   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c88   0f7f     ADDLW     0x7f                                                                                            
001c8a   6e04     MOVWF     0x4,0x0                                                                                         
001c8c   6a05     CLRF      0x5,0x0                                                                                         
001c8e   0e01     MOVLW     0x1                                                                                             
001c90   6e3a     MOVWF     0x3a,0x0                                                                                        
001c92   0e3f     MOVLW     0x3f                                                                                            
001c94   6e3b     MOVWF     0x3b,0x0                                                                                        
001c96   c004     MOVFF     0x4,0x35                                                                                        
001c98   f035                                                                                                               
001c9a   c005     MOVFF     0x5,0x36                                                                                        
001c9c   f036                                                                                                               
001c9e   ec2f     CALL      0x385e,0x0                                                                                      
001ca0   f01c                                                                                                               
001ca2   c035     MOVFF     0x35,0x4                                                                                        
001ca4   f004                                                                                                               
001ca6   c036     MOVFF     0x36,0x5                                                                                        
001ca8   f005                                                                                                               
001caa   6835     SETF      0x35,0x0                                                                                        
001cac   6836     SETF      0x36,0x0                                                                                        
001cae   c004     MOVFF     0x4,0x3a                                                                                        
001cb0   f03a                                                                                                               
001cb2   c005     MOVFF     0x5,0x3b                                                                                        
001cb4   f03b                                                                                                               
001cb6   ec89     CALL      0x3912,0x0                                                                                      
001cb8   f01c                                                                                                               
001cba   c033     MOVFF     0x33,0x2                                                                                        
001cbc   f002                                                                                                               
001cbe   c034     MOVFF     0x34,0x3                                                                                        
001cc0   f003                                                                                                               
001cc2   c002     MOVFF     0x2,0x35                                                                                        
001cc4   f035                                                                                                               
001cc6   c003     MOVFF     0x3,0x36                                                                                        
001cc8   f036                                                                                                               
001cca   c006     MOVFF     0x6,0x3a                                                                                        
001ccc   f03a                                                                                                               
001cce   c007     MOVFF     0x7,0x3b                                                                                        
001cd0   f03b                                                                                                               
001cd2   ec89     CALL      0x3912,0x0                                                                                      
001cd4   f01c                                                                                                               
001cd6   5009     MOVF      0x9,0x0,0x0                                                                                     
001cd8   5c33     SUBWF     0x33,0x0,0x0                                                                                    
001cda   6e00     MOVWF     0x0,0x0                                                                                         
001cdc   500a     MOVF      0xa,0x0,0x0                                                                                     
001cde   5834     SUBWFB    0x34,0x0,0x0                                                                                    
001ce0   6e01     MOVWF     0x1,0x0                                                                                         
001ce2   c000     MOVFF     0x0,0xfde                                                                                       
001ce4   ffde                                                                                                               
001ce6   c001     MOVFF     0x1,0xfdd                                                                                       
001ce8   ffdd                                                                                                               
001cea   d003     BRA       0x1cf2         	}else{                                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
001cec   0e7f     MOVLW     0x7f           		returnVal = 127;                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001cee   6ede     MOVWF     0xde,0x0                                                                                        
001cf0   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001cf2   50df     MOVF      0xdf,0x0,0x0   	return returnVal;                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
001cf4   d000     BRA       0x1cf6                                                                                          
001cf6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
001cf8   ffe1                                                                                                               
001cfa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001cfc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001cfe   ffd9                                                                                                               
001d00   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * FUNCTION NAME: Default_Routine                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * PURPOSE:       Performs the default mappings of inputs to outputs for the      C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *                Robot Controller.                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * CALLED FROM:   this file, Process_Data_From_Master_uP routine                  C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           void Default_Routine(void)                                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //	pwm09 = pwm10 = p1_y;                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                           //	pwm11 = pwm12 = p2_y;                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001d02   0101     MOVLB     0x1            	if(p3_sw_trig){                                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001d04   a9a2     BTFSS     0xa2,0x4,0x1                                                                                    
001d06   d006     BRA       0x1d14                                                                                          
001d08   0101     MOVLB     0x1            		pwm05 = 255;                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
001d0a   6988     SETF      0x88,0x1                                                                                        
001d0c   6987     SETF      0x87,0x1       		pwm04 = 255;                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
001d0e   c1a8     MOVFF     0x1a8,0x189    		pwm06 = p3_y;                                                                  C:\FRC\Fcode- 04-05-06\user_routines.c
001d10   f189                                                                                                               
001d12   d005     BRA       0x1d1e         	}else{                                                                          C:\FRC\Fcode- 04-05-06\user_routines.c
001d14   0101     MOVLB     0x1            		pwm05 = 127;                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
001d16   0e7f     MOVLW     0x7f                                                                                            
001d18   6f88     MOVWF     0x88,0x1                                                                                        
001d1a   6f87     MOVWF     0x87,0x1       		pwm04 = 127;                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
001d1c   6f89     MOVWF     0x89,0x1       		pwm06 = 127;                                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                            /*---------- ROBOT FEEDBACK LEDs------------------------------------------------ C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *------------------------------------------------------------------------------ C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *   This section drives the "ROBOT FEEDBACK" lights on the Operator Interface. C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *   The lights are green for joystick forward and red for joystick reverse.    C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *   Both red and green are on when the joystick is centered.  Use the          C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *   trim tabs on the joystick to adjust the center.                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                             *   These may be changed for any use that the user desires.                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                             */	                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001d1e   0101     MOVLB     0x1              if (user_display_mode == 0) /* User Mode is Off */                             C:\FRC\Fcode- 04-05-06\user_routines.c
001d20   bba1     BTFSC     0xa1,0x5,0x1                                                                                    
001d22   d0ca     BRA       0x1eb8                                                                                          
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                             { /* Check position of Port 1 Joystick */                                      C:\FRC\Fcode- 04-05-06\user_routines.c
001d24   0e00     MOVLW     0x0                if (p1_y >= 0 && p1_y <= 56)                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001d26   5da6     SUBWF     0xa6,0x0,0x1                                                                                    
001d28   e307     BNC       0x1d38                                                                                          
001d2a   51a6     MOVF      0xa6,0x0,0x1                                                                                    
001d2c   0838     SUBLW     0x38                                                                                            
001d2e   e304     BNC       0x1d38                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\FRC\Fcode- 04-05-06\user_routines.c
001d30   0101     MOVLB     0x1                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001d32   9180     BCF       0x80,0x0,0x1                                                                                    
001d34   8380     BSF       0x80,0x1,0x1         Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON  */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001d36   d02d     BRA       0x1d92             else if (p1_y >= 125 && p1_y <= 129)                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001d38   0e7d     MOVLW     0x7d                                                                                            
001d3a   5da6     SUBWF     0xa6,0x0,0x1                                                                                    
001d3c   e30e     BNC       0x1d5a                                                                                          
001d3e   51a6     MOVF      0xa6,0x0,0x1                                                                                    
001d40   6e00     MOVWF     0x0,0x0                                                                                         
001d42   6a01     CLRF      0x1,0x0                                                                                         
001d44   3401     RLCF      0x1,0x0,0x0                                                                                     
001d46   e204     BC        0x1d50                                                                                          
001d48   5000     MOVF      0x0,0x0,0x0                                                                                     
001d4a   0881     SUBLW     0x81                                                                                            
001d4c   0e00     MOVLW     0x0                                                                                             
001d4e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001d50   e304     BNC       0x1d5a                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\FRC\Fcode- 04-05-06\user_routines.c
001d52   0101     MOVLB     0x1                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON */                         C:\FRC\Fcode- 04-05-06\user_routines.c
001d54   8180     BSF       0x80,0x0,0x1                                                                                    
001d56   8380     BSF       0x80,0x1,0x1         Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON */                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001d58   d01c     BRA       0x1d92             else if (p1_y >= 216 && p1_y <= 255)                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001d5a   51a6     MOVF      0xa6,0x0,0x1                                                                                    
001d5c   6e00     MOVWF     0x0,0x0                                                                                         
001d5e   6a01     CLRF      0x1,0x0                                                                                         
001d60   90d8     BCF       0xd8,0x0,0x0                                                                                    
001d62   5001     MOVF      0x1,0x0,0x0                                                                                     
001d64   e604     BN        0x1d6e                                                                                          
001d66   0ed8     MOVLW     0xd8                                                                                            
001d68   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001d6a   0e00     MOVLW     0x0                                                                                             
001d6c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001d6e   e30e     BNC       0x1d8c                                                                                          
001d70   51a6     MOVF      0xa6,0x0,0x1                                                                                    
001d72   6e02     MOVWF     0x2,0x0                                                                                         
001d74   6a03     CLRF      0x3,0x0                                                                                         
001d76   3403     RLCF      0x3,0x0,0x0                                                                                     
001d78   e204     BC        0x1d82                                                                                          
001d7a   5002     MOVF      0x2,0x0,0x0                                                                                     
001d7c   08ff     SUBLW     0xff                                                                                            
001d7e   0e00     MOVLW     0x0                                                                                             
001d80   5403     SUBFWB    0x3,0x0,0x0                                                                                     
001d82   e304     BNC       0x1d8c                                                                                          
                                               {                     /* Joystick is in full forward position*/              C:\FRC\Fcode- 04-05-06\user_routines.c
001d84   0101     MOVLB     0x1                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON  */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001d86   8180     BSF       0x80,0x0,0x1                                                                                    
001d88   9380     BCF       0x80,0x1,0x1         Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001d8a   d003     BRA       0x1d92             else                                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\FRC\Fcode- 04-05-06\user_routines.c
001d8c   0101     MOVLB     0x1                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001d8e   9180     BCF       0x80,0x0,0x1                                                                                    
001d90   9380     BCF       0x80,0x1,0x1         Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }  /*END Check position of Port 1 Joystick                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                               /* Check position of Port 2 Y Joystick                                       C:\FRC\Fcode- 04-05-06\user_routines.c
                                                      (or Port 1 X in Single Joystick Drive Mode) */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001d92   0e00     MOVLW     0x0                if (p2_y >= 0 && p2_y <= 56)                                                 C:\FRC\Fcode- 04-05-06\user_routines.c
001d94   0101     MOVLB     0x1                                                                                             
001d96   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
001d98   e307     BNC       0x1da8                                                                                          
001d9a   51a7     MOVF      0xa7,0x0,0x1                                                                                    
001d9c   0838     SUBLW     0x38                                                                                            
001d9e   e304     BNC       0x1da8                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\FRC\Fcode- 04-05-06\user_routines.c
001da0   0101     MOVLB     0x1                  Pwm2_green  = 0;    /* Turn pwm2 green LED - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001da2   9580     BCF       0x80,0x2,0x1                                                                                    
001da4   8780     BSF       0x80,0x3,0x1         Pwm2_red  = 1;      /* Turn pwm2 red LED   - ON  */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001da6   d02d     BRA       0x1e02             else if (p2_y >= 125 && p2_y <= 129)                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001da8   0e7d     MOVLW     0x7d                                                                                            
001daa   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
001dac   e30e     BNC       0x1dca                                                                                          
001dae   51a7     MOVF      0xa7,0x0,0x1                                                                                    
001db0   6e00     MOVWF     0x0,0x0                                                                                         
001db2   6a01     CLRF      0x1,0x0                                                                                         
001db4   3401     RLCF      0x1,0x0,0x0                                                                                     
001db6   e204     BC        0x1dc0                                                                                          
001db8   5000     MOVF      0x0,0x0,0x0                                                                                     
001dba   0881     SUBLW     0x81                                                                                            
001dbc   0e00     MOVLW     0x0                                                                                             
001dbe   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001dc0   e304     BNC       0x1dca                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\FRC\Fcode- 04-05-06\user_routines.c
001dc2   0101     MOVLB     0x1                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON */                         C:\FRC\Fcode- 04-05-06\user_routines.c
001dc4   8580     BSF       0x80,0x2,0x1                                                                                    
001dc6   8780     BSF       0x80,0x3,0x1         Pwm2_red  = 1;      /* Turn PWM2 red LED   - ON */                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001dc8   d01c     BRA       0x1e02             else if (p2_y >= 216 && p2_y <= 255)                                         C:\FRC\Fcode- 04-05-06\user_routines.c
001dca   51a7     MOVF      0xa7,0x0,0x1                                                                                    
001dcc   6e00     MOVWF     0x0,0x0                                                                                         
001dce   6a01     CLRF      0x1,0x0                                                                                         
001dd0   90d8     BCF       0xd8,0x0,0x0                                                                                    
001dd2   5001     MOVF      0x1,0x0,0x0                                                                                     
001dd4   e604     BN        0x1dde                                                                                          
001dd6   0ed8     MOVLW     0xd8                                                                                            
001dd8   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001dda   0e00     MOVLW     0x0                                                                                             
001ddc   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001dde   e30e     BNC       0x1dfc                                                                                          
001de0   51a7     MOVF      0xa7,0x0,0x1                                                                                    
001de2   6e02     MOVWF     0x2,0x0                                                                                         
001de4   6a03     CLRF      0x3,0x0                                                                                         
001de6   3403     RLCF      0x3,0x0,0x0                                                                                     
001de8   e204     BC        0x1df2                                                                                          
001dea   5002     MOVF      0x2,0x0,0x0                                                                                     
001dec   08ff     SUBLW     0xff                                                                                            
001dee   0e00     MOVLW     0x0                                                                                             
001df0   5403     SUBFWB    0x3,0x0,0x0                                                                                     
001df2   e304     BNC       0x1dfc                                                                                          
                                               {                     /* Joystick is in full forward position */             C:\FRC\Fcode- 04-05-06\user_routines.c
001df4   0101     MOVLB     0x1                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON  */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001df6   8580     BSF       0x80,0x2,0x1                                                                                    
001df8   9780     BCF       0x80,0x3,0x1         Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001dfa   d003     BRA       0x1e02             else                                                                         C:\FRC\Fcode- 04-05-06\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\FRC\Fcode- 04-05-06\user_routines.c
001dfc   0101     MOVLB     0x1                  Pwm2_green  = 0;    /* Turn PWM2 green LED - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
001dfe   9580     BCF       0x80,0x2,0x1                                                                                    
001e00   9780     BCF       0x80,0x3,0x1         Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\FRC\Fcode- 04-05-06\user_routines.c
                                               }  /* END Check position of Port 2 Joystick */                               C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                               /* This drives the Relay 1 and Relay 2 "Robot Feedback" lights on the OI. */ C:\FRC\Fcode- 04-05-06\user_routines.c
001e02   9b80     BCF       0x80,0x5,0x1       Relay1_green = relay1_fwd;    /* LED is ON when Relay 1 is FWD */            C:\FRC\Fcode- 04-05-06\user_routines.c
001e04   508d     MOVF      0x8d,0x0,0x0                                                                                    
001e06   0b01     ANDLW     0x1                                                                                             
001e08   e001     BZ        0x1e0c                                                                                          
001e0a   8b80     BSF       0x80,0x5,0x1                                                                                    
001e0c   9980     BCF       0x80,0x4,0x1       Relay1_red = relay1_rev;      /* LED is ON when Relay 1 is REV */            C:\FRC\Fcode- 04-05-06\user_routines.c
001e0e   508c     MOVF      0x8c,0x0,0x0                                                                                    
001e10   0b01     ANDLW     0x1                                                                                             
001e12   e001     BZ        0x1e16                                                                                          
001e14   8980     BSF       0x80,0x4,0x1                                                                                    
001e16   9f80     BCF       0x80,0x7,0x1       Relay2_green = relay2_fwd;    /* LED is ON when Relay 2 is FWD */            C:\FRC\Fcode- 04-05-06\user_routines.c
001e18   508d     MOVF      0x8d,0x0,0x0                                                                                    
001e1a   0b02     ANDLW     0x2                                                                                             
001e1c   e001     BZ        0x1e20                                                                                          
001e1e   8f80     BSF       0x80,0x7,0x1                                                                                    
001e20   9d80     BCF       0x80,0x6,0x1       Relay2_red = relay2_rev;      /* LED is ON when Relay 2 is REV */            C:\FRC\Fcode- 04-05-06\user_routines.c
001e22   508c     MOVF      0x8c,0x0,0x0                                                                                    
001e24   0b02     ANDLW     0x2                                                                                             
001e26   e001     BZ        0x1e2a                                                                                          
001e28   8d80     BSF       0x80,0x6,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001e2a   0101     MOVLB     0x1                Switch1_LED = (T_Packet_Data.pixels > 1);                                    C:\FRC\Fcode- 04-05-06\user_routines.c
001e2c   51c7     MOVF      0xc7,0x0,0x1                                                                                    
001e2e   0801     SUBLW     0x1                                                                                             
001e30   e302     BNC       0x1e36                                                                                          
001e32   0e00     MOVLW     0x0                                                                                             
001e34   d001     BRA       0x1e38                                                                                          
001e36   0e01     MOVLW     0x1                                                                                             
001e38   0101     MOVLB     0x1                                                                                             
001e3a   0b01     ANDLW     0x1                                                                                             
001e3c   6ef3     MOVWF     0xf3,0x0                                                                                        
001e3e   0efe     MOVLW     0xfe                                                                                            
001e40   1581     ANDWF     0x81,0x0,0x1                                                                                    
001e42   10f3     IORWF     0xf3,0x0,0x0                                                                                    
001e44   6f81     MOVWF     0x81,0x1                                                                                        
001e46   5184     MOVF      0x84,0x0,0x1       Switch2_LED = (PAN_SERVO > 109 && PAN_SERVO < 139); //center is 124 in tracking.h C:\FRC\Fcode- 04-05-06\user_routines.c
001e48   086d     SUBLW     0x6d                                                                                            
001e4a   e20b     BC        0x1e62                                                                                          
001e4c   5184     MOVF      0x84,0x0,0x1                                                                                    
001e4e   6e00     MOVWF     0x0,0x0                                                                                         
001e50   6a01     CLRF      0x1,0x0                                                                                         
001e52   90d8     BCF       0xd8,0x0,0x0                                                                                    
001e54   5001     MOVF      0x1,0x0,0x0                                                                                     
001e56   e604     BN        0x1e60                                                                                          
001e58   0e8b     MOVLW     0x8b                                                                                            
001e5a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001e5c   0e00     MOVLW     0x0                                                                                             
001e5e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001e60   e302     BNC       0x1e66                                                                                          
001e62   0e00     MOVLW     0x0                                                                                             
001e64   d001     BRA       0x1e68                                                                                          
001e66   0e01     MOVLW     0x1                                                                                             
001e68   0b01     ANDLW     0x1                                                                                             
001e6a   6ef3     MOVWF     0xf3,0x0                                                                                        
001e6c   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
001e6e   0efd     MOVLW     0xfd                                                                                            
001e70   1581     ANDWF     0x81,0x0,0x1                                                                                    
001e72   10f3     IORWF     0xf3,0x0,0x0                                                                                    
001e74   6f81     MOVWF     0x81,0x1                                                                                        
001e76   5185     MOVF      0x85,0x0,0x1       Switch3_LED = (TILT_SERVO > 175 && TILT_SERVO < 185); //optimal shooting range99 C:\FRC\Fcode- 04-05-06\user_routines.c
001e78   6e00     MOVWF     0x0,0x0                                                                                         
001e7a   6a01     CLRF      0x1,0x0                                                                                         
001e7c   3401     RLCF      0x1,0x0,0x0                                                                                     
001e7e   e204     BC        0x1e88                                                                                          
001e80   5000     MOVF      0x0,0x0,0x0                                                                                     
001e82   08af     SUBLW     0xaf                                                                                            
001e84   0e00     MOVLW     0x0                                                                                             
001e86   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001e88   e20b     BC        0x1ea0                                                                                          
001e8a   5185     MOVF      0x85,0x0,0x1                                                                                    
001e8c   6e02     MOVWF     0x2,0x0                                                                                         
001e8e   6a03     CLRF      0x3,0x0                                                                                         
001e90   90d8     BCF       0xd8,0x0,0x0                                                                                    
001e92   5003     MOVF      0x3,0x0,0x0                                                                                     
001e94   e604     BN        0x1e9e                                                                                          
001e96   0eb9     MOVLW     0xb9                                                                                            
001e98   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001e9a   0e00     MOVLW     0x0                                                                                             
001e9c   5803     SUBWFB    0x3,0x0,0x0                                                                                     
001e9e   e302     BNC       0x1ea4                                                                                          
001ea0   0e00     MOVLW     0x0                                                                                             
001ea2   d001     BRA       0x1ea6                                                                                          
001ea4   0e01     MOVLW     0x1                                                                                             
001ea6   0b01     ANDLW     0x1                                                                                             
001ea8   6ef3     MOVWF     0xf3,0x0                                                                                        
001eaa   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
001eac   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
001eae   0efb     MOVLW     0xfb                                                                                            
001eb0   1581     ANDWF     0x81,0x0,0x1                                                                                    
001eb2   10f3     IORWF     0xf3,0x0,0x0                                                                                    
001eb4   6f81     MOVWF     0x81,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                             } /* (user_display_mode = 0) (User Mode is Off) */                             C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001eb6   d052     BRA       0x1f5c           else  /* User Mode is On - displays data in OI 4-digit display*/               C:\FRC\Fcode- 04-05-06\user_routines.c
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
001eb8   c1b7     MOVFF     0x1b7,0x36         User_Mode_byte = backup_voltage*10; /* so that decimal doesn't get truncated. */ C:\FRC\Fcode- 04-05-06\user_routines.c
001eba   f036                                                                                                               
001ebc   ecac     CALL      0x3558,0x0                                                                                      
001ebe   f01a                                                                                                               
001ec0   c034     MOVFF     0x34,0x8                                                                                        
001ec2   f008                                                                                                               
001ec4   c035     MOVFF     0x35,0x9                                                                                        
001ec6   f009                                                                                                               
001ec8   c036     MOVFF     0x36,0xa                                                                                        
001eca   f00a                                                                                                               
001ecc   c037     MOVFF     0x37,0xb                                                                                        
001ece   f00b                                                                                                               
001ed0   0e71     MOVLW     0x71                                                                                            
001ed2   6e39     MOVWF     0x39,0x0                                                                                        
001ed4   0e3d     MOVLW     0x3d                                                                                            
001ed6   6e3a     MOVWF     0x3a,0x0                                                                                        
001ed8   0e7a     MOVLW     0x7a                                                                                            
001eda   6e3b     MOVWF     0x3b,0x0                                                                                        
001edc   0e41     MOVLW     0x41                                                                                            
001ede   6e3c     MOVWF     0x3c,0x0                                                                                        
001ee0   c008     MOVFF     0x8,0x34                                                                                        
001ee2   f034                                                                                                               
001ee4   c009     MOVFF     0x9,0x35                                                                                        
001ee6   f035                                                                                                               
001ee8   c00a     MOVFF     0xa,0x36                                                                                        
001eea   f036                                                                                                               
001eec   c00b     MOVFF     0xb,0x37                                                                                        
001eee   f037                                                                                                               
001ef0   ecc2     CALL      0x3784,0x0                                                                                      
001ef2   f01b                                                                                                               
001ef4   c034     MOVFF     0x34,0x4                                                                                        
001ef6   f004                                                                                                               
001ef8   c035     MOVFF     0x35,0x5                                                                                        
001efa   f005                                                                                                               
001efc   c036     MOVFF     0x36,0x6                                                                                        
001efe   f006                                                                                                               
001f00   c037     MOVFF     0x37,0x7                                                                                        
001f02   f007                                                                                                               
001f04   6a39     CLRF      0x39,0x0                                                                                        
001f06   6a3a     CLRF      0x3a,0x0                                                                                        
001f08   0e80     MOVLW     0x80                                                                                            
001f0a   6e3b     MOVWF     0x3b,0x0                                                                                        
001f0c   0e43     MOVLW     0x43                                                                                            
001f0e   6e3c     MOVWF     0x3c,0x0                                                                                        
001f10   c004     MOVFF     0x4,0x34                                                                                        
001f12   f034                                                                                                               
001f14   c005     MOVFF     0x5,0x35                                                                                        
001f16   f035                                                                                                               
001f18   c006     MOVFF     0x6,0x36                                                                                        
001f1a   f036                                                                                                               
001f1c   c007     MOVFF     0x7,0x37                                                                                        
001f1e   f037                                                                                                               
001f20   ec6f     CALL      0x36de,0x0                                                                                      
001f22   f01b                                                                                                               
001f24   c034     MOVFF     0x34,0x0                                                                                        
001f26   f000                                                                                                               
001f28   c035     MOVFF     0x35,0x1                                                                                        
001f2a   f001                                                                                                               
001f2c   c036     MOVFF     0x36,0x2                                                                                        
001f2e   f002                                                                                                               
001f30   c037     MOVFF     0x37,0x3                                                                                        
001f32   f003                                                                                                               
001f34   6a39     CLRF      0x39,0x0                                                                                        
001f36   6a3a     CLRF      0x3a,0x0                                                                                        
001f38   0e20     MOVLW     0x20                                                                                            
001f3a   6e3b     MOVWF     0x3b,0x0                                                                                        
001f3c   0e41     MOVLW     0x41                                                                                            
001f3e   6e3c     MOVWF     0x3c,0x0                                                                                        
001f40   c000     MOVFF     0x0,0x34                                                                                        
001f42   f034                                                                                                               
001f44   c001     MOVFF     0x1,0x35                                                                                        
001f46   f035                                                                                                               
001f48   c002     MOVFF     0x2,0x36                                                                                        
001f4a   f036                                                                                                               
001f4c   c003     MOVFF     0x3,0x37                                                                                        
001f4e   f037                                                                                                               
001f50   ecc2     CALL      0x3784,0x0                                                                                      
001f52   f01b                                                                                                               
001f54   ecb6     CALL      0x396c,0x0                                                                                      
001f56   f01c                                                                                                               
001f58   c036     MOVFF     0x36,0x180                                                                                      
001f5a   f180                                                                                                               
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
001f5c   0012     RETURN    0x0            } /* END Default_Routine(); */                                                   C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *  of the routines below.                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * USAGE:                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "camera.h"                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "tracking.h"                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #include "gyro.h"                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           // #include "user_Serialdrv.h"                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           char autoOption = 0;			//option selected by the huge switches                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           char option1 = 0;				//a dipswitch option                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned int timer1 = 0;		//timer to count time for events                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned int counter1 = 0;                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned int turn_counter = 0;	//timer to counts turning time                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned int gyroAvg = 0;                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned int counter_pulse = 0;	                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           int robotTilt = 0;				//filler variable for the tilt of the robot. 0 assumed to be flush with floor C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char cam_pan = 0;		//camera's pan                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char cam_tilt = 0;		//camera's tilt                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char cam_pixels = 0;	//camera target visibilty                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char speed_offset = 0; //speed offset for the robot (0 = {255, 0})      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char mode = 0;                                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char temp_p1_y = 127;	//Virtual joystick values, used for aiming while moving and cool stuff like that C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char temp_p1_x = 127;                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char maxShootAngle = 230;  //max shooting angle for the robot (how CLOSE it can be) C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           unsigned char minShootAngle = 50;	//min shooting angle (how FAR AWAY it can be)  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           char bAutoOpt01, bAutoOpt02, bOptBit01, bOptBit02, bOptBit03, bOptBit04, bOptBit05, bOptBit06, bOptBit07, bOptBit08; C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             _asm                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
000818   efaf     GOTO      0x1f5e             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00081a   f00f                                                                                                               
                                             _endasm                                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #pragma code                                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata") /* You may want to save additional symbols. */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001f5e   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001f60   ffe4                                                                                                               
001f62   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
001f64   ffe4                                                                                                               
001f66   6ee4     MOVWF     0xe4,0x0                                                                                        
001f68   cfda     MOVFF     0xfda,0xfe4                                                                                     
001f6a   ffe4                                                                                                               
001f6c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
001f6e   ffda                                                                                                               
001f70   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
001f72   ffe4                                                                                                               
001f74   cfea     MOVFF     0xfea,0xfe4                                                                                     
001f76   ffe4                                                                                                               
001f78   cff3     MOVFF     0xff3,0xfe4                                                                                     
001f7a   ffe4                                                                                                               
001f7c   cff4     MOVFF     0xff4,0xfe4                                                                                     
001f7e   ffe4                                                                                                               
001f80   ee00     LFSR      0x0,0x0                                                                                         
001f82   f000                                                                                                               
001f84   0e18     MOVLW     0x18                                                                                            
001f86   04e8     DECF      0xe8,0x0,0x0                                                                                    
001f88   e303     BNC       0x1f90                                                                                          
001f8a   cfee     MOVFF     0xfee,0xfe4                                                                                     
001f8c   ffe4                                                                                                               
001f8e   d7fb     BRA       0x1f86                                                                                          
001f90   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001f92   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001f94   0b20     ANDLW     0x20                                                                                            
001f96   e006     BZ        0x1fa4                                                                                          
001f98   509d     MOVF      0x9d,0x0,0x0                                                                                    
001f9a   0b20     ANDLW     0x20                                                                                            
001f9c   e003     BZ        0x1fa4                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001f9e   ec3e     CALL      0x487c,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fa0   f024                                                                                                               
                                           		#endif                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fa2   d02e     BRA       0x2000         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fa4   50a4     MOVF      0xa4,0x0,0x0                                                                                    
001fa6   0b20     ANDLW     0x20                                                                                            
001fa8   e006     BZ        0x1fb6                                                                                          
001faa   50a3     MOVF      0xa3,0x0,0x0                                                                                    
001fac   0b20     ANDLW     0x20                                                                                            
001fae   e003     BZ        0x1fb6                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fb0   ec5d     CALL      0x48ba,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fb2   f024                                                                                                               
                                           		#endif                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fb4   d025     BRA       0x2000         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fb6   509e     MOVF      0x9e,0x0,0x0                                                                                    
001fb8   0b10     ANDLW     0x10                                                                                            
001fba   e006     BZ        0x1fc8                                                                                          
001fbc   509d     MOVF      0x9d,0x0,0x0                                                                                    
001fbe   0b10     ANDLW     0x10                                                                                            
001fc0   e003     BZ        0x1fc8                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fc2   ec7c     CALL      0x48f8,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fc4   f024                                                                                                               
                                           		#endif                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fc6   d01c     BRA       0x2000         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fc8   50a4     MOVF      0xa4,0x0,0x0                                                                                    
001fca   0b10     ANDLW     0x10                                                                                            
001fcc   e006     BZ        0x1fda                                                                                          
001fce   50a3     MOVF      0xa3,0x0,0x0                                                                                    
001fd0   0b10     ANDLW     0x10                                                                                            
001fd2   e003     BZ        0x1fda                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fd4   ec94     CALL      0x4928,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fd6   f024                                                                                                               
                                           		#endif                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fd8   d013     BRA       0x2000         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fda   509e     MOVF      0x9e,0x0,0x0                                                                                    
001fdc   0b02     ANDLW     0x2                                                                                             
001fde   e007     BZ        0x1fee                                                                                          
001fe0   509d     MOVF      0x9d,0x0,0x0                                                                                    
001fe2   0b02     ANDLW     0x2                                                                                             
001fe4   e004     BZ        0x1fee                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fe6   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fe8   ecc2     CALL      0x4184,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fea   f020                                                                                                               
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fec   d009     BRA       0x2000         	else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001fee   509e     MOVF      0x9e,0x0,0x0                                                                                    
001ff0   0b40     ANDLW     0x40                                                                                            
001ff2   e006     BZ        0x2000                                                                                          
001ff4   509d     MOVF      0x9d,0x0,0x0                                                                                    
001ff6   0b40     ANDLW     0x40                                                                                            
001ff8   e003     BZ        0x2000                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001ffa   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001ffc   ecc4     CALL      0x4188,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
001ffe   f020                                                                                                               
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  {                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  }                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  {                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  }                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  {                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  else                                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  {                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           //  }                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002000   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002002   ee00     LFSR      0x0,0x17                                                                                        
002004   f017                                                                                                               
002006   0e18     MOVLW     0x18                                                                                            
002008   04e8     DECF      0xe8,0x0,0x0                                                                                    
00200a   e303     BNC       0x2012                                                                                          
00200c   cfe5     MOVFF     0xfe5,0xfed                                                                                     
00200e   ffed                                                                                                               
002010   d7fb     BRA       0x2008                                                                                          
002012   cfe5     MOVFF     0xfe5,0xff4                                                                                     
002014   fff4                                                                                                               
002016   cfe5     MOVFF     0xfe5,0xff3                                                                                     
002018   fff3                                                                                                               
00201a   cfe5     MOVFF     0xfe5,0xfea                                                                                     
00201c   ffea                                                                                                               
00201e   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
002020   ffe9                                                                                                               
002022   cfe5     MOVFF     0xfe5,0xfda                                                                                     
002024   ffda                                                                                                               
002026   50e5     MOVF      0xe5,0x0,0x0                                                                                    
002028   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
00202a   ffe0                                                                                                               
00202c   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
00202e   ffd8                                                                                                               
002030   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             */                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002032   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002034   0e7f     MOVLW     0x7f                                                                                            
002036   6f8b     MOVWF     0x8b,0x1                                                                                        
002038   c18b     MOVFF     0x18b,0x18a                                                                                     
00203a   f18a                                                                                                               
00203c   c18b     MOVFF     0x18b,0x189                                                                                     
00203e   f189                                                                                                               
002040   c18b     MOVFF     0x18b,0x188                                                                                     
002042   f188                                                                                                               
002044   c18b     MOVFF     0x18b,0x187                                                                                     
002046   f187                                                                                                               
002048   c18b     MOVFF     0x18b,0x186                                                                                     
00204a   f186                                                                                                               
00204c   c18b     MOVFF     0x18b,0x185                                                                                     
00204e   f185                                                                                                               
002050   c18b     MOVFF     0x18b,0x184                                                                                     
002052   f184                                                                                                               
002054   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002056   c193     MOVFF     0x193,0x192                                                                                     
002058   f192                                                                                                               
00205a   c193     MOVFF     0x193,0x191                                                                                     
00205c   f191                                                                                                               
00205e   c193     MOVFF     0x193,0x190                                                                                     
002060   f190                                                                                                               
002062   c193     MOVFF     0x193,0x18f                                                                                     
002064   f18f                                                                                                               
002066   c193     MOVFF     0x193,0x18e                                                                                     
002068   f18e                                                                                                               
00206a   c193     MOVFF     0x193,0x18d                                                                                     
00206c   f18d                                                                                                               
00206e   c193     MOVFF     0x193,0x18c                                                                                     
002070   f18c                                                                                                               
002072   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002074   928d     BCF       0x8d,0x1,0x0                                                                                    
002076   908c     BCF       0x8c,0x0,0x0                                                                                    
002078   908d     BCF       0x8d,0x0,0x0                                                                                    
00207a   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00207c   968d     BCF       0x8d,0x3,0x0                                                                                    
00207e   948c     BCF       0x8c,0x2,0x0                                                                                    
002080   948d     BCF       0x8d,0x2,0x0                                                                                    
002082   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002084   9a8d     BCF       0x8d,0x5,0x0                                                                                    
002086   988c     BCF       0x8c,0x4,0x0                                                                                    
002088   988d     BCF       0x8d,0x4,0x0                                                                                    
00208a   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00208c   9091     BCF       0x91,0x0,0x0                                                                                    
00208e   9c8c     BCF       0x8c,0x6,0x0                                                                                    
002090   9c8d     BCF       0x8d,0x6,0x0                                                                                    
002092   0102     MOVLB     0x2            	counter1 = 0;                                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002094   6b04     CLRF      0x4,0x1                                                                                         
002096   6b05     CLRF      0x5,0x1                                                                                         
002098   6b04     CLRF      0x4,0x1        	counter1 = 0;                                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00209a   6b05     CLRF      0x5,0x1                                                                                         
00209c   6b0a     CLRF      0xa,0x1        	counter_pulse = 0;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00209e   6b0b     CLRF      0xb,0x1                                                                                         
0020a0   6b12     CLRF      0x12,0x1       	mode = 0;                                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020a2   6b00     CLRF      0x0,0x1          autoOption = 0;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020a4   0101     MOVLB     0x1              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020a6   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
0020a8   d399     BRA       0x27dc                                                                                          
0027da   d464     BRA       0x20a4                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020aa   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020ac   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
0020ae   d395     BRA       0x27da                                                                                          
                                               {                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020b0   0ea0     MOVLW     0xa0                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0020b4   0e01     MOVLW     0x1                                                                                             
0020b6   6ee6     MOVWF     0xe6,0x0                                                                                        
0020b8   ec07     CALL      0x2a0e,0x0                                                                                      
0020ba   f015                                                                                                               
0020bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   /* Add your own autonomous code here. */                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020c0   c193     MOVFF     0x193,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020c2   ffe6                                                                                                               
0020c4   c192     MOVFF     0x192,0xfe6                                                                                     
0020c6   ffe6                                                                                                               
0020c8   c191     MOVFF     0x191,0xfe6                                                                                     
0020ca   ffe6                                                                                                               
0020cc   c190     MOVFF     0x190,0xfe6                                                                                     
0020ce   ffe6                                                                                                               
0020d0   ece2     CALL      0x45c4,0x0                                                                                      
0020d2   f022                                                                                                               
0020d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//option switches... all we really need is an on/off signal.                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020dc   5081     MOVF      0x81,0x0,0x0   		bAutoOpt01 = rc_dig_in01;  //upper switch                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020de   0b04     ANDLW     0x4                                                                                             
0020e0   e001     BZ        0x20e4                                                                                          
0020e2   0e01     MOVLW     0x1                                                                                             
0020e4   0102     MOVLB     0x2                                                                                             
0020e6   6f58     MOVWF     0x58,0x1                                                                                        
0020e8   5081     MOVF      0x81,0x0,0x0   		bAutoOpt02 = rc_dig_in03;  //lower switch                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020ea   0b10     ANDLW     0x10                                                                                            
0020ec   e001     BZ        0x20f0                                                                                          
0020ee   0e01     MOVLW     0x1                                                                                             
0020f0   6f59     MOVWF     0x59,0x1                                                                                        
                                           		//parameter dipswitches                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020f2   5081     MOVF      0x81,0x0,0x0   		bOptBit01 = !rc_dig_in05;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0020f4   0b40     ANDLW     0x40                                                                                            
0020f6   0a40     XORLW     0x40                                                                                            
0020f8   e001     BZ        0x20fc                                                                                          
0020fa   0e01     MOVLW     0x1                                                                                             
0020fc   6f5a     MOVWF     0x5a,0x1                                                                                        
0020fe   5081     MOVF      0x81,0x0,0x0   		bOptBit02 = !rc_dig_in06;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002100   0b80     ANDLW     0x80                                                                                            
002102   0a80     XORLW     0x80                                                                                            
002104   e001     BZ        0x2108                                                                                          
002106   0e01     MOVLW     0x1                                                                                             
002108   6f5b     MOVWF     0x5b,0x1                                                                                        
00210a   5087     MOVF      0x87,0x0,0x0   		bOptBit03 = !rc_dig_in07;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00210c   0b01     ANDLW     0x1                                                                                             
00210e   0a01     XORLW     0x1                                                                                             
002110   6f5c     MOVWF     0x5c,0x1                                                                                        
002112   5087     MOVF      0x87,0x0,0x0   		bOptBit04 = !rc_dig_in08;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002114   0b02     ANDLW     0x2                                                                                             
002116   0a02     XORLW     0x2                                                                                             
002118   e001     BZ        0x211c                                                                                          
00211a   0e01     MOVLW     0x1                                                                                             
00211c   6f5d     MOVWF     0x5d,0x1                                                                                        
00211e   5087     MOVF      0x87,0x0,0x0   		bOptBit05 = !rc_dig_in09;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002120   0b04     ANDLW     0x4                                                                                             
002122   0a04     XORLW     0x4                                                                                             
002124   e001     BZ        0x2128                                                                                          
002126   0e01     MOVLW     0x1                                                                                             
002128   6f5e     MOVWF     0x5e,0x1                                                                                        
00212a   5087     MOVF      0x87,0x0,0x0   		bOptBit06 = !rc_dig_in10;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00212c   0b08     ANDLW     0x8                                                                                             
00212e   0a08     XORLW     0x8                                                                                             
002130   e001     BZ        0x2134                                                                                          
002132   0e01     MOVLW     0x1                                                                                             
002134   6f5f     MOVWF     0x5f,0x1                                                                                        
002136   5088     MOVF      0x88,0x0,0x0   		bOptBit07 = !rc_dig_in11;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002138   0b02     ANDLW     0x2                                                                                             
00213a   0a02     XORLW     0x2                                                                                             
00213c   e001     BZ        0x2140                                                                                          
00213e   0e01     MOVLW     0x1                                                                                             
002140   6f60     MOVWF     0x60,0x1                                                                                        
002142   5088     MOVF      0x88,0x0,0x0   		bOptBit08 = !rc_dig_in12;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002144   0b04     ANDLW     0x4                                                                                             
002146   0a04     XORLW     0x4                                                                                             
002148   e001     BZ        0x214c                                                                                          
00214a   0e01     MOVLW     0x1                                                                                             
00214c   6f61     MOVWF     0x61,0x1                                                                                        
                                           		                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//update variables                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//FOR THE BINARY DEFICIENT: GG = 1, RG=2, GR = 3, RR = 4                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00214e   5159     MOVF      0x59,0x0,0x1   		autoOption = (bAutoOpt01 + (bAutoOpt02*2))+1; //parse the binary input         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002150   24e8     ADDWF     0xe8,0x0,0x0                                                                                    
002152   2558     ADDWF     0x58,0x0,0x1                                                                                    
002154   0f01     ADDLW     0x1                                                                                             
002156   0102     MOVLB     0x2                                                                                             
002158   6f00     MOVWF     0x0,0x1                                                                                         
00215a   ec25     CALL      0x4a4a,0x0     		robotTilt = Get_Gyro_Angle();                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00215c   f025                                                                                                               
00215e   c033     MOVFF     0x33,0x20c                                                                                      
002160   f20c                                                                                                               
002162   c034     MOVFF     0x34,0x20d                                                                                      
002164   f20d                                                                                                               
002166   c184     MOVFF     0x184,0x20e    		cam_pan = PAN_SERVO;                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002168   f20e                                                                                                               
00216a   c185     MOVFF     0x185,0x20f    		cam_tilt = TILT_SERVO;                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00216c   f20f                                                                                                               
00216e   c1c7     MOVFF     0x1c7,0x210    		cam_pixels = T_Packet_Data.pixels;                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002170   f210                                                                                                               
                                           		                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//initialize camera use and tracking.                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002172   ec91     CALL      0x2f22,0x0     		Camera_Handler();                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002174   f017                                                                                                               
                                           		                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//printf("cam_tilt: %d | pwm08: %d | pwm09: %d\r\n", cam_tilt, pwm08, pwm09);  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//printf("autoOption = %d\r\n", autoOption);                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//printf("Shooter(R,L) = (%d,%d)\r\nDrive(R,L) = (%d,%d)\r\nRokenbok(R,L) = (%d,%d)\r\nLoader = %d\r\nMode=%d\r\n\r\n",pwm04,pwm05, pwm08,pwm09, pwm03,pwm07, pwm06, autoOption); C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		                                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002176   0102     MOVLB     0x2            		if (autoOption == 1) { //go to corner goal, detect tilt, shit the balls        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002178   0500     DECF      0x0,0x0,0x1                                                                                     
00217a   e13c     BNZ       0x21f4                                                                                          
                                           			//printf("Corner Goal Auto Mode\r\n");                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00217c   350d     RLCF      0xd,0x0,0x1    			if (robotTilt > 25 || robotTilt < -25) { //shit the balls :D                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00217e   e204     BC        0x2188                                                                                          
002180   510c     MOVF      0xc,0x0,0x1                                                                                     
002182   0819     SUBLW     0x19                                                                                            
002184   0e00     MOVLW     0x0                                                                                             
002186   550d     SUBFWB    0xd,0x0,0x1                                                                                     
002188   e308     BNC       0x219a                                                                                          
00218a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00218c   510d     MOVF      0xd,0x0,0x1                                                                                     
00218e   e704     BNN       0x2198                                                                                          
002190   0ee7     MOVLW     0xe7                                                                                            
002192   5d0c     SUBWF     0xc,0x0,0x1                                                                                     
002194   0eff     MOVLW     0xff                                                                                            
002196   590d     SUBWFB    0xd,0x0,0x1                                                                                     
002198   e208     BC        0x21aa                                                                                          
00219a   0101     MOVLB     0x1            					pwm03 = 0;                                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00219c   6b86     CLRF      0x86,0x1                                                                                        
00219e   698a     SETF      0x8a,0x1       					pwm07 = 255;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021a0   0e8c     MOVLW     0x8c           					pwm08 = 140;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021a2   6f8b     MOVWF     0x8b,0x1                                                                                        
0021a4   0e6d     MOVLW     0x6d           					pwm09 = 109;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021a6   6f8c     MOVWF     0x8c,0x1                                                                                        
                                           				                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021a8   d024     BRA       0x21f2         			}else{                                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021aa   0101     MOVLB     0x1            				pwm03 = pwm07 = 127;                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021ac   0e7f     MOVLW     0x7f                                                                                            
0021ae   6f8a     MOVWF     0x8a,0x1                                                                                        
0021b0   c18a     MOVFF     0x18a,0x186                                                                                     
0021b2   f186                                                                                                               
0021b4   0102     MOVLB     0x2            				counter1++;                                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021b6   2b04     INCF      0x4,0x1,0x1                                                                                     
0021b8   0e00     MOVLW     0x0                                                                                             
0021ba   2305     ADDWFC    0x5,0x1,0x1                                                                                     
0021bc   0e42     MOVLW     0x42           				if (counter1 < 66) {                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021be   5d04     SUBWF     0x4,0x0,0x1                                                                                     
0021c0   0e00     MOVLW     0x0                                                                                             
0021c2   5905     SUBWFB    0x5,0x0,0x1                                                                                     
0021c4   e206     BC        0x21d2                                                                                          
0021c6   0101     MOVLB     0x1            					pwm08 = 187; //move forwardS                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021c8   0ebb     MOVLW     0xbb                                                                                            
0021ca   6f8b     MOVWF     0x8b,0x1                                                                                        
0021cc   0e59     MOVLW     0x59           					pwm09 = 89;  //(WHY IS THIS VALUE FLIPPED?!)                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021ce   6f8c     MOVWF     0x8c,0x1                                                                                        
0021d0   d010     BRA       0x21f2         				}else if(counter1 < (22*5)) {                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021d2   0e6e     MOVLW     0x6e                                                                                            
0021d4   5d04     SUBWF     0x4,0x0,0x1                                                                                     
0021d6   0e00     MOVLW     0x0                                                                                             
0021d8   5905     SUBWFB    0x5,0x0,0x1                                                                                     
0021da   e206     BC        0x21e8                                                                                          
0021dc   0101     MOVLB     0x1            					pwm08 = 167;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021de   0ea7     MOVLW     0xa7                                                                                            
0021e0   6f8b     MOVWF     0x8b,0x1                                                                                        
0021e2   0e63     MOVLW     0x63           					pwm09 = 99;                                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021e4   6f8c     MOVWF     0x8c,0x1                                                                                        
0021e6   d005     BRA       0x21f2         				}else{                                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021e8   0101     MOVLB     0x1            					pwm08 = 137;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021ea   0e89     MOVLW     0x89                                                                                            
0021ec   6f8b     MOVWF     0x8b,0x1                                                                                        
0021ee   0e7f     MOVLW     0x7f           					pwm09 = 127;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021f0   6f8c     MOVWF     0x8c,0x1                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021f2   d2e3     BRA       0x27ba         		}else if (autoOption == 2) { //goto hotSpot, aim for light, fire in the hull   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021f4   0e02     MOVLW     0x2                                                                                             
0021f6   5d00     SUBWF     0x0,0x0,0x1                                                                                     
0021f8   e001     BZ        0x21fc                                                                                          
0021fa   d24b     BRA       0x2692                                                                                          
                                           			static char takeAim = 0;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			static char autoStep = 0;                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			static unsigned int timeToGo = 0;                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			static int target;                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			//RESET THE AUTO MODE!!                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			//if (counter1 < 1) {                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			//	autoStep = 0;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			//}                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021fc   c219     MOVFF     0x219,0xfe6    			printf(" counter1: %d | Phase: %d | time = %d | ", counter1, autoStep, timeToGo); C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0021fe   ffe6                                                                                                               
002200   c21a     MOVFF     0x21a,0xfe6                                                                                     
002202   ffe6                                                                                                               
002204   c218     MOVFF     0x218,0x0                                                                                       
002206   f000                                                                                                               
002208   6a01     CLRF      0x1,0x0                                                                                         
00220a   be00     BTFSC     0x0,0x7,0x0                                                                                     
00220c   6801     SETF      0x1,0x0                                                                                         
00220e   c000     MOVFF     0x0,0xfe6                                                                                       
002210   ffe6                                                                                                               
002212   c001     MOVFF     0x1,0xfe6                                                                                       
002214   ffe6                                                                                                               
002216   c204     MOVFF     0x204,0xfe6                                                                                     
002218   ffe6                                                                                                               
00221a   c205     MOVFF     0x205,0xfe6                                                                                     
00221c   ffe6                                                                                                               
00221e   0eae     MOVLW     0xae                                                                                            
002220   6e02     MOVWF     0x2,0x0                                                                                         
002222   0e4f     MOVLW     0x4f                                                                                            
002224   6e03     MOVWF     0x3,0x0                                                                                         
002226   6a04     CLRF      0x4,0x0                                                                                         
002228   c002     MOVFF     0x2,0xfe6                                                                                       
00222a   ffe6                                                                                                               
00222c   c003     MOVFF     0x3,0xfe6                                                                                       
00222e   ffe6                                                                                                               
002230   c004     MOVFF     0x4,0xfe6                                                                                       
002232   ffe6                                                                                                               
002234   ece6     CALL      0x51cc,0x0                                                                                      
002236   f028                                                                                                               
002238   6ef5     MOVWF     0xf5,0x0                                                                                        
00223a   0e09     MOVLW     0x9                                                                                             
00223c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00223e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002240   ec92     CALL      0x3b24,0x0     			Servo_Track();                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002242   f01d                                                                                                               
002244   c25a     MOVFF     0x25a,0x2      			timeToGo = (int)(1000+(bOptBit01)+(bOptBit02*2)+(bOptBit03*4)-1000)*44;       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002246   f002                                                                                                               
002248   6a03     CLRF      0x3,0x0                                                                                         
00224a   be02     BTFSC     0x2,0x7,0x0                                                                                     
00224c   6803     SETF      0x3,0x0                                                                                         
00224e   0ee8     MOVLW     0xe8                                                                                            
002250   2602     ADDWF     0x2,0x1,0x0                                                                                     
002252   0e03     MOVLW     0x3                                                                                             
002254   2203     ADDWFC    0x3,0x1,0x0                                                                                     
002256   0102     MOVLB     0x2                                                                                             
002258   515b     MOVF      0x5b,0x0,0x1                                                                                    
00225a   24e8     ADDWF     0xe8,0x0,0x0                                                                                    
00225c   6e04     MOVWF     0x4,0x0                                                                                         
00225e   6a05     CLRF      0x5,0x0                                                                                         
002260   be04     BTFSC     0x4,0x7,0x0                                                                                     
002262   6805     SETF      0x5,0x0                                                                                         
002264   5002     MOVF      0x2,0x0,0x0                                                                                     
002266   2404     ADDWF     0x4,0x0,0x0                                                                                     
002268   6e00     MOVWF     0x0,0x0                                                                                         
00226a   5003     MOVF      0x3,0x0,0x0                                                                                     
00226c   2005     ADDWFC    0x5,0x0,0x0                                                                                     
00226e   6e01     MOVWF     0x1,0x0                                                                                         
002270   0e04     MOVLW     0x4                                                                                             
002272   035c     MULWF     0x5c,0x1                                                                                        
002274   cff3     MOVFF     0xff3,0x6                                                                                       
002276   f006                                                                                                               
002278   6a07     CLRF      0x7,0x0                                                                                         
00227a   be06     BTFSC     0x6,0x7,0x0                                                                                     
00227c   6807     SETF      0x7,0x0                                                                                         
00227e   5000     MOVF      0x0,0x0,0x0                                                                                     
002280   2406     ADDWF     0x6,0x0,0x0                                                                                     
002282   0102     MOVLB     0x2                                                                                             
002284   6f19     MOVWF     0x19,0x1                                                                                        
002286   5001     MOVF      0x1,0x0,0x0                                                                                     
002288   2007     ADDWFC    0x7,0x0,0x0                                                                                     
00228a   6f1a     MOVWF     0x1a,0x1                                                                                        
00228c   0ee8     MOVLW     0xe8                                                                                            
00228e   5f19     SUBWF     0x19,0x1,0x1                                                                                    
002290   0e03     MOVLW     0x3                                                                                             
002292   5b1a     SUBWFB    0x1a,0x1,0x1                                                                                    
002294   0e2c     MOVLW     0x2c                                                                                            
002296   031a     MULWF     0x1a,0x1                                                                                        
002298   cff3     MOVFF     0xff3,0x21a                                                                                     
00229a   f21a                                                                                                               
00229c   0319     MULWF     0x19,0x1                                                                                        
00229e   cff3     MOVFF     0xff3,0x219                                                                                     
0022a0   f219                                                                                                               
0022a2   50f4     MOVF      0xf4,0x0,0x0                                                                                    
0022a4   271a     ADDWF     0x1a,0x1,0x1                                                                                    
                                           			//Go out for one second, take aim, move forward till in range, take aim, fire. C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022a6   5118     MOVF      0x18,0x0,0x1   			if (autoStep == 0) {                                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022a8   e10d     BNZ       0x22c4                                                                                          
0022aa   2b04     INCF      0x4,0x1,0x1    				counter1++;                                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022ac   0e00     MOVLW     0x0                                                                                             
0022ae   2305     ADDWFC    0x5,0x1,0x1                                                                                     
0022b0   0e60     MOVLW     0x60           				temp_p1_y = 96;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022b2   6f13     MOVWF     0x13,0x1                                                                                        
0022b4   5119     MOVF      0x19,0x0,0x1   				if (counter1 >= timeToGo) {                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022b6   5d04     SUBWF     0x4,0x0,0x1                                                                                     
0022b8   511a     MOVF      0x1a,0x0,0x1                                                                                    
0022ba   5905     SUBWFB    0x5,0x0,0x1                                                                                     
0022bc   e302     BNC       0x22c2                                                                                          
0022be   0e01     MOVLW     0x1            					autoStep = 1;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022c0   6f18     MOVWF     0x18,0x1                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022c2   d11e     BRA       0x2500         			}else if (autoStep == 1) {                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022c4   0518     DECF      0x18,0x0,0x1                                                                                    
0022c6   e105     BNZ       0x22d2                                                                                          
                                           				//if (takeAim == 0) {                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				//	target = Get_Gyro_Angle() - 900;                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				//	takeAim = 1;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				//}                                                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022c8   0e7f     MOVLW     0x7f           				temp_p1_y = 127;                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022ca   6f13     MOVWF     0x13,0x1                                                                                        
0022cc   0e02     MOVLW     0x2            				autoStep = 2;  //The above code is flawed.  just skip on.                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022ce   6f18     MOVWF     0x18,0x1                                                                                        
0022d0   d117     BRA       0x2500         			}else if (autoStep == 2) {                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022d2   0e02     MOVLW     0x2                                                                                             
0022d4   5d18     SUBWF     0x18,0x0,0x1                                                                                    
0022d6   e12a     BNZ       0x232c                                                                                          
0022d8   0101     MOVLB     0x1            				if (T_Packet_Data.confidence > 100) {                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022da   51c8     MOVF      0xc8,0x0,0x1                                                                                    
0022dc   0864     SUBLW     0x64                                                                                            
0022de   e222     BC        0x2324                                                                                          
0022e0   0102     MOVLB     0x2            					if (cam_tilt < 175) {                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022e2   510f     MOVF      0xf,0x0,0x1                                                                                     
0022e4   6e00     MOVWF     0x0,0x0                                                                                         
0022e6   6a01     CLRF      0x1,0x0                                                                                         
0022e8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0022ea   5001     MOVF      0x1,0x0,0x0                                                                                     
0022ec   e604     BN        0x22f6                                                                                          
0022ee   0eaf     MOVLW     0xaf                                                                                            
0022f0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0022f2   0e00     MOVLW     0x0                                                                                             
0022f4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0022f6   e203     BC        0x22fe                                                                                          
0022f8   0e60     MOVLW     0x60           						temp_p1_y = 96;                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022fa   6f13     MOVWF     0x13,0x1                                                                                        
0022fc   d012     BRA       0x2322         					}else if (cam_tilt > 185) {                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0022fe   510f     MOVF      0xf,0x0,0x1                                                                                     
002300   6e00     MOVWF     0x0,0x0                                                                                         
002302   6a01     CLRF      0x1,0x0                                                                                         
002304   3401     RLCF      0x1,0x0,0x0                                                                                     
002306   e204     BC        0x2310                                                                                          
002308   5000     MOVF      0x0,0x0,0x0                                                                                     
00230a   08b9     SUBLW     0xb9                                                                                            
00230c   0e00     MOVLW     0x0                                                                                             
00230e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
002310   e203     BC        0x2318                                                                                          
002312   0ea0     MOVLW     0xa0           						temp_p1_y = 160;                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002314   6f13     MOVWF     0x13,0x1                                                                                        
002316   d005     BRA       0x2322         					}else{                                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002318   0e7f     MOVLW     0x7f           						temp_p1_y = 127;                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00231a   6f13     MOVWF     0x13,0x1                                                                                        
00231c   0e03     MOVLW     0x3            						autoStep = 3;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00231e   6f18     MOVWF     0x18,0x1                                                                                        
002320   6b17     CLRF      0x17,0x1       						takeAim = 0;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002322   d003     BRA       0x232a         				}else{                                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002324   0102     MOVLB     0x2            					temp_p1_y = 127;                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002326   0e7f     MOVLW     0x7f                                                                                            
002328   6f13     MOVWF     0x13,0x1                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				//takeAim = 0;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00232a   d0ea     BRA       0x2500         			}else if (autoStep == 3) {                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00232c   0e03     MOVLW     0x3                                                                                             
00232e   5d18     SUBWF     0x18,0x0,0x1                                                                                    
002330   e001     BZ        0x2334                                                                                          
002332   d0e6     BRA       0x2500                                                                                          
002334   0e7f     MOVLW     0x7f           				temp_p1_y = 127;                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002336   6f13     MOVWF     0x13,0x1                                                                                        
002338   0101     MOVLB     0x1            				if (T_Packet_Data.confidence > 170) { // && cam_pixels > 1) {                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00233a   51c8     MOVF      0xc8,0x0,0x1                                                                                    
00233c   6e00     MOVWF     0x0,0x0                                                                                         
00233e   6a01     CLRF      0x1,0x0                                                                                         
002340   3401     RLCF      0x1,0x0,0x0                                                                                     
002342   e204     BC        0x234c                                                                                          
002344   5000     MOVF      0x0,0x0,0x0                                                                                     
002346   08aa     SUBLW     0xaa                                                                                            
002348   0e00     MOVLW     0x0                                                                                             
00234a   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00234c   e301     BNC       0x2350                                                                                          
00234e   d0a7     BRA       0x249e                                                                                          
002350   0102     MOVLB     0x2            					if (takeAim == 0) {                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002352   5117     MOVF      0x17,0x0,0x1                                                                                    
002354   e001     BZ        0x2358                                                                                          
002356   d090     BRA       0x2478                                                                                          
002358   ec25     CALL      0x4a4a,0x0     					target =  Get_Gyro_Angle() + (((( (float)PAN_SERVO - 124.0f) * 65.0f)/124.0f)*10.0f); C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00235a   f025                                                                                                               
00235c   ecbf     CALL      0x357e,0x0                                                                                      
00235e   f01a                                                                                                               
002360   c034     MOVFF     0x34,0x0                                                                                        
002362   f000                                                                                                               
002364   c035     MOVFF     0x35,0x1                                                                                        
002366   f001                                                                                                               
002368   c036     MOVFF     0x36,0x2                                                                                        
00236a   f002                                                                                                               
00236c   c037     MOVFF     0x37,0x3                                                                                        
00236e   f003                                                                                                               
002370   c184     MOVFF     0x184,0x36                                                                                      
002372   f036                                                                                                               
002374   ecac     CALL      0x3558,0x0                                                                                      
002376   f01a                                                                                                               
002378   c034     MOVFF     0x34,0x14                                                                                       
00237a   f014                                                                                                               
00237c   c035     MOVFF     0x35,0x15                                                                                       
00237e   f015                                                                                                               
002380   c036     MOVFF     0x36,0x16                                                                                       
002382   f016                                                                                                               
002384   c037     MOVFF     0x37,0x17                                                                                       
002386   f017                                                                                                               
002388   6a39     CLRF      0x39,0x0                                                                                        
00238a   6a3a     CLRF      0x3a,0x0                                                                                        
00238c   0ef8     MOVLW     0xf8                                                                                            
00238e   6e3b     MOVWF     0x3b,0x0                                                                                        
002390   0e42     MOVLW     0x42                                                                                            
002392   6e3c     MOVWF     0x3c,0x0                                                                                        
002394   c014     MOVFF     0x14,0x34                                                                                       
002396   f034                                                                                                               
002398   c015     MOVFF     0x15,0x35                                                                                       
00239a   f035                                                                                                               
00239c   c016     MOVFF     0x16,0x36                                                                                       
00239e   f036                                                                                                               
0023a0   c017     MOVFF     0x17,0x37                                                                                       
0023a2   f037                                                                                                               
0023a4   ecd8     CALL      0x35b0,0x0                                                                                      
0023a6   f01a                                                                                                               
0023a8   c034     MOVFF     0x34,0x10                                                                                       
0023aa   f010                                                                                                               
0023ac   c035     MOVFF     0x35,0x11                                                                                       
0023ae   f011                                                                                                               
0023b0   c036     MOVFF     0x36,0x12                                                                                       
0023b2   f012                                                                                                               
0023b4   c037     MOVFF     0x37,0x13                                                                                       
0023b6   f013                                                                                                               
0023b8   6a39     CLRF      0x39,0x0                                                                                        
0023ba   6a3a     CLRF      0x3a,0x0                                                                                        
0023bc   0e82     MOVLW     0x82                                                                                            
0023be   6e3b     MOVWF     0x3b,0x0                                                                                        
0023c0   0e42     MOVLW     0x42                                                                                            
0023c2   6e3c     MOVWF     0x3c,0x0                                                                                        
0023c4   c010     MOVFF     0x10,0x34                                                                                       
0023c6   f034                                                                                                               
0023c8   c011     MOVFF     0x11,0x35                                                                                       
0023ca   f035                                                                                                               
0023cc   c012     MOVFF     0x12,0x36                                                                                       
0023ce   f036                                                                                                               
0023d0   c013     MOVFF     0x13,0x37                                                                                       
0023d2   f037                                                                                                               
0023d4   ecc2     CALL      0x3784,0x0                                                                                      
0023d6   f01b                                                                                                               
0023d8   c034     MOVFF     0x34,0xc                                                                                        
0023da   f00c                                                                                                               
0023dc   c035     MOVFF     0x35,0xd                                                                                        
0023de   f00d                                                                                                               
0023e0   c036     MOVFF     0x36,0xe                                                                                        
0023e2   f00e                                                                                                               
0023e4   c037     MOVFF     0x37,0xf                                                                                        
0023e6   f00f                                                                                                               
0023e8   6a39     CLRF      0x39,0x0                                                                                        
0023ea   6a3a     CLRF      0x3a,0x0                                                                                        
0023ec   0ef8     MOVLW     0xf8                                                                                            
0023ee   6e3b     MOVWF     0x3b,0x0                                                                                        
0023f0   0e42     MOVLW     0x42                                                                                            
0023f2   6e3c     MOVWF     0x3c,0x0                                                                                        
0023f4   c00c     MOVFF     0xc,0x34                                                                                        
0023f6   f034                                                                                                               
0023f8   c00d     MOVFF     0xd,0x35                                                                                        
0023fa   f035                                                                                                               
0023fc   c00e     MOVFF     0xe,0x36                                                                                        
0023fe   f036                                                                                                               
002400   c00f     MOVFF     0xf,0x37                                                                                        
002402   f037                                                                                                               
002404   ec6f     CALL      0x36de,0x0                                                                                      
002406   f01b                                                                                                               
002408   c034     MOVFF     0x34,0x8                                                                                        
00240a   f008                                                                                                               
00240c   c035     MOVFF     0x35,0x9                                                                                        
00240e   f009                                                                                                               
002410   c036     MOVFF     0x36,0xa                                                                                        
002412   f00a                                                                                                               
002414   c037     MOVFF     0x37,0xb                                                                                        
002416   f00b                                                                                                               
002418   6a39     CLRF      0x39,0x0                                                                                        
00241a   6a3a     CLRF      0x3a,0x0                                                                                        
00241c   0e20     MOVLW     0x20                                                                                            
00241e   6e3b     MOVWF     0x3b,0x0                                                                                        
002420   0e41     MOVLW     0x41                                                                                            
002422   6e3c     MOVWF     0x3c,0x0                                                                                        
002424   c008     MOVFF     0x8,0x34                                                                                        
002426   f034                                                                                                               
002428   c009     MOVFF     0x9,0x35                                                                                        
00242a   f035                                                                                                               
00242c   c00a     MOVFF     0xa,0x36                                                                                        
00242e   f036                                                                                                               
002430   c00b     MOVFF     0xb,0x37                                                                                        
002432   f037                                                                                                               
002434   ecc2     CALL      0x3784,0x0                                                                                      
002436   f01b                                                                                                               
002438   c034     MOVFF     0x34,0x4                                                                                        
00243a   f004                                                                                                               
00243c   c035     MOVFF     0x35,0x5                                                                                        
00243e   f005                                                                                                               
002440   c036     MOVFF     0x36,0x6                                                                                        
002442   f006                                                                                                               
002444   c037     MOVFF     0x37,0x7                                                                                        
002446   f007                                                                                                               
002448   c004     MOVFF     0x4,0x39                                                                                        
00244a   f039                                                                                                               
00244c   c005     MOVFF     0x5,0x3a                                                                                        
00244e   f03a                                                                                                               
002450   c006     MOVFF     0x6,0x3b                                                                                        
002452   f03b                                                                                                               
002454   c007     MOVFF     0x7,0x3c                                                                                        
002456   f03c                                                                                                               
002458   c000     MOVFF     0x0,0x34                                                                                        
00245a   f034                                                                                                               
00245c   c001     MOVFF     0x1,0x35                                                                                        
00245e   f035                                                                                                               
002460   c002     MOVFF     0x2,0x36                                                                                        
002462   f036                                                                                                               
002464   c003     MOVFF     0x3,0x37                                                                                        
002466   f037                                                                                                               
002468   ecd9     CALL      0x35b2,0x0                                                                                      
00246a   f01a                                                                                                               
00246c   ecdd     CALL      0x39ba,0x0                                                                                      
00246e   f01c                                                                                                               
002470   c035     MOVFF     0x35,0x262                                                                                      
002472   f262                                                                                                               
002474   c036     MOVFF     0x36,0x263                                                                                      
002476   f263                                                                                                               
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002478   0102     MOVLB     0x2            					takeAim = 1;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00247a   0e01     MOVLW     0x1                                                                                             
00247c   6f17     MOVWF     0x17,0x1                                                                                        
00247e   0e9d     MOVLW     0x9d           					printf(" Finding Target ");                                                 C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002480   6e00     MOVWF     0x0,0x0                                                                                         
002482   0e4f     MOVLW     0x4f                                                                                            
002484   6e01     MOVWF     0x1,0x0                                                                                         
002486   6a02     CLRF      0x2,0x0                                                                                         
002488   c000     MOVFF     0x0,0xfe6                                                                                       
00248a   ffe6                                                                                                               
00248c   c001     MOVFF     0x1,0xfe6                                                                                       
00248e   ffe6                                                                                                               
002490   c002     MOVFF     0x2,0xfe6                                                                                       
002492   ffe6                                                                                                               
002494   ece6     CALL      0x51cc,0x0                                                                                      
002496   f028                                                                                                               
002498   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00249a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00249c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00249e   0102     MOVLB     0x2            				if (cam_pan < 137 && cam_pan > 117  && T_Packet_Data.confidence > 100) {     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024a0   510e     MOVF      0xe,0x0,0x1                                                                                     
0024a2   6e00     MOVWF     0x0,0x0                                                                                         
0024a4   6a01     CLRF      0x1,0x0                                                                                         
0024a6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0024a8   5001     MOVF      0x1,0x0,0x0                                                                                     
0024aa   e604     BN        0x24b4                                                                                          
0024ac   0e89     MOVLW     0x89                                                                                            
0024ae   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0024b0   0e00     MOVLW     0x0                                                                                             
0024b2   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0024b4   e20a     BC        0x24ca                                                                                          
0024b6   510e     MOVF      0xe,0x0,0x1                                                                                     
0024b8   0875     SUBLW     0x75                                                                                            
0024ba   e207     BC        0x24ca                                                                                          
0024bc   0101     MOVLB     0x1                                                                                             
0024be   51c8     MOVF      0xc8,0x0,0x1                                                                                    
0024c0   0864     SUBLW     0x64                                                                                            
0024c2   e203     BC        0x24ca                                                                                          
0024c4   0101     MOVLB     0x1            					pwm06 = 255;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024c6   6989     SETF      0x89,0x1                                                                                        
0024c8   d003     BRA       0x24d0         				}else{                                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024ca   0101     MOVLB     0x1            					pwm06 = 127;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024cc   0e7f     MOVLW     0x7f                                                                                            
0024ce   6f89     MOVWF     0x89,0x1                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024d0   0102     MOVLB     0x2            				if (cam_tilt > 185 || cam_tilt < 170) {                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024d2   510f     MOVF      0xf,0x0,0x1                                                                                     
0024d4   6e00     MOVWF     0x0,0x0                                                                                         
0024d6   6a01     CLRF      0x1,0x0                                                                                         
0024d8   3401     RLCF      0x1,0x0,0x0                                                                                     
0024da   e204     BC        0x24e4                                                                                          
0024dc   5000     MOVF      0x0,0x0,0x0                                                                                     
0024de   08b9     SUBLW     0xb9                                                                                            
0024e0   0e00     MOVLW     0x0                                                                                             
0024e2   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0024e4   e30b     BNC       0x24fc                                                                                          
0024e6   510f     MOVF      0xf,0x0,0x1                                                                                     
0024e8   6e02     MOVWF     0x2,0x0                                                                                         
0024ea   6a03     CLRF      0x3,0x0                                                                                         
0024ec   90d8     BCF       0xd8,0x0,0x0                                                                                    
0024ee   5003     MOVF      0x3,0x0,0x0                                                                                     
0024f0   e604     BN        0x24fa                                                                                          
0024f2   0eaa     MOVLW     0xaa                                                                                            
0024f4   5c02     SUBWF     0x2,0x0,0x0                                                                                     
0024f6   0e00     MOVLW     0x0                                                                                             
0024f8   5803     SUBWFB    0x3,0x0,0x0                                                                                     
0024fa   e202     BC        0x2500                                                                                          
0024fc   0e02     MOVLW     0x2            					autoStep = 2;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0024fe   6f18     MOVWF     0x18,0x1                                                                                        
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			/*else if (autoStep == 4) {                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				if (cam_pan < 109 || cam_pan > 139) {                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           					autoStep = 3;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           					takeAim = 0;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				}else{                                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           					autoStep = 3;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			}*/                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002500   510e     MOVF      0xe,0x0,0x1    			printf("AutoStoop : %d | Aim: %d | Confidence: %d | camPan: %d\r\n", autoStep, takeAim, T_Packet_Data.confidence, cam_pan); C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002502   6ee6     MOVWF     0xe6,0x0                                                                                        
002504   6ae6     CLRF      0xe6,0x0                                                                                        
002506   0101     MOVLB     0x1                                                                                             
002508   51c8     MOVF      0xc8,0x0,0x1                                                                                    
00250a   6ee6     MOVWF     0xe6,0x0                                                                                        
00250c   6ae6     CLRF      0xe6,0x0                                                                                        
00250e   c217     MOVFF     0x217,0x0                                                                                       
002510   f000                                                                                                               
002512   6a01     CLRF      0x1,0x0                                                                                         
002514   be00     BTFSC     0x0,0x7,0x0                                                                                     
002516   6801     SETF      0x1,0x0                                                                                         
002518   c000     MOVFF     0x0,0xfe6                                                                                       
00251a   ffe6                                                                                                               
00251c   c001     MOVFF     0x1,0xfe6                                                                                       
00251e   ffe6                                                                                                               
002520   c218     MOVFF     0x218,0x2                                                                                       
002522   f002                                                                                                               
002524   6a03     CLRF      0x3,0x0                                                                                         
002526   be02     BTFSC     0x2,0x7,0x0                                                                                     
002528   6803     SETF      0x3,0x0                                                                                         
00252a   c002     MOVFF     0x2,0xfe6                                                                                       
00252c   ffe6                                                                                                               
00252e   c003     MOVFF     0x3,0xfe6                                                                                       
002530   ffe6                                                                                                               
002532   0e64     MOVLW     0x64                                                                                            
002534   6e04     MOVWF     0x4,0x0                                                                                         
002536   0e4f     MOVLW     0x4f                                                                                            
002538   6e05     MOVWF     0x5,0x0                                                                                         
00253a   6a06     CLRF      0x6,0x0                                                                                         
00253c   c004     MOVFF     0x4,0xfe6                                                                                       
00253e   ffe6                                                                                                               
002540   c005     MOVFF     0x5,0xfe6                                                                                       
002542   ffe6                                                                                                               
002544   c006     MOVFF     0x6,0xfe6                                                                                       
002546   ffe6                                                                                                               
002548   ece6     CALL      0x51cc,0x0                                                                                      
00254a   f028                                                                                                               
00254c   6ef5     MOVWF     0xf5,0x0                                                                                        
00254e   0e0b     MOVLW     0xb                                                                                             
002550   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002552   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002554   0102     MOVLB     0x2            			if (takeAim == 1) {                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002556   0517     DECF      0x17,0x0,0x1                                                                                    
002558   e157     BNZ       0x2608                                                                                          
00255a   0e7f     MOVLW     0x7f           				temp_p1_x = flip_axis(PIkDControl(75,15 ,50, target-Get_Gyro_Angle()), 127); C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00255c   6ee6     MOVWF     0xe6,0x0                                                                                        
00255e   c262     MOVFF     0x262,0x4                                                                                       
002560   f004                                                                                                               
002562   c263     MOVFF     0x263,0x5                                                                                       
002564   f005                                                                                                               
002566   6a06     CLRF      0x6,0x0                                                                                         
002568   6a07     CLRF      0x7,0x0                                                                                         
00256a   ae05     BTFSS     0x5,0x7,0x0                                                                                     
00256c   d002     BRA       0x2572                                                                                          
00256e   6806     SETF      0x6,0x0                                                                                         
002570   6807     SETF      0x7,0x0                                                                                         
002572   c004     MOVFF     0x4,0xfe6                                                                                       
002574   ffe6                                                                                                               
002576   c005     MOVFF     0x5,0xfe6                                                                                       
002578   ffe6                                                                                                               
00257a   c006     MOVFF     0x6,0xfe6                                                                                       
00257c   ffe6                                                                                                               
00257e   c007     MOVFF     0x7,0xfe6                                                                                       
002580   ffe6                                                                                                               
002582   ec25     CALL      0x4a4a,0x0                                                                                      
002584   f025                                                                                                               
002586   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002588   cfe7     MOVFF     0xfe7,0x7                                                                                       
00258a   f007                                                                                                               
00258c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00258e   cfe7     MOVFF     0xfe7,0x6                                                                                       
002590   f006                                                                                                               
002592   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002594   cfe7     MOVFF     0xfe7,0x5                                                                                       
002596   f005                                                                                                               
002598   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00259a   cfe7     MOVFF     0xfe7,0x4                                                                                       
00259c   f004                                                                                                               
00259e   5033     MOVF      0x33,0x0,0x0                                                                                    
0025a0   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0025a2   6e00     MOVWF     0x0,0x0                                                                                         
0025a4   5034     MOVF      0x34,0x0,0x0                                                                                    
0025a6   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0025a8   6e01     MOVWF     0x1,0x0                                                                                         
0025aa   5035     MOVF      0x35,0x0,0x0                                                                                    
0025ac   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0025ae   6e02     MOVWF     0x2,0x0                                                                                         
0025b0   5036     MOVF      0x36,0x0,0x0                                                                                    
0025b2   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0025b4   6e03     MOVWF     0x3,0x0                                                                                         
0025b6   c000     MOVFF     0x0,0xfe6                                                                                       
0025b8   ffe6                                                                                                               
0025ba   c001     MOVFF     0x1,0xfe6                                                                                       
0025bc   ffe6                                                                                                               
0025be   0e32     MOVLW     0x32                                                                                            
0025c0   6ee6     MOVWF     0xe6,0x0                                                                                        
0025c2   0e0f     MOVLW     0xf                                                                                             
0025c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0025c6   0e4b     MOVLW     0x4b                                                                                            
0025c8   6ee6     MOVWF     0xe6,0x0                                                                                        
0025ca   ec5a     CALL      0x18b4,0x0                                                                                      
0025cc   f00c                                                                                                               
0025ce   6ef5     MOVWF     0xf5,0x0                                                                                        
0025d0   0e05     MOVLW     0x5                                                                                             
0025d2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0025d4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0025d6   6ee6     MOVWF     0xe6,0x0                                                                                        
0025d8   eca7     CALL      0x174e,0x0                                                                                      
0025da   f00b                                                                                                               
0025dc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025e0   0102     MOVLB     0x2                                                                                             
0025e2   6f14     MOVWF     0x14,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0025e4   510e     MOVF      0xe,0x0,0x1    				if ((cam_pan > 109 || cam_pan < 139))  {                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0025e6   086d     SUBLW     0x6d                                                                                            
0025e8   e30b     BNC       0x2600                                                                                          
0025ea   510e     MOVF      0xe,0x0,0x1                                                                                     
0025ec   6e00     MOVWF     0x0,0x0                                                                                         
0025ee   6a01     CLRF      0x1,0x0                                                                                         
0025f0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0025f2   5001     MOVF      0x1,0x0,0x0                                                                                     
0025f4   e604     BN        0x25fe                                                                                          
0025f6   0e8b     MOVLW     0x8b                                                                                            
0025f8   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0025fa   0e00     MOVLW     0x0                                                                                             
0025fc   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0025fe   e201     BC        0x2602                                                                                          
                                           					//autoStep++;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002600   d003     BRA       0x2608         				}else if(autoStep == 3) {                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002602   0e03     MOVLW     0x3                                                                                             
002604   5d18     SUBWF     0x18,0x0,0x1                                                                                    
002606   e100     BNZ       0x2608                                                                                          
                                           					//takeAim = 0;                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           			//counter1++;  //take this out once we nail autonomous to perfection          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002608   5114     MOVF      0x14,0x0,0x1   			pwm08 = Limit_Mix(2000 + temp_p1_x + temp_p1_y - 127);                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00260a   6a03     CLRF      0x3,0x0                                                                                         
00260c   0fd0     ADDLW     0xd0                                                                                            
00260e   6e02     MOVWF     0x2,0x0                                                                                         
002610   0e07     MOVLW     0x7                                                                                             
002612   2203     ADDWFC    0x3,0x1,0x0                                                                                     
002614   5113     MOVF      0x13,0x0,0x1                                                                                    
002616   0100     MOVLB     0x0                                                                                             
002618   2402     ADDWF     0x2,0x0,0x0                                                                                     
00261a   6e00     MOVWF     0x0,0x0                                                                                         
00261c   0e00     MOVLW     0x0                                                                                             
00261e   2003     ADDWFC    0x3,0x0,0x0                                                                                     
002620   6e01     MOVWF     0x1,0x0                                                                                         
002622   0e7f     MOVLW     0x7f                                                                                            
002624   5e00     SUBWF     0x0,0x1,0x0                                                                                     
002626   0e00     MOVLW     0x0                                                                                             
002628   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00262a   c000     MOVFF     0x0,0xfe6                                                                                       
00262c   ffe6                                                                                                               
00262e   c001     MOVFF     0x1,0xfe6                                                                                       
002630   ffe6                                                                                                               
002632   ec91     CALL      0x1522,0x0                                                                                      
002634   f00a                                                                                                               
002636   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002638   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00263a   0101     MOVLB     0x1                                                                                             
00263c   6f8b     MOVWF     0x8b,0x1                                                                                        
00263e   0102     MOVLB     0x2            			pwm09 = Limit_Mix(2000 + temp_p1_x - temp_p1_y + 127);                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002640   5114     MOVF      0x14,0x0,0x1                                                                                    
002642   6a03     CLRF      0x3,0x0                                                                                         
002644   0fd0     ADDLW     0xd0                                                                                            
002646   6e02     MOVWF     0x2,0x0                                                                                         
002648   0e07     MOVLW     0x7                                                                                             
00264a   2203     ADDWFC    0x3,0x1,0x0                                                                                     
00264c   5113     MOVF      0x13,0x0,0x1                                                                                    
00264e   6e04     MOVWF     0x4,0x0                                                                                         
002650   6a05     CLRF      0x5,0x0                                                                                         
002652   5004     MOVF      0x4,0x0,0x0                                                                                     
002654   5c02     SUBWF     0x2,0x0,0x0                                                                                     
002656   6e00     MOVWF     0x0,0x0                                                                                         
002658   5005     MOVF      0x5,0x0,0x0                                                                                     
00265a   5803     SUBWFB    0x3,0x0,0x0                                                                                     
00265c   6e01     MOVWF     0x1,0x0                                                                                         
00265e   0e7f     MOVLW     0x7f                                                                                            
002660   2600     ADDWF     0x0,0x1,0x0                                                                                     
002662   0e00     MOVLW     0x0                                                                                             
002664   2201     ADDWFC    0x1,0x1,0x0                                                                                     
002666   c000     MOVFF     0x0,0xfe6                                                                                       
002668   ffe6                                                                                                               
00266a   c001     MOVFF     0x1,0xfe6                                                                                       
00266c   ffe6                                                                                                               
00266e   ec91     CALL      0x1522,0x0                                                                                      
002670   f00a                                                                                                               
002672   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002674   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002676   0101     MOVLB     0x1                                                                                             
002678   6f8c     MOVWF     0x8c,0x1                                                                                        
                                           			                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00267a   ba88     BTFSC     0x88,0x5,0x0   			if (!rc_dig_in16) {                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00267c   d005     BRA       0x2688                                                                                          
00267e   0eb4     MOVLW     0xb4           				pwm04 = pwm05 = 180;                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002680   6f88     MOVWF     0x88,0x1                                                                                        
002682   c188     MOVFF     0x188,0x187                                                                                     
002684   f187                                                                                                               
002686   d004     BRA       0x2690         			}else{                                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002688   0efe     MOVLW     0xfe           				pwm04 = pwm05 = sSpeed;                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00268a   6f88     MOVWF     0x88,0x1                                                                                        
00268c   c188     MOVFF     0x188,0x187                                                                                     
00268e   f187                                                                                                               
                                           			}                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002690   d094     BRA       0x27ba         		}else if (autoOption == 3) {                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002692   0e03     MOVLW     0x3                                                                                             
002694   5d00     SUBWF     0x0,0x0,0x1                                                                                     
002696   e001     BZ        0x269a                                                                                          
002698   d090     BRA       0x27ba                                                                                          
00269a   2b04     INCF      0x4,0x1,0x1    				counter1++;                                                                  C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00269c   0e00     MOVLW     0x0                                                                                             
00269e   2305     ADDWFC    0x5,0x1,0x1                                                                                     
0026a0   0102     MOVLB     0x2            				mode = (bOptBit01 + (2*bOptBit02));                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0026a2   515b     MOVF      0x5b,0x0,0x1                                                                                    
0026a4   24e8     ADDWF     0xe8,0x0,0x0                                                                                    
0026a6   255a     ADDWF     0x5a,0x0,0x1                                                                                    
0026a8   0102     MOVLB     0x2                                                                                             
0026aa   6f12     MOVWF     0x12,0x1                                                                                        
                                           				//pwm08 = Limit_Mix(2000+(150 - (counter1/10))); // Goes Right               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				//pwm09 = Limit_Mix(2000+(104 - (counter1/2)));                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0026ac   5112     MOVF      0x12,0x0,0x1   				if (mode == 0) {                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0026ae   e133     BNZ       0x2716                                                                                          
0026b0   0e82     MOVLW     0x82           					pwm08 = Limit_Mix(2000+(130 + (counter1/1))); //Goes Left                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0026b2   6a01     CLRF      0x1,0x0                                                                                         
0026b4   2504     ADDWF     0x4,0x0,0x1                                                                                     
0026b6   6e00     MOVWF     0x0,0x0                                                                                         
0026b8   5105     MOVF      0x5,0x0,0x1                                                                                     
0026ba   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0026bc   0ed0     MOVLW     0xd0                                                                                            
0026be   2600     ADDWF     0x0,0x1,0x0                                                                                     
0026c0   0e07     MOVLW     0x7                                                                                             
0026c2   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0026c4   c000     MOVFF     0x0,0xfe6                                                                                       
0026c6   ffe6                                                                                                               
0026c8   c001     MOVFF     0x1,0xfe6                                                                                       
0026ca   ffe6                                                                                                               
0026cc   ec91     CALL      0x1522,0x0                                                                                      
0026ce   f00a                                                                                                               
0026d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026d4   0101     MOVLB     0x1                                                                                             
0026d6   6f8b     MOVWF     0x8b,0x1                                                                                        
0026d8   c204     MOVFF     0x204,0x0      					pwm09 = Limit_Mix(2000+(104 + (counter1/4))); //Goes Left                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0026da   f000                                                                                                               
0026dc   c205     MOVFF     0x205,0x1                                                                                       
0026de   f001                                                                                                               
0026e0   0e02     MOVLW     0x2                                                                                             
0026e2   0b0f     ANDLW     0xf                                                                                             
0026e4   e005     BZ        0x26f0                                                                                          
0026e6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0026e8   3201     RRCF      0x1,0x1,0x0                                                                                     
0026ea   3200     RRCF      0x0,0x1,0x0                                                                                     
0026ec   06e8     DECF      0xe8,0x1,0x0                                                                                    
0026ee   e1fb     BNZ       0x26e6                                                                                          
0026f0   0e68     MOVLW     0x68                                                                                            
0026f2   2600     ADDWF     0x0,0x1,0x0                                                                                     
0026f4   0e00     MOVLW     0x0                                                                                             
0026f6   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0026f8   0ed0     MOVLW     0xd0                                                                                            
0026fa   2600     ADDWF     0x0,0x1,0x0                                                                                     
0026fc   0e07     MOVLW     0x7                                                                                             
0026fe   2201     ADDWFC    0x1,0x1,0x0                                                                                     
002700   c000     MOVFF     0x0,0xfe6                                                                                       
002702   ffe6                                                                                                               
002704   c001     MOVFF     0x1,0xfe6                                                                                       
002706   ffe6                                                                                                               
002708   ec91     CALL      0x1522,0x0                                                                                      
00270a   f00a                                                                                                               
00270c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00270e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002710   0101     MOVLB     0x1                                                                                             
002712   6f8c     MOVWF     0x8c,0x1                                                                                        
002714   d052     BRA       0x27ba         				}else if (mode == 1) {                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002716   0512     DECF      0x12,0x0,0x1                                                                                    
002718   e127     BNZ       0x2768                                                                                          
00271a   c204     MOVFF     0x204,0xfe6    					printf("counter1 : %d\r\n", counter1);                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00271c   ffe6                                                                                                               
00271e   c205     MOVFF     0x205,0xfe6                                                                                     
002720   ffe6                                                                                                               
002722   0e54     MOVLW     0x54                                                                                            
002724   6e00     MOVWF     0x0,0x0                                                                                         
002726   0e4f     MOVLW     0x4f                                                                                            
002728   6e01     MOVWF     0x1,0x0                                                                                         
00272a   6a02     CLRF      0x2,0x0                                                                                         
00272c   c000     MOVFF     0x0,0xfe6                                                                                       
00272e   ffe6                                                                                                               
002730   c001     MOVFF     0x1,0xfe6                                                                                       
002732   ffe6                                                                                                               
002734   c002     MOVFF     0x2,0xfe6                                                                                       
002736   ffe6                                                                                                               
002738   ece6     CALL      0x51cc,0x0                                                                                      
00273a   f028                                                                                                               
00273c   6ef5     MOVWF     0xf5,0x0                                                                                        
00273e   0e05     MOVLW     0x5                                                                                             
002740   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002742   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002744   0102     MOVLB     0x2            					if (counter1 < 88) {                                                        C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002746   0e58     MOVLW     0x58                                                                                            
002748   5d04     SUBWF     0x4,0x0,0x1                                                                                     
00274a   0e00     MOVLW     0x0                                                                                             
00274c   5905     SUBWFB    0x5,0x0,0x1                                                                                     
00274e   e206     BC        0x275c                                                                                          
002750   0101     MOVLB     0x1            						pwm08 = 200;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002752   0ec8     MOVLW     0xc8                                                                                            
002754   6f8b     MOVWF     0x8b,0x1                                                                                        
002756   0e36     MOVLW     0x36           						pwm09 = 54;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002758   6f8c     MOVWF     0x8c,0x1                                                                                        
00275a   d005     BRA       0x2766         					}else{                                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00275c   0101     MOVLB     0x1            						pwm08 = pwm09 = 127;                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00275e   0e7f     MOVLW     0x7f                                                                                            
002760   6f8c     MOVWF     0x8c,0x1                                                                                        
002762   c18c     MOVFF     0x18c,0x18b                                                                                     
002764   f18b                                                                                                               
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002766   d029     BRA       0x27ba         				}else if (mode == 2) {                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002768   0e02     MOVLW     0x2                                                                                             
00276a   5d12     SUBWF     0x12,0x0,0x1                                                                                    
00276c   e126     BNZ       0x27ba                                                                                          
00276e   c204     MOVFF     0x204,0xfe6    					printf("counter1 : %d\r\n", counter1);                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
002770   ffe6                                                                                                               
002772   c205     MOVFF     0x205,0xfe6                                                                                     
002774   ffe6                                                                                                               
002776   0e54     MOVLW     0x54                                                                                            
002778   6e00     MOVWF     0x0,0x0                                                                                         
00277a   0e4f     MOVLW     0x4f                                                                                            
00277c   6e01     MOVWF     0x1,0x0                                                                                         
00277e   6a02     CLRF      0x2,0x0                                                                                         
002780   c000     MOVFF     0x0,0xfe6                                                                                       
002782   ffe6                                                                                                               
002784   c001     MOVFF     0x1,0xfe6                                                                                       
002786   ffe6                                                                                                               
002788   c002     MOVFF     0x2,0xfe6                                                                                       
00278a   ffe6                                                                                                               
00278c   ece6     CALL      0x51cc,0x0                                                                                      
00278e   f028                                                                                                               
002790   6ef5     MOVWF     0xf5,0x0                                                                                        
002792   0e05     MOVLW     0x5                                                                                             
002794   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002796   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002798   0102     MOVLB     0x2            					if (counter1 < 176) {                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
00279a   0eb0     MOVLW     0xb0                                                                                            
00279c   5d04     SUBWF     0x4,0x0,0x1                                                                                     
00279e   0e00     MOVLW     0x0                                                                                             
0027a0   5905     SUBWFB    0x5,0x0,0x1                                                                                     
0027a2   e206     BC        0x27b0                                                                                          
0027a4   0101     MOVLB     0x1            						pwm08 = 163;                                                               C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027a6   0ea3     MOVLW     0xa3                                                                                            
0027a8   6f8b     MOVWF     0x8b,0x1                                                                                        
0027aa   0e5a     MOVLW     0x5a           						pwm09 = 90;                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ac   6f8c     MOVWF     0x8c,0x1                                                                                        
0027ae   d005     BRA       0x27ba         					}else{                                                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027b0   0101     MOVLB     0x1            						pwm08 = pwm09 = 127;                                                       C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027b2   0e7f     MOVLW     0x7f                                                                                            
0027b4   6f8c     MOVWF     0x8c,0x1                                                                                        
0027b6   c18c     MOVFF     0x18c,0x18b                                                                                     
0027b8   f18b                                                                                                               
                                           					}                                                                           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           				}                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           		//printf("<----<->--------<->-------<->---->\r\n");                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ba   ecad     CALL      0x415a,0x0     		if(Get_ADC_Result_Count()) {                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027bc   f020                                                                                                               
0027be   0900     IORLW     0x0                                                                                             
0027c0   e004     BZ        0x27ca                                                                                          
0027c2   ecb5     CALL      0x4b6a,0x0     			Process_Gyro_Data();                                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027c4   f025                                                                                                               
0027c6   ecbd     CALL      0x417a,0x0     			Reset_ADC_Result_Count();                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027c8   f020                                                                                                               
                                           		}	                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ca   0e80     MOVLW     0x80                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027cc   6ee6     MOVWF     0xe6,0x0                                                                                        
0027ce   0e01     MOVLW     0x1                                                                                             
0027d0   6ee6     MOVWF     0xe6,0x0                                                                                        
0027d2   ec20     CALL      0x2a40,0x0                                                                                      
0027d4   f015                                                                                                               
0027d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0027d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             }                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027dc   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             // new ADC data available?                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027de   ecad     CALL      0x415a,0x0       if(Get_ADC_Result_Count())                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027e0   f020                                                                                                               
0027e2   0900     IORLW     0x0                                                                                             
0027e4   e004     BZ        0x27ee                                                                                          
                                             {                                                                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027e6   ecb5     CALL      0x4b6a,0x0         Process_Gyro_Data();                                                         C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027e8   f025                                                                                                               
                                           	                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ea   ecbd     CALL      0x417a,0x0         Reset_ADC_Result_Count();                                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ec   f020                                                                                                               
                                             }	                                                                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027ee   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * FUNCTION NAME: Serial_Char_Callback                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * PURPOSE:       Interrupt handler for the TTL_PORT.                             C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * CALLED FROM:   user_SerialDrv.c                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * ARGUMENTS:                                                                     C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *     Argument             Type    IO   Description                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *     --------             ----    --   -----------                              C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *     data        unsigned char    I    Data received from the TTL_PORT          C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027f0   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Char_Callback(unsigned char data)                                    C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027f2   ffe6                                                                                                               
0027f4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0027f6   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                             /* Add code to handle incomming data (remember, interrupts are still active) */ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027f8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\user_routines_fast.c
0027fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0027fc   ffd9                                                                                                               
0027fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************/ C:\FRC\Fcode- 04-05-06\user_routines_fast.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	TITLE		adc.c                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\FRC\Fcode- 04-05-06\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\FRC\Fcode- 04-05-06\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\FRC\Fcode- 04-05-06\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\FRC\Fcode- 04-05-06\adc.c
                                           *	                  .tmpdata section.                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           #include "adc.h"                                                                 C:\FRC\Fcode- 04-05-06\adc.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\adc.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\FRC\Fcode- 04-05-06\adc.c
                                           unsigned char num_adc_channels;                                                  C:\FRC\Fcode- 04-05-06\adc.c
                                           unsigned char adc_result_divisor;                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\FRC\Fcode- 04-05-06\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\FRC\Fcode- 04-05-06\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\FRC\Fcode- 04-05-06\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\FRC\Fcode- 04-05-06\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\FRC\Fcode- 04-05-06\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\FRC\Fcode- 04-05-06\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
003f2a   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\FRC\Fcode- 04-05-06\adc.c
003f2c   ffe6                                                                                                               
003f2e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003f30   ffd9                                                                                                               
003f32   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned char i;                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\FRC\Fcode- 04-05-06\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\FRC\Fcode- 04-05-06\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\FRC\Fcode- 04-05-06\adc.c
                                           	// interface.                                                                   C:\FRC\Fcode- 04-05-06\adc.c
003f34   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\FRC\Fcode- 04-05-06\adc.c
003f36   0102     MOVLB     0x2                                                                                             
003f38   6f34     MOVWF     0x34,0x1                                                                                        
003f3a   6b35     CLRF      0x35,0x1                                                                                        
003f3c   0e02     MOVLW     0x2            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\FRC\Fcode- 04-05-06\adc.c
003f3e   6f38     MOVWF     0x38,0x1                                                                                        
003f40   0e01     MOVLW     0x1            	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\FRC\Fcode- 04-05-06\adc.c
003f42   6f39     MOVWF     0x39,0x1                                                                                        
003f44   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\FRC\Fcode- 04-05-06\adc.c
003f46   6f36     MOVWF     0x36,0x1                                                                                        
003f48   6b37     CLRF      0x37,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\FRC\Fcode- 04-05-06\adc.c
003f4a   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\FRC\Fcode- 04-05-06\adc.c
003f4c   5138     MOVF      0x38,0x0,0x1                                                                                    
003f4e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003f50   e210     BC        0x3f72                                                                                          
003f6e   2adf     INCF      0xdf,0x1,0x0                                                                                    
003f70   d7ed     BRA       0x3f4c                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
003f52   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\FRC\Fcode- 04-05-06\adc.c
003f54   0d04     MULLW     0x4                                                                                             
003f56   cff3     MOVFF     0xff3,0xfe9                                                                                     
003f58   ffe9                                                                                                               
003f5a   cff4     MOVFF     0xff4,0xfea                                                                                     
003f5c   ffea                                                                                                               
003f5e   0e3a     MOVLW     0x3a                                                                                            
003f60   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003f62   0e02     MOVLW     0x2                                                                                             
003f64   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003f66   6aee     CLRF      0xee,0x0                                                                                        
003f68   6aee     CLRF      0xee,0x0                                                                                        
003f6a   6aee     CLRF      0xee,0x0                                                                                        
003f6c   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// start a new sample set                                                       C:\FRC\Fcode- 04-05-06\adc.c
003f72   6b46     CLRF      0x46,0x1       	samples = 0;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
003f74   6b47     CLRF      0x47,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// start at ADC channel zero                                                    C:\FRC\Fcode- 04-05-06\adc.c
003f76   6b48     CLRF      0x48,0x1       	channel = 0;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\FRC\Fcode- 04-05-06\adc.c
003f78   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\FRC\Fcode- 04-05-06\adc.c
003f7a   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\FRC\Fcode- 04-05-06\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\FRC\Fcode- 04-05-06\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\FRC\Fcode- 04-05-06\adc.c
003f7c   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	#else                                                                           C:\FRC\Fcode- 04-05-06\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\FRC\Fcode- 04-05-06\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\FRC\Fcode- 04-05-06\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\FRC\Fcode- 04-05-06\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\FRC\Fcode- 04-05-06\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\FRC\Fcode- 04-05-06\adc.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                            	else                                                                           C:\FRC\Fcode- 04-05-06\adc.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\FRC\Fcode- 04-05-06\adc.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	#endif                                                                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// in the conversion result register                                            C:\FRC\Fcode- 04-05-06\adc.c
003f7e   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\FRC\Fcode- 04-05-06\adc.c
003f80   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// ADC interrupt is low priority                                                C:\FRC\Fcode- 04-05-06\adc.c
003f82   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\FRC\Fcode- 04-05-06\adc.c
003f84   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable the ADC interrupt                                                     C:\FRC\Fcode- 04-05-06\adc.c
003f86   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\FRC\Fcode- 04-05-06\adc.c
                                           	// analog to digital conversions                                                C:\FRC\Fcode- 04-05-06\adc.c
003f88   c234     MOVFF     0x234,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\FRC\Fcode- 04-05-06\adc.c
003f8a   ffe6                                                                                                               
003f8c   c235     MOVFF     0x235,0xfe6                                                                                     
003f8e   ffe6                                                                                                               
003f90   d814     RCALL     0x3fba                                                                                          
003f92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f96   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
003f98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f9a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003f9c   ffd9                                                                                                               
003f9e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
003fa0   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\FRC\Fcode- 04-05-06\adc.c
003fa2   ffe6                                                                                                               
003fa4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003fa6   ffd9                                                                                                               
003fa8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned char i;                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable timer 2                                                              C:\FRC\Fcode- 04-05-06\adc.c
003faa   d85f     RCALL     0x406a         	Disable_Timer_2();                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable the ADC interrupt                                                    C:\FRC\Fcode- 04-05-06\adc.c
003fac   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\FRC\Fcode- 04-05-06\adc.c
003fae   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\FRC\Fcode- 04-05-06\adc.c
003fb0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
003fb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fb4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003fb6   ffd9                                                                                                               
003fb8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\FRC\Fcode- 04-05-06\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\FRC\Fcode- 04-05-06\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
003fba   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\FRC\Fcode- 04-05-06\adc.c
003fbc   ffe6                                                                                                               
003fbe   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003fc0   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
003fc2   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\FRC\Fcode- 04-05-06\adc.c
003fc4   cfdb     MOVFF     0xfdb,0x35                                                                                      
003fc6   f035                                                                                                               
003fc8   0efe     MOVLW     0xfe                                                                                            
003fca   cfdb     MOVFF     0xfdb,0x36                                                                                      
003fcc   f036                                                                                                               
003fce   5035     MOVF      0x35,0x0,0x0                                                                                    
003fd0   e102     BNZ       0x3fd6                                                                                          
003fd2   0e19     MOVLW     0x19                                                                                            
003fd4   1836     XORWF     0x36,0x0,0x0                                                                                    
003fd6   e03b     BZ        0x404e                                                                                          
003fd8   0e80     MOVLW     0x80                                                                                            
003fda   1835     XORWF     0x35,0x0,0x0                                                                                    
003fdc   e102     BNZ       0x3fe2                                                                                          
003fde   0e0c     MOVLW     0xc                                                                                             
003fe0   1836     XORWF     0x36,0x0,0x0                                                                                    
003fe2   e030     BZ        0x4044                                                                                          
003fe4   0e40     MOVLW     0x40                                                                                            
003fe6   1835     XORWF     0x35,0x0,0x0                                                                                    
003fe8   e102     BNZ       0x3fee                                                                                          
003fea   0e06     MOVLW     0x6                                                                                             
003fec   1836     XORWF     0x36,0x0,0x0                                                                                    
003fee   e025     BZ        0x403a                                                                                          
003ff0   0e20     MOVLW     0x20                                                                                            
003ff2   1835     XORWF     0x35,0x0,0x0                                                                                    
003ff4   e102     BNZ       0x3ffa                                                                                          
003ff6   0e03     MOVLW     0x3                                                                                             
003ff8   1836     XORWF     0x36,0x0,0x0                                                                                    
003ffa   e01a     BZ        0x4030                                                                                          
003ffc   0e90     MOVLW     0x90                                                                                            
003ffe   1835     XORWF     0x35,0x0,0x0                                                                                    
004000   e102     BNZ       0x4006                                                                                          
004002   0e01     MOVLW     0x1                                                                                             
004004   1836     XORWF     0x36,0x0,0x0                                                                                    
004006   e00f     BZ        0x4026                                                                                          
004008   0ec8     MOVLW     0xc8                                                                                            
00400a   1835     XORWF     0x35,0x0,0x0                                                                                    
00400c   e101     BNZ       0x4010                                                                                          
00400e   5036     MOVF      0x36,0x0,0x0                                                                                    
004010   e005     BZ        0x401c                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 200:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\FRC\Fcode- 04-05-06\adc.c
00401c   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\FRC\Fcode- 04-05-06\adc.c
00401e   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\FRC\Fcode- 04-05-06\adc.c
004020   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
004022   6ecb     MOVWF     0xcb,0x0                                                                                        
004024   d019     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 400:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\FRC\Fcode- 04-05-06\adc.c
004026   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004028   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FRC\Fcode- 04-05-06\adc.c
00402a   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
00402c   6ecb     MOVWF     0xcb,0x0                                                                                        
00402e   d014     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 800:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\FRC\Fcode- 04-05-06\adc.c
004030   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004032   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\FRC\Fcode- 04-05-06\adc.c
004034   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\FRC\Fcode- 04-05-06\adc.c
004036   6ecb     MOVWF     0xcb,0x0                                                                                        
004038   d00f     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 1600:                                                                     C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\FRC\Fcode- 04-05-06\adc.c
00403a   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\FRC\Fcode- 04-05-06\adc.c
00403c   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FRC\Fcode- 04-05-06\adc.c
00403e   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
004040   6ecb     MOVWF     0xcb,0x0                                                                                        
004042   d00a     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 3200:                                                                     C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\FRC\Fcode- 04-05-06\adc.c
004044   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004046   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\FRC\Fcode- 04-05-06\adc.c
004048   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\FRC\Fcode- 04-05-06\adc.c
00404a   6ecb     MOVWF     0xcb,0x0                                                                                        
00404c   d005     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                           	                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           		case 6400:                                                                     C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\FRC\Fcode- 04-05-06\adc.c
00404e   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004050   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FRC\Fcode- 04-05-06\adc.c
004052   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
004054   6ecb     MOVWF     0xcb,0x0                                                                                        
004056   d000     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		default:                                                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           			// if a non-supported rate is specified,                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\FRC\Fcode- 04-05-06\adc.c
004012   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004014   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\FRC\Fcode- 04-05-06\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\FRC\Fcode- 04-05-06\adc.c
004016   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
004018   6ecb     MOVWF     0xcb,0x0                                                                                        
00401a   d01e     BRA       0x4058         			break;                                                                        C:\FRC\Fcode- 04-05-06\adc.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\FRC\Fcode- 04-05-06\adc.c
004058   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\FRC\Fcode- 04-05-06\adc.c
00405a   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\FRC\Fcode- 04-05-06\adc.c
00405c   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\FRC\Fcode- 04-05-06\adc.c
00405e   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable timer 2                                                               C:\FRC\Fcode- 04-05-06\adc.c
004060   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004062   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
004064   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004066   ffd9                                                                                                               
004068   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
                                           void Disable_Timer_2(void)                                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable the timer 2 interrupt                                                C:\FRC\Fcode- 04-05-06\adc.c
00406a   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable timer 2                                                              C:\FRC\Fcode- 04-05-06\adc.c
00406c   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\FRC\Fcode- 04-05-06\adc.c
00406e   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\FRC\Fcode- 04-05-06\adc.c
                                           *					expressed in "data number" units.                                          C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
004070   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\FRC\Fcode- 04-05-06\adc.c
004072   ffe6                                                                                                               
004074   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004076   ffd9                                                                                                               
004078   0e02     MOVLW     0x2                                                                                             
00407a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
00407c   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\FRC\Fcode- 04-05-06\adc.c
00407e   cfdb     MOVFF     0xfdb,0x0                                                                                       
004080   f000                                                                                                               
004082   0102     MOVLB     0x2                                                                                             
004084   5138     MOVF      0x38,0x0,0x1                                                                                    
004086   80d8     BSF       0xd8,0x0,0x0                                                                                    
004088   5400     SUBFWB    0x0,0x0,0x0                                                                                     
00408a   e312     BNC       0x40b0                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		// disable the ADC interrupt                                                   C:\FRC\Fcode- 04-05-06\adc.c
00408c   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\FRC\Fcode- 04-05-06\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\FRC\Fcode- 04-05-06\adc.c
00408e   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\FRC\Fcode- 04-05-06\adc.c
004090   04db     DECF      0xdb,0x0,0x0                                                                                    
004092   6ee9     MOVWF     0xe9,0x0                                                                                        
004094   6aea     CLRF      0xea,0x0                                                                                        
004096   90d8     BCF       0xd8,0x0,0x0                                                                                    
004098   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00409a   36ea     RLCF      0xea,0x1,0x0                                                                                    
00409c   0e42     MOVLW     0x42                                                                                            
00409e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0040a0   0e02     MOVLW     0x2                                                                                             
0040a2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0040a4   cfee     MOVFF     0xfee,0xfde                                                                                     
0040a6   ffde                                                                                                               
0040a8   cfed     MOVFF     0xfed,0xfdd                                                                                     
0040aa   ffdd                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		// enable the ADC interrupt                                                    C:\FRC\Fcode- 04-05-06\adc.c
0040ac   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\FRC\Fcode- 04-05-06\adc.c
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
0040ae   d002     BRA       0x40b4         	else                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		// bad channel number; return zero                                             C:\FRC\Fcode- 04-05-06\adc.c
0040b0   6ade     CLRF      0xde,0x0       		temp_adc_result = 0;                                                           C:\FRC\Fcode- 04-05-06\adc.c
0040b2   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
0040b4   cfde     MOVFF     0xfde,0x0      	return(temp_adc_result);                                                        C:\FRC\Fcode- 04-05-06\adc.c
0040b6   f000                                                                                                               
0040b8   cfdd     MOVFF     0xfdd,0x1                                                                                       
0040ba   f001                                                                                                               
0040bc   c000     MOVFF     0x0,0xff3                                                                                       
0040be   fff3                                                                                                               
0040c0   c001     MOVFF     0x1,0xff4                                                                                       
0040c2   fff4                                                                                                               
0040c4   d000     BRA       0x40c6                                                                                          
0040c6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
0040c8   ffe1                                                                                                               
0040ca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040cc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0040ce   ffd9                                                                                                               
0040d0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
0040d2   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\FRC\Fcode- 04-05-06\adc.c
0040d4   ffe6                                                                                                               
0040d6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0040d8   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
0040da   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\FRC\Fcode- 04-05-06\adc.c
0040dc   cfdb     MOVFF     0xfdb,0x0                                                                                       
0040de   f000                                                                                                               
0040e0   0efe     MOVLW     0xfe                                                                                            
0040e2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0040e4   f001                                                                                                               
0040e6   6a02     CLRF      0x2,0x0                                                                                         
0040e8   6a03     CLRF      0x3,0x0                                                                                         
0040ea   0e88     MOVLW     0x88                                                                                            
0040ec   6e38     MOVWF     0x38,0x0                                                                                        
0040ee   0e13     MOVLW     0x13                                                                                            
0040f0   6e39     MOVWF     0x39,0x0                                                                                        
0040f2   6a3a     CLRF      0x3a,0x0                                                                                        
0040f4   6a3b     CLRF      0x3b,0x0                                                                                        
0040f6   c000     MOVFF     0x0,0x33                                                                                        
0040f8   f033                                                                                                               
0040fa   c001     MOVFF     0x1,0x34                                                                                        
0040fc   f034                                                                                                               
0040fe   c002     MOVFF     0x2,0x35                                                                                        
004100   f035                                                                                                               
004102   c003     MOVFF     0x3,0x36                                                                                        
004104   f036                                                                                                               
004106   ec72     CALL      0x52e4,0x0                                                                                      
004108   f029                                                                                                               
00410a   c02f     MOVFF     0x2f,0x0                                                                                        
00410c   f000                                                                                                               
00410e   c030     MOVFF     0x30,0x1                                                                                        
004110   f001                                                                                                               
004112   c031     MOVFF     0x31,0x2                                                                                        
004114   f002                                                                                                               
004116   c032     MOVFF     0x32,0x3                                                                                        
004118   f003                                                                                                               
00411a   6a38     CLRF      0x38,0x0                                                                                        
00411c   0e08     MOVLW     0x8                                                                                             
00411e   6e39     MOVWF     0x39,0x0                                                                                        
004120   6a3a     CLRF      0x3a,0x0                                                                                        
004122   6a3b     CLRF      0x3b,0x0                                                                                        
004124   c000     MOVFF     0x0,0x33                                                                                        
004126   f033                                                                                                               
004128   c001     MOVFF     0x1,0x34                                                                                        
00412a   f034                                                                                                               
00412c   c002     MOVFF     0x2,0x35                                                                                        
00412e   f035                                                                                                               
004130   c003     MOVFF     0x3,0x36                                                                                        
004132   f036                                                                                                               
004134   ec55     CALL      0x38aa,0x0                                                                                      
004136   f01c                                                                                                               
004138   c033     MOVFF     0x33,0x0                                                                                        
00413a   f000                                                                                                               
00413c   c034     MOVFF     0x34,0x1                                                                                        
00413e   f001                                                                                                               
004140   c035     MOVFF     0x35,0x2                                                                                        
004142   f002                                                                                                               
004144   c036     MOVFF     0x36,0x3                                                                                        
004146   f003                                                                                                               
004148   c000     MOVFF     0x0,0xff3                                                                                       
00414a   fff3                                                                                                               
00414c   c001     MOVFF     0x1,0xff4                                                                                       
00414e   fff4                                                                                                               
004150   d000     BRA       0x4152                                                                                          
004152   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
004154   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004156   ffd9                                                                                                               
004158   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:                                                                       C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
00415a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\FRC\Fcode- 04-05-06\adc.c
00415c   ffe6                                                                                                               
00415e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004160   ffd9                                                                                                               
004162   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable the ADC interrupt                                                    C:\FRC\Fcode- 04-05-06\adc.c
004164   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
004166   c1ff     MOVFF     0x1ff,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\FRC\Fcode- 04-05-06\adc.c
004168   ffdf                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable the ADC interrupt                                                     C:\FRC\Fcode- 04-05-06\adc.c
00416a   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
00416c   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\FRC\Fcode- 04-05-06\adc.c
00416e   d000     BRA       0x4170                                                                                          
004170   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
004172   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004174   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004176   ffd9                                                                                                               
004178   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	// disable the ADC interrupt                                                    C:\FRC\Fcode- 04-05-06\adc.c
00417a   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
00417c   0101     MOVLB     0x1            	adc_update_count = 0;                                                           C:\FRC\Fcode- 04-05-06\adc.c
00417e   6bff     CLRF      0xff,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// enable the ADC interrupt                                                     C:\FRC\Fcode- 04-05-06\adc.c
004180   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FRC\Fcode- 04-05-06\adc.c
004182   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	// start a new analog to digital conversion                                     C:\FRC\Fcode- 04-05-06\adc.c
004184   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\FRC\Fcode- 04-05-06\adc.c
004186   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\adc.c
004188   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\FRC\Fcode- 04-05-06\adc.c
00418a   ffe6                                                                                                               
00418c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00418e   ffd9                                                                                                               
004190   0e05     MOVLW     0x5                                                                                             
004192   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned int adc;                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                           	int i;                                                                          C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// get conversion results                                                       C:\FRC\Fcode- 04-05-06\adc.c
004194   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\FRC\Fcode- 04-05-06\adc.c
004196   6ede     MOVWF     0xde,0x0                                                                                        
004198   6add     CLRF      0xdd,0x0                                                                                        
00419a   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\FRC\Fcode- 04-05-06\adc.c
00419c   ffe9                                                                                                               
00419e   cfda     MOVFF     0xfda,0xfea                                                                                     
0041a0   ffea                                                                                                               
0041a2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0041a4   6eed     MOVWF     0xed,0x0                                                                                        
0041a6   6aef     CLRF      0xef,0x0                                                                                        
0041a8   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\FRC\Fcode- 04-05-06\adc.c
0041aa   26de     ADDWF     0xde,0x1,0x0                                                                                    
0041ac   0e00     MOVLW     0x0                                                                                             
0041ae   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\FRC\Fcode- 04-05-06\adc.c
0041b0   cfde     MOVFF     0xfde,0x0      	accum[channel] += (long)adc;                                                    C:\FRC\Fcode- 04-05-06\adc.c
0041b2   f000                                                                                                               
0041b4   cfdd     MOVFF     0xfdd,0x1                                                                                       
0041b6   f001                                                                                                               
0041b8   6a02     CLRF      0x2,0x0                                                                                         
0041ba   6a03     CLRF      0x3,0x0                                                                                         
0041bc   0102     MOVLB     0x2                                                                                             
0041be   5148     MOVF      0x48,0x0,0x1                                                                                    
0041c0   0d04     MULLW     0x4                                                                                             
0041c2   cff3     MOVFF     0xff3,0xfe9                                                                                     
0041c4   ffe9                                                                                                               
0041c6   cff4     MOVFF     0xff4,0xfea                                                                                     
0041c8   ffea                                                                                                               
0041ca   0e3a     MOVLW     0x3a                                                                                            
0041cc   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0041ce   0e02     MOVLW     0x2                                                                                             
0041d0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0041d2   5000     MOVF      0x0,0x0,0x0                                                                                     
0041d4   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0041d6   5001     MOVF      0x1,0x0,0x0                                                                                     
0041d8   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
0041da   5002     MOVF      0x2,0x0,0x0                                                                                     
0041dc   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
0041de   5003     MOVF      0x3,0x0,0x0                                                                                     
0041e0   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\FRC\Fcode- 04-05-06\adc.c
                                           	// increment the ADC channel index                                              C:\FRC\Fcode- 04-05-06\adc.c
0041e2   2b48     INCF      0x48,0x1,0x1   	channel++;                                                                      C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// do we need to wrap around to zero?                                           C:\FRC\Fcode- 04-05-06\adc.c
0041e4   5138     MOVF      0x38,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\FRC\Fcode- 04-05-06\adc.c
0041e6   5d48     SUBWF     0x48,0x0,0x1                                                                                    
0041e8   e304     BNC       0x41f2                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
0041ea   6b48     CLRF      0x48,0x1       		channel = 0;                                                                   C:\FRC\Fcode- 04-05-06\adc.c
0041ec   2b46     INCF      0x46,0x1,0x1   		samples++;                                                                     C:\FRC\Fcode- 04-05-06\adc.c
0041ee   0e00     MOVLW     0x0                                                                                             
0041f0   2347     ADDWFC    0x47,0x1,0x1                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\FRC\Fcode- 04-05-06\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\FRC\Fcode- 04-05-06\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\FRC\Fcode- 04-05-06\adc.c
0041f2   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\FRC\Fcode- 04-05-06\adc.c
0041f4   c248     MOVFF     0x248,0xfdb                                                                                     
0041f6   ffdb                                                                                                               
0041f8   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\FRC\Fcode- 04-05-06\adc.c
0041fa   0d04     MULLW     0x4                                                                                             
0041fc   0e02     MOVLW     0x2                                                                                             
0041fe   cff3     MOVFF     0xff3,0xfdb                                                                                     
004200   ffdb                                                                                                               
004202   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\FRC\Fcode- 04-05-06\adc.c
004204   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\FRC\Fcode- 04-05-06\adc.c
004206   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           	// check to see if we've got a full sample set                                  C:\FRC\Fcode- 04-05-06\adc.c
004208   5136     MOVF      0x36,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\FRC\Fcode- 04-05-06\adc.c
00420a   5d46     SUBWF     0x46,0x0,0x1                                                                                    
00420c   5137     MOVF      0x37,0x0,0x1                                                                                    
00420e   5947     SUBWFB    0x47,0x0,0x1                                                                                    
004210   e201     BC        0x4214                                                                                          
004212   d083     BRA       0x431a                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\adc.c
                                           		// update the ADC result array                                                 C:\FRC\Fcode- 04-05-06\adc.c
004214   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\FRC\Fcode- 04-05-06\adc.c
004216   6adb     CLRF      0xdb,0x0                                                                                        
004218   0e04     MOVLW     0x4                                                                                             
00421a   6adb     CLRF      0xdb,0x0                                                                                        
00421c   0e03     MOVLW     0x3                                                                                             
00421e   cfdb     MOVFF     0xfdb,0x0                                                                                       
004220   f000                                                                                                               
004222   0e04     MOVLW     0x4                                                                                             
004224   cfdb     MOVFF     0xfdb,0x1                                                                                       
004226   f001                                                                                                               
004228   0102     MOVLB     0x2                                                                                             
00422a   5138     MOVF      0x38,0x0,0x1                                                                                    
00422c   0100     MOVLB     0x0                                                                                             
00422e   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004230   d002     BRA       0x4236                                                                                          
004232   90d8     BCF       0xd8,0x0,0x0                                                                                    
004234   d003     BRA       0x423c                                                                                          
004236   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004238   0e00     MOVLW     0x0                                                                                             
00423a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00423c   e23a     BC        0x42b2                                                                                          
0042a6   0e03     MOVLW     0x3                                                                                             
0042a8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0042aa   0e04     MOVLW     0x4                                                                                             
0042ac   e301     BNC       0x42b0                                                                                          
0042ae   2adb     INCF      0xdb,0x1,0x0                                                                                    
0042b0   d7b5     BRA       0x421c                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\adc.c
00423e   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\FRC\Fcode- 04-05-06\adc.c
004240   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004242   ffe9                                                                                                               
004244   0e04     MOVLW     0x4                                                                                             
004246   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004248   ffea                                                                                                               
00424a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00424c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00424e   36ea     RLCF      0xea,0x1,0x0                                                                                    
004250   90d8     BCF       0xd8,0x0,0x0                                                                                    
004252   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004254   36ea     RLCF      0xea,0x1,0x0                                                                                    
004256   0e3a     MOVLW     0x3a                                                                                            
004258   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00425a   0e02     MOVLW     0x2                                                                                             
00425c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00425e   0102     MOVLB     0x2                                                                                             
004260   5139     MOVF      0x39,0x0,0x1                                                                                    
004262   0b1f     ANDLW     0x1f                                                                                            
004264   cfee     MOVFF     0xfee,0x0                                                                                       
004266   f000                                                                                                               
004268   cfee     MOVFF     0xfee,0x1                                                                                       
00426a   f001                                                                                                               
00426c   cfee     MOVFF     0xfee,0x2                                                                                       
00426e   f002                                                                                                               
004270   cfee     MOVFF     0xfee,0x3                                                                                       
004272   f003                                                                                                               
004274   e007     BZ        0x4284                                                                                          
004276   90d8     BCF       0xd8,0x0,0x0                                                                                    
004278   3203     RRCF      0x3,0x1,0x0                                                                                     
00427a   3202     RRCF      0x2,0x1,0x0                                                                                     
00427c   3201     RRCF      0x1,0x1,0x0                                                                                     
00427e   3200     RRCF      0x0,0x1,0x0                                                                                     
004280   06e8     DECF      0xe8,0x1,0x0                                                                                    
004282   e1f9     BNZ       0x4276                                                                                          
004284   0e03     MOVLW     0x3                                                                                             
004286   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004288   ffe9                                                                                                               
00428a   0e04     MOVLW     0x4                                                                                             
00428c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00428e   ffea                                                                                                               
004290   90d8     BCF       0xd8,0x0,0x0                                                                                    
004292   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004294   36ea     RLCF      0xea,0x1,0x0                                                                                    
004296   0e42     MOVLW     0x42                                                                                            
004298   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00429a   0e02     MOVLW     0x2                                                                                             
00429c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00429e   c000     MOVFF     0x0,0xfee                                                                                       
0042a0   ffee                                                                                                               
0042a2   c001     MOVFF     0x1,0xfed                                                                                       
0042a4   ffed                                                                                                               
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\FRC\Fcode- 04-05-06\adc.c
0042b2   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\FRC\Fcode- 04-05-06\adc.c
0042b4   6adb     CLRF      0xdb,0x0                                                                                        
0042b6   0e04     MOVLW     0x4                                                                                             
0042b8   6adb     CLRF      0xdb,0x0                                                                                        
0042ba   0e03     MOVLW     0x3                                                                                             
0042bc   cfdb     MOVFF     0xfdb,0x0                                                                                       
0042be   f000                                                                                                               
0042c0   0e04     MOVLW     0x4                                                                                             
0042c2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0042c4   f001                                                                                                               
0042c6   0102     MOVLB     0x2                                                                                             
0042c8   5138     MOVF      0x38,0x0,0x1                                                                                    
0042ca   0100     MOVLB     0x0                                                                                             
0042cc   ae01     BTFSS     0x1,0x7,0x0                                                                                     
0042ce   d002     BRA       0x42d4                                                                                          
0042d0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042d2   d003     BRA       0x42da                                                                                          
0042d4   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0042d6   0e00     MOVLW     0x0                                                                                             
0042d8   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0042da   e21a     BC        0x4310                                                                                          
004304   0e03     MOVLW     0x3                                                                                             
004306   2adb     INCF      0xdb,0x1,0x0                                                                                    
004308   0e04     MOVLW     0x4                                                                                             
00430a   e301     BNC       0x430e                                                                                          
00430c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00430e   d7d5     BRA       0x42ba                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\adc.c
0042dc   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\FRC\Fcode- 04-05-06\adc.c
0042de   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0042e0   ffe9                                                                                                               
0042e2   0e04     MOVLW     0x4                                                                                             
0042e4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0042e6   ffea                                                                                                               
0042e8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042ea   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0042ec   36ea     RLCF      0xea,0x1,0x0                                                                                    
0042ee   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042f0   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0042f2   36ea     RLCF      0xea,0x1,0x0                                                                                    
0042f4   0e3a     MOVLW     0x3a                                                                                            
0042f6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0042f8   0e02     MOVLW     0x2                                                                                             
0042fa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0042fc   6aee     CLRF      0xee,0x0                                                                                        
0042fe   6aee     CLRF      0xee,0x0                                                                                        
004300   6aee     CLRF      0xee,0x0                                                                                        
004302   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\adc.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		// signal that a fresh sample set is available                                 C:\FRC\Fcode- 04-05-06\adc.c
004310   0101     MOVLB     0x1            		adc_update_count++;                                                            C:\FRC\Fcode- 04-05-06\adc.c
004312   2bff     INCF      0xff,0x1,0x1                                                                                    
                                                                                                                            C:\FRC\Fcode- 04-05-06\adc.c
                                           		// start a fresh sample set                                                    C:\FRC\Fcode- 04-05-06\adc.c
004314   0102     MOVLB     0x2            		samples = 0;                                                                   C:\FRC\Fcode- 04-05-06\adc.c
004316   6b46     CLRF      0x46,0x1                                                                                        
004318   6b47     CLRF      0x47,0x1                                                                                        
                                           	}	                                                                              C:\FRC\Fcode- 04-05-06\adc.c
00431a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\adc.c
00431c   ffe1                                                                                                               
00431e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004320   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004322   ffd9                                                                                                               
004324   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	TITLE		gyro.c                                                                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	DATE:		10-Jan-2006                                                             C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\FRC\Fcode- 04-05-06\gyro.c
                                           *				use. Please do not make copies of this source code, modified                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *				or un-modified, publicly available on the internet or                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *				elsewhere without permission. Thanks.                                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           ******************************************************************************** C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CHANGE LOG:                                                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	21-Nov-2004  0.1  RKW - Original code.                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	12-Jan-2005  0.2  RKW - Altered Get_Gyro_Rate() and Get_Gyro_Angle() to use    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  long integers for internal calculations, allowing larger     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  numerators and denominators in the GYRO_RATE_SCALE_FACTOR    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  and GYRO_ANGLE_SCALE_FACTOR #defines.                        C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	12-Jan-2005  0.2  RKW - GYRO_RATE_SCALE_FACTOR and GYRO_ANGLE_SCALE_FACTOR     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  #defines added for Analog Devices' ADXRS401, ADXRS150 and    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  ADXRS300 gyros.                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	16-Jan-2005  0.3  RKW - Using preprocessor directives, added the ability       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  to select the gyro type, angular units, sample rate and      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  number of averaged samples per update.                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	21-Jan-2005  0.3  RKW - Added scaling factors for the BEI GyroChip.            C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	30-Jan-2005  0.4  RKW - Revised the way bias calculations are done.            C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  Instead of using only one data set as a bias, multiple       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  sample sets can now be averaged over a much longer period    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  of time to derive the gyro bias. Updated documentation.      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	04-Sep-2005  0.5  RKW - Significant overhaul of gyro code to strip-out ADC-    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  specific code and use new adc.c/.h interface. Added          C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	                  deadband option.                                             C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	21-Nov-2005  0.5  RKW - Added support for Murata's ENV-05D gyro.               C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	10-Jan-2006  0.5  RKW - Verified code works on PIC18F8722.                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           #include "adc.h"                                                                 C:\FRC\Fcode- 04-05-06\gyro.c
                                           #include "gyro.h"                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           #include "ifi_aliases.h"                                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                           #include "ifi_default.h"                                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           int gyro_bias;                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           int gyro_rate;                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           long gyro_angle;                                                                 C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           unsigned long avg_accum;                                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                           unsigned int avg_samples;                                                        C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           unsigned char calc_gyro_bias;                                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Initialize_Gyro()                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Initializes the gyro code.                                           C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:		Place "#include "gyro.h" in the includes section                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					of user_routines.c then call Initialize_Gyro() in                          C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					user_routines.c/User_Initialization().                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					After calling Initialize_Gyro(), gyro rate and angle                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					data will be meaningless until a gyro bias calculation                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					has taken place by calling Start_Gyro_Bias_Calc() and                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					Stop_Gyro_Bias_Calc().                                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           void Initialize_Gyro(void)                                                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// reset the heading angle to zero                                              C:\FRC\Fcode- 04-05-06\gyro.c
004990   0102     MOVLB     0x2            	gyro_angle = 0;                                                                 C:\FRC\Fcode- 04-05-06\gyro.c
004992   6b4d     CLRF      0x4d,0x1                                                                                        
004994   6b4e     CLRF      0x4e,0x1                                                                                        
004996   6b4f     CLRF      0x4f,0x1                                                                                        
004998   6b50     CLRF      0x50,0x1                                                                                        
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// reset the bias calculation flag                                              C:\FRC\Fcode- 04-05-06\gyro.c
00499a   6b57     CLRF      0x57,0x1       	calc_gyro_bias = 0;                                                             C:\FRC\Fcode- 04-05-06\gyro.c
00499c   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Get_Gyro_Rate()                                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Returns the current heading angular rate of change.                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Signed integer with the current heading rate of change.              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           int Get_Gyro_Rate(void)                                                          C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// Return the calculated gyro rate to the caller.                               C:\FRC\Fcode- 04-05-06\gyro.c
00499e   c24b     MOVFF     0x24b,0x33     	return((int)((((long)gyro_rate * GYRO_SENSITIVITY * 5L) / ADC_RANGE)) * GYRO_CAL_FACTOR); C:\FRC\Fcode- 04-05-06\gyro.c
0049a0   f033                                                                                                               
0049a2   c24c     MOVFF     0x24c,0x34                                                                                      
0049a4   f034                                                                                                               
0049a6   6a35     CLRF      0x35,0x0                                                                                        
0049a8   6a36     CLRF      0x36,0x0                                                                                        
0049aa   ae34     BTFSS     0x34,0x7,0x0                                                                                    
0049ac   d002     BRA       0x49b2                                                                                          
0049ae   6835     SETF      0x35,0x0                                                                                        
0049b0   6836     SETF      0x36,0x0                                                                                        
0049b2   0e20     MOVLW     0x20                                                                                            
0049b4   6e38     MOVWF     0x38,0x0                                                                                        
0049b6   0e03     MOVLW     0x3                                                                                             
0049b8   6e39     MOVWF     0x39,0x0                                                                                        
0049ba   6a3a     CLRF      0x3a,0x0                                                                                        
0049bc   6a3b     CLRF      0x3b,0x0                                                                                        
0049be   ec72     CALL      0x52e4,0x0                                                                                      
0049c0   f029                                                                                                               
0049c2   c02f     MOVFF     0x2f,0x33                                                                                       
0049c4   f033                                                                                                               
0049c6   c030     MOVFF     0x30,0x34                                                                                       
0049c8   f034                                                                                                               
0049ca   c031     MOVFF     0x31,0x35                                                                                       
0049cc   f035                                                                                                               
0049ce   c032     MOVFF     0x32,0x36                                                                                       
0049d0   f036                                                                                                               
0049d2   0e05     MOVLW     0x5                                                                                             
0049d4   6e38     MOVWF     0x38,0x0                                                                                        
0049d6   6a39     CLRF      0x39,0x0                                                                                        
0049d8   6a3a     CLRF      0x3a,0x0                                                                                        
0049da   6a3b     CLRF      0x3b,0x0                                                                                        
0049dc   ec72     CALL      0x52e4,0x0                                                                                      
0049de   f029                                                                                                               
0049e0   c02f     MOVFF     0x2f,0x33                                                                                       
0049e2   f033                                                                                                               
0049e4   c030     MOVFF     0x30,0x34                                                                                       
0049e6   f034                                                                                                               
0049e8   c031     MOVFF     0x31,0x35                                                                                       
0049ea   f035                                                                                                               
0049ec   c032     MOVFF     0x32,0x36                                                                                       
0049ee   f036                                                                                                               
0049f0   6a38     CLRF      0x38,0x0                                                                                        
0049f2   0e08     MOVLW     0x8                                                                                             
0049f4   6e39     MOVWF     0x39,0x0                                                                                        
0049f6   6a3a     CLRF      0x3a,0x0                                                                                        
0049f8   6a3b     CLRF      0x3b,0x0                                                                                        
0049fa   ec55     CALL      0x38aa,0x0                                                                                      
0049fc   f01c                                                                                                               
0049fe   c033     MOVFF     0x33,0x0                                                                                        
004a00   f000                                                                                                               
004a02   c034     MOVFF     0x34,0x1                                                                                        
004a04   f001                                                                                                               
004a06   0ee8     MOVLW     0xe8                                                                                            
004a08   0201     MULWF     0x1,0x0                                                                                         
004a0a   cff3     MOVFF     0xff3,0x1                                                                                       
004a0c   f001                                                                                                               
004a0e   0e03     MOVLW     0x3                                                                                             
004a10   0200     MULWF     0x0,0x0                                                                                         
004a12   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004a14   2601     ADDWF     0x1,0x1,0x0                                                                                     
004a16   0ee8     MOVLW     0xe8                                                                                            
004a18   0200     MULWF     0x0,0x0                                                                                         
004a1a   cff3     MOVFF     0xff3,0x0                                                                                       
004a1c   f000                                                                                                               
004a1e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004a20   2601     ADDWF     0x1,0x1,0x0                                                                                     
004a22   0ee8     MOVLW     0xe8                                                                                            
004a24   6e3a     MOVWF     0x3a,0x0                                                                                        
004a26   0e03     MOVLW     0x3                                                                                             
004a28   6e3b     MOVWF     0x3b,0x0                                                                                        
004a2a   c000     MOVFF     0x0,0x35                                                                                        
004a2c   f035                                                                                                               
004a2e   c001     MOVFF     0x1,0x36                                                                                        
004a30   f036                                                                                                               
004a32   ec2f     CALL      0x385e,0x0                                                                                      
004a34   f01c                                                                                                               
004a36   c035     MOVFF     0x35,0x0                                                                                        
004a38   f000                                                                                                               
004a3a   c036     MOVFF     0x36,0x1                                                                                        
004a3c   f001                                                                                                               
004a3e   c000     MOVFF     0x0,0xff3                                                                                       
004a40   fff3                                                                                                               
004a42   c001     MOVFF     0x1,0xff4                                                                                       
004a44   fff4                                                                                                               
004a46   d000     BRA       0x4a48                                                                                          
004a48   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Get_Gyro_Angle()                                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Returns the current heading angle.                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Signed long with the current heading angle.                          C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           long Get_Gyro_Angle(void)                                                        C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// Return the calculated gyro angle to the caller.                              C:\FRC\Fcode- 04-05-06\gyro.c
004a4a   c24d     MOVFF     0x24d,0x33     	return(((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)) * GYRO_CAL_FACTOR); C:\FRC\Fcode- 04-05-06\gyro.c
004a4c   f033                                                                                                               
004a4e   c24e     MOVFF     0x24e,0x34                                                                                      
004a50   f034                                                                                                               
004a52   c24f     MOVFF     0x24f,0x35                                                                                      
004a54   f035                                                                                                               
004a56   c250     MOVFF     0x250,0x36                                                                                      
004a58   f036                                                                                                               
004a5a   0e20     MOVLW     0x20                                                                                            
004a5c   6e38     MOVWF     0x38,0x0                                                                                        
004a5e   0e03     MOVLW     0x3                                                                                             
004a60   6e39     MOVWF     0x39,0x0                                                                                        
004a62   6a3a     CLRF      0x3a,0x0                                                                                        
004a64   6a3b     CLRF      0x3b,0x0                                                                                        
004a66   ec72     CALL      0x52e4,0x0                                                                                      
004a68   f029                                                                                                               
004a6a   c02f     MOVFF     0x2f,0x33                                                                                       
004a6c   f033                                                                                                               
004a6e   c030     MOVFF     0x30,0x34                                                                                       
004a70   f034                                                                                                               
004a72   c031     MOVFF     0x31,0x35                                                                                       
004a74   f035                                                                                                               
004a76   c032     MOVFF     0x32,0x36                                                                                       
004a78   f036                                                                                                               
004a7a   0e05     MOVLW     0x5                                                                                             
004a7c   6e38     MOVWF     0x38,0x0                                                                                        
004a7e   6a39     CLRF      0x39,0x0                                                                                        
004a80   6a3a     CLRF      0x3a,0x0                                                                                        
004a82   6a3b     CLRF      0x3b,0x0                                                                                        
004a84   ec72     CALL      0x52e4,0x0                                                                                      
004a86   f029                                                                                                               
004a88   c02f     MOVFF     0x2f,0x33                                                                                       
004a8a   f033                                                                                                               
004a8c   c030     MOVFF     0x30,0x34                                                                                       
004a8e   f034                                                                                                               
004a90   c031     MOVFF     0x31,0x35                                                                                       
004a92   f035                                                                                                               
004a94   c032     MOVFF     0x32,0x36                                                                                       
004a96   f036                                                                                                               
004a98   6a38     CLRF      0x38,0x0                                                                                        
004a9a   0ec8     MOVLW     0xc8                                                                                            
004a9c   6e39     MOVWF     0x39,0x0                                                                                        
004a9e   6a3a     CLRF      0x3a,0x0                                                                                        
004aa0   6a3b     CLRF      0x3b,0x0                                                                                        
004aa2   ec55     CALL      0x38aa,0x0                                                                                      
004aa4   f01c                                                                                                               
004aa6   0ee8     MOVLW     0xe8                                                                                            
004aa8   6e38     MOVWF     0x38,0x0                                                                                        
004aaa   0e03     MOVLW     0x3                                                                                             
004aac   6e39     MOVWF     0x39,0x0                                                                                        
004aae   6a3a     CLRF      0x3a,0x0                                                                                        
004ab0   6a3b     CLRF      0x3b,0x0                                                                                        
004ab2   ec72     CALL      0x52e4,0x0                                                                                      
004ab4   f029                                                                                                               
004ab6   c02f     MOVFF     0x2f,0x33                                                                                       
004ab8   f033                                                                                                               
004aba   c030     MOVFF     0x30,0x34                                                                                       
004abc   f034                                                                                                               
004abe   c031     MOVFF     0x31,0x35                                                                                       
004ac0   f035                                                                                                               
004ac2   c032     MOVFF     0x32,0x36                                                                                       
004ac4   f036                                                                                                               
004ac6   0ee8     MOVLW     0xe8                                                                                            
004ac8   6e38     MOVWF     0x38,0x0                                                                                        
004aca   0e03     MOVLW     0x3                                                                                             
004acc   6e39     MOVWF     0x39,0x0                                                                                        
004ace   6a3a     CLRF      0x3a,0x0                                                                                        
004ad0   6a3b     CLRF      0x3b,0x0                                                                                        
004ad2   ec55     CALL      0x38aa,0x0                                                                                      
004ad4   f01c                                                                                                               
004ad6   d000     BRA       0x4ad8                                                                                          
004ad8   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Start_Gyro_Bias_Calc()                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Starts an ongoing gyro bias calculation.                             C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:		IMPORTANT NOTE: Only call this function when your                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					robot will be absolutely still and free of vibration                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					(e.g., the air compressor is off) until the call to                        C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					Stop_Gyro_Bias_Calc() is made.                                             C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           void Start_Gyro_Bias_Calc(void)                                                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004ada   0102     MOVLB     0x2            	if(calc_gyro_bias == 0)                                                         C:\FRC\Fcode- 04-05-06\gyro.c
004adc   5157     MOVF      0x57,0x0,0x1                                                                                    
004ade   e108     BNZ       0x4af0                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// reset the averaging accumulator                                             C:\FRC\Fcode- 04-05-06\gyro.c
004ae0   6b51     CLRF      0x51,0x1       		avg_accum = 0;                                                                 C:\FRC\Fcode- 04-05-06\gyro.c
004ae2   6b52     CLRF      0x52,0x1                                                                                        
004ae4   6b53     CLRF      0x53,0x1                                                                                        
004ae6   6b54     CLRF      0x54,0x1                                                                                        
                                           	                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// reset the number of number of average samples counters                      C:\FRC\Fcode- 04-05-06\gyro.c
004ae8   6b55     CLRF      0x55,0x1       		avg_samples = 0;                                                               C:\FRC\Fcode- 04-05-06\gyro.c
004aea   6b56     CLRF      0x56,0x1                                                                                        
                                           	                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// set flag informing the Process_Gyro_Data()                                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// function to start a gyro bias calculation                                   C:\FRC\Fcode- 04-05-06\gyro.c
004aec   0e01     MOVLW     0x1            		calc_gyro_bias = 1;                                                            C:\FRC\Fcode- 04-05-06\gyro.c
004aee   6f57     MOVWF     0x57,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
004af0   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Stop_Gyro_Bias_Calc()                                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Ends the current ongoing gyro bias calculation                       C:\FRC\Fcode- 04-05-06\gyro.c
                                           *					and updates the internal gyro_bias variable.                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           void Stop_Gyro_Bias_Calc(void)                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004af2   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\FRC\Fcode- 04-05-06\gyro.c
004af4   0557     DECF      0x57,0x0,0x1                                                                                    
004af6   e11e     BNZ       0x4b34                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// Update the gyro bias                                                        C:\FRC\Fcode- 04-05-06\gyro.c
004af8   c255     MOVFF     0x255,0x0      		gyro_bias = (int)(avg_accum / avg_samples);                                    C:\FRC\Fcode- 04-05-06\gyro.c
004afa   f000                                                                                                               
004afc   c256     MOVFF     0x256,0x1                                                                                       
004afe   f001                                                                                                               
004b00   6a02     CLRF      0x2,0x0                                                                                         
004b02   6a03     CLRF      0x3,0x0                                                                                         
004b04   c251     MOVFF     0x251,0x33                                                                                      
004b06   f033                                                                                                               
004b08   c252     MOVFF     0x252,0x34                                                                                      
004b0a   f034                                                                                                               
004b0c   c253     MOVFF     0x253,0x35                                                                                      
004b0e   f035                                                                                                               
004b10   c254     MOVFF     0x254,0x36                                                                                      
004b12   f036                                                                                                               
004b14   c000     MOVFF     0x0,0x38                                                                                        
004b16   f038                                                                                                               
004b18   c001     MOVFF     0x1,0x39                                                                                        
004b1a   f039                                                                                                               
004b1c   c002     MOVFF     0x2,0x3a                                                                                        
004b1e   f03a                                                                                                               
004b20   c003     MOVFF     0x3,0x3b                                                                                        
004b22   f03b                                                                                                               
004b24   ec43     CALL      0x5486,0x0                                                                                      
004b26   f02a                                                                                                               
004b28   c033     MOVFF     0x33,0x249                                                                                      
004b2a   f249                                                                                                               
004b2c   c034     MOVFF     0x34,0x24a                                                                                      
004b2e   f24a                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// inform Process_Gyro_Data() function that                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// the ongoing bias calculation needs to stop                                  C:\FRC\Fcode- 04-05-06\gyro.c
004b30   0102     MOVLB     0x2            		calc_gyro_bias = 0;                                                            C:\FRC\Fcode- 04-05-06\gyro.c
004b32   6b57     CLRF      0x57,0x1                                                                                        
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
004b34   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Get_Gyro_Bias()                                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Returns the current gyro bias.		                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Signed integer with the current gyro bias.                           C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           int Get_Gyro_Bias(void)                                                          C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// return the gyro bias to the caller                                           C:\FRC\Fcode- 04-05-06\gyro.c
004b36   c249     MOVFF     0x249,0xff3    	return(gyro_bias);                                                              C:\FRC\Fcode- 04-05-06\gyro.c
004b38   fff3                                                                                                               
004b3a   c24a     MOVFF     0x24a,0xff4                                                                                     
004b3c   fff4                                                                                                               
004b3e   d000     BRA       0x4b40                                                                                          
004b40   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Set_Gyro_Bias()                                                     C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Manually sets the gyro bias.                                         C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
004b42   cfd9     MOVFF     0xfd9,0xfe6    void Set_Gyro_Bias(int new_gyro_bias)                                            C:\FRC\Fcode- 04-05-06\gyro.c
004b44   ffe6                                                                                                               
004b46   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b48   ffd9                                                                                                               
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// update gyro_bias                                                             C:\FRC\Fcode- 04-05-06\gyro.c
004b4a   0efd     MOVLW     0xfd           	gyro_bias = new_gyro_bias;                                                      C:\FRC\Fcode- 04-05-06\gyro.c
004b4c   cfdb     MOVFF     0xfdb,0x249                                                                                     
004b4e   f249                                                                                                               
004b50   0efe     MOVLW     0xfe                                                                                            
004b52   cfdb     MOVFF     0xfdb,0x24a                                                                                     
004b54   f24a                                                                                                               
004b56   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004b58   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b5a   ffd9                                                                                                               
004b5c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Reset_Gyro_Angle()                                                  C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Resets the heading angle to zero.                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:                                                                   C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
                                           void Reset_Gyro_Angle(void)                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// zero out gyro_angle                                                          C:\FRC\Fcode- 04-05-06\gyro.c
004b5e   0102     MOVLB     0x2            	gyro_angle = 0L;                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004b60   6b4d     CLRF      0x4d,0x1                                                                                        
004b62   6b4e     CLRF      0x4e,0x1                                                                                        
004b64   6b4f     CLRF      0x4f,0x1                                                                                        
004b66   6b50     CLRF      0x50,0x1                                                                                        
004b68   0012     RETURN    0x0            }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           /******************************************************************************* C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	FUNCTION:		Process_Gyro_Data()                                                 C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *	COMMENTS:                                                                      C:\FRC\Fcode- 04-05-06\gyro.c
                                           *                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           *******************************************************************************/ C:\FRC\Fcode- 04-05-06\gyro.c
004b6a   cfd9     MOVFF     0xfd9,0xfe6    void Process_Gyro_Data(void)                                                     C:\FRC\Fcode- 04-05-06\gyro.c
004b6c   ffe6                                                                                                               
004b6e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b70   ffd9                                                                                                               
004b72   0e02     MOVLW     0x2                                                                                             
004b74   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
                                           	int temp_gyro_rate;                                                             C:\FRC\Fcode- 04-05-06\gyro.c
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           	// should the completed sample set be used to calculate the gyro bias?          C:\FRC\Fcode- 04-05-06\gyro.c
004b76   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\FRC\Fcode- 04-05-06\gyro.c
004b78   0557     DECF      0x57,0x0,0x1                                                                                    
004b7a   e117     BNZ       0x4baa                                                                                          
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// convert the accumulator to an integer and update gyro_bias                  C:\FRC\Fcode- 04-05-06\gyro.c
004b7c   0e01     MOVLW     0x1            		avg_accum += Get_ADC_Result(GYRO_CHANNEL);                                     C:\FRC\Fcode- 04-05-06\gyro.c
004b7e   6ee6     MOVWF     0xe6,0x0                                                                                        
004b80   ec38     CALL      0x4070,0x0                                                                                      
004b82   f020                                                                                                               
004b84   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004b86   cff3     MOVFF     0xff3,0x0                                                                                       
004b88   f000                                                                                                               
004b8a   cff4     MOVFF     0xff4,0x1                                                                                       
004b8c   f001                                                                                                               
004b8e   0100     MOVLB     0x0                                                                                             
004b90   5000     MOVF      0x0,0x0,0x0                                                                                     
004b92   0102     MOVLB     0x2                                                                                             
004b94   2751     ADDWF     0x51,0x1,0x1                                                                                    
004b96   0100     MOVLB     0x0                                                                                             
004b98   5001     MOVF      0x1,0x0,0x0                                                                                     
004b9a   0102     MOVLB     0x2                                                                                             
004b9c   2352     ADDWFC    0x52,0x1,0x1                                                                                    
004b9e   0e00     MOVLW     0x0                                                                                             
004ba0   2353     ADDWFC    0x53,0x1,0x1                                                                                    
004ba2   2354     ADDWFC    0x54,0x1,0x1                                                                                    
004ba4   2b55     INCF      0x55,0x1,0x1   		avg_samples++;                                                                 C:\FRC\Fcode- 04-05-06\gyro.c
004ba6   2356     ADDWFC    0x56,0x1,0x1                                                                                    
                                           	}                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
004ba8   d040     BRA       0x4c2a         	else                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           	{                                                                               C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// get the latest measured gyro rate                                           C:\FRC\Fcode- 04-05-06\gyro.c
004baa   0e01     MOVLW     0x1            		temp_gyro_rate = (int)Get_ADC_Result(GYRO_CHANNEL) - gyro_bias;                C:\FRC\Fcode- 04-05-06\gyro.c
004bac   6ee6     MOVWF     0xe6,0x0                                                                                        
004bae   ec38     CALL      0x4070,0x0                                                                                      
004bb0   f020                                                                                                               
004bb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004bb4   0102     MOVLB     0x2                                                                                             
004bb6   5149     MOVF      0x49,0x0,0x1                                                                                    
004bb8   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
004bba   6e00     MOVWF     0x0,0x0                                                                                         
004bbc   514a     MOVF      0x4a,0x0,0x1                                                                                    
004bbe   58f4     SUBWFB    0xf4,0x0,0x0                                                                                    
004bc0   6e01     MOVWF     0x1,0x0                                                                                         
004bc2   c000     MOVFF     0x0,0xfde                                                                                       
004bc4   ffde                                                                                                               
004bc6   c001     MOVFF     0x1,0xfdd                                                                                       
004bc8   ffdd                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// update reported gyro rate and angle only if                                 C:\FRC\Fcode- 04-05-06\gyro.c
                                           		// measured gyro rate lies outside the deadband                                C:\FRC\Fcode- 04-05-06\gyro.c
004bca   cfde     MOVFF     0xfde,0x0      		if(temp_gyro_rate < -GYRO_DEADBAND || temp_gyro_rate > GYRO_DEADBAND)          C:\FRC\Fcode- 04-05-06\gyro.c
004bcc   f000                                                                                                               
004bce   cfdd     MOVFF     0xfdd,0x1                                                                                       
004bd0   f001                                                                                                               
004bd2   80d8     BSF       0xd8,0x0,0x0                                                                                    
004bd4   5001     MOVF      0x1,0x0,0x0                                                                                     
004bd6   e704     BNN       0x4be0                                                                                          
004bd8   0ef0     MOVLW     0xf0                                                                                            
004bda   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004bdc   0eff     MOVLW     0xff                                                                                            
004bde   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004be0   e30b     BNC       0x4bf8                                                                                          
004be2   cfde     MOVFF     0xfde,0x2                                                                                       
004be4   f002                                                                                                               
004be6   cfdd     MOVFF     0xfdd,0x3                                                                                       
004be8   f003                                                                                                               
004bea   3403     RLCF      0x3,0x0,0x0                                                                                     
004bec   e204     BC        0x4bf6                                                                                          
004bee   5002     MOVF      0x2,0x0,0x0                                                                                     
004bf0   0810     SUBLW     0x10                                                                                            
004bf2   0e00     MOVLW     0x0                                                                                             
004bf4   5403     SUBFWB    0x3,0x0,0x0                                                                                     
004bf6   e217     BC        0x4c26                                                                                          
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           			// update the gyro rate                                                       C:\FRC\Fcode- 04-05-06\gyro.c
004bf8   cfde     MOVFF     0xfde,0x24b    			gyro_rate = temp_gyro_rate;                                                   C:\FRC\Fcode- 04-05-06\gyro.c
004bfa   f24b                                                                                                               
004bfc   cfdd     MOVFF     0xfdd,0x24c                                                                                     
004bfe   f24c                                                                                                               
                                                                                                                            C:\FRC\Fcode- 04-05-06\gyro.c
                                           			// integrate the gyro rate to derive the heading                              C:\FRC\Fcode- 04-05-06\gyro.c
004c00   cfde     MOVFF     0xfde,0x0      			gyro_angle += (long)temp_gyro_rate;                                           C:\FRC\Fcode- 04-05-06\gyro.c
004c02   f000                                                                                                               
004c04   cfdd     MOVFF     0xfdd,0x1                                                                                       
004c06   f001                                                                                                               
004c08   6a02     CLRF      0x2,0x0                                                                                         
004c0a   6a03     CLRF      0x3,0x0                                                                                         
004c0c   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004c0e   d002     BRA       0x4c14                                                                                          
004c10   6802     SETF      0x2,0x0                                                                                         
004c12   6803     SETF      0x3,0x0                                                                                         
004c14   5000     MOVF      0x0,0x0,0x0                                                                                     
004c16   274d     ADDWF     0x4d,0x1,0x1                                                                                    
004c18   5001     MOVF      0x1,0x0,0x0                                                                                     
004c1a   234e     ADDWFC    0x4e,0x1,0x1                                                                                    
004c1c   5002     MOVF      0x2,0x0,0x0                                                                                     
004c1e   234f     ADDWFC    0x4f,0x1,0x1                                                                                    
004c20   5003     MOVF      0x3,0x0,0x0                                                                                     
004c22   2350     ADDWFC    0x50,0x1,0x1                                                                                    
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\gyro.c
004c24   d002     BRA       0x4c2a         		else                                                                           C:\FRC\Fcode- 04-05-06\gyro.c
                                           		{                                                                              C:\FRC\Fcode- 04-05-06\gyro.c
004c26   6b4b     CLRF      0x4b,0x1       			gyro_rate = 0;                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004c28   6b4c     CLRF      0x4c,0x1                                                                                        
                                           		}                                                                              C:\FRC\Fcode- 04-05-06\gyro.c
                                           	}	                                                                              C:\FRC\Fcode- 04-05-06\gyro.c
004c2a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FRC\Fcode- 04-05-06\gyro.c
004c2c   ffe1                                                                                                               
004c2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004c32   ffd9                                                                                                               
004c34   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                   LIST                                                                     C:\mcc18\mpasm\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\mcc18\mpasm\p18cxxx.inc
                                                   LIST                                                                     C:\mcc18\mpasm\P18F8722.INC
                                                                                                                            C:\mcc18\mpasm\P18F8722.INC
                                           ;==========================================================================      C:\mcc18\mpasm\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\mcc18\mpasm\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\mcc18\mpasm\P18F8722.INC
                                           ;                                                                                C:\mcc18\mpasm\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\mcc18\mpasm\P18F8722.INC
                                           ;==========================================================================      C:\mcc18\mpasm\P18F8722.INC
                                                                                                                            C:\mcc18\mpasm\P18F8722.INC
                                                   LIST                                                                     C:\mcc18\mpasm\P18F8722.INC
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005624   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005626   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005628   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
00562a   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
00562c   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0055fc   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0055fe   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005600   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005602   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005604   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005606   d000     BRA       0x5608             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005608   d000     BRA       0x560a             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00560a   d000     BRA       0x560c             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00560c   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00560e   d7fa     BRA       0x5604             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005610   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055a4   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055a6   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055a8   6e43     MOVWF     0x43,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055aa   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055ac   d001     BRA       0x55b0             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055ae   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055b0   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055b2   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055b4   d7fe     BRA       0x55b2             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055b6   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055b8   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055ba   d7fe     BRA       0x55b8             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055bc   2e43     DECFSZ    0x43,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055be   d7f7     BRA       0x55ae             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055c0   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0055c2   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00355e   ae36     BTFSS     0x36,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003560   d002     BRA       0x3566                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         One byte integer to Float conversion                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832U: One byte unsigned integer in iA0                             C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832S: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003558   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
00355a   d005     BRA       0x3566                   bra       jI2F08Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
00355c   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     braClr    iA0,7,jI2F08Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003562   6c36     NEGF      0x36,0x0                 negf      iA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003564   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           jI2F08Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003566   c036     MOVFF     0x36,0x30                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003568   f030                                                                                                               
00356a   6a2f     CLRF      0x2f,0x0                 clrf      fW1                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
00356c   6a42     CLRF      0x42,0x0                 clrf      fW2                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
00356e   6a41     CLRF      0x41,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003570   0e86     MOVLW     0x86                     movlw     0x86                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003572   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003574   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003576   ef28     GOTO      0x3a50                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003578   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003584   6c33     NEGF      0x33,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003586   1e34     COMF      0x34,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003588   1e35     COMF      0x35,0x1,0x0           comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00358a   1e36     COMF      0x36,0x1,0x0           comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00358c   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00358e   2234     ADDWFC    0x34,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003590   2235     ADDWFC    0x35,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003592   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003580   ae36     BTFSS     0x36,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003582   d009     BRA       0x3596                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ; FLO3232U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ; FLO3232S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;         Four byte integer to Float conversion                                  C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;         FLO3232U: Four byte unsigned integer in iA0,iA1,iA2,iA3                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;         FLO3232S: Four byte signed integer in iA0,iA1,iA2,iA3                  C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     GLOBAL FLO3232U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     GLOBAL FLO3232S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           FLO3232U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
00357a   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
00357c   d00c     BRA       0x3596                   bra       jI2F32Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           FLO3232S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
00357e   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     braClr    iA0,7,jI2F32Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     Neg4      iA3,iA2,iA1,iA0                                              C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
003594   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           jI2F32Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
003596   c036     MOVFF     0x36,0x30                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
003598   f030                                                                                                               
00359a   c035     MOVFF     0x35,0x2f                movff     iA1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
00359c   f02f                                                                                                               
00359e   c034     MOVFF     0x34,0x42                movff     iA2,fW2                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035a0   f042                                                                                                               
0035a2   c033     MOVFF     0x33,0x41                movff     iA3,fW3                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035a4   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035a6   0e9e     MOVLW     0x9e                     movlw     0x9E                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035a8   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035aa   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035ac   ef28     GOTO      0x3a50                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
0035ae   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast32FP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00368a   3236     RRCF      0x36,0x1,0x0           rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036cc   3230     RRCF      0x30,0x1,0x0                                                                                    
00368c   3235     RRCF      0x35,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036ce   322f     RRCF      0x2f,0x1,0x0                                                                                    
00368e   3234     RRCF      0x34,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036d0   3242     RRCF      0x42,0x1,0x0                                                                                    
003690   3233     RRCF      0x33,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036d2   3241     RRCF      0x41,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00365e   6c34     NEGF      0x34,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003672   6c42     NEGF      0x42,0x0                                                                                        
003660   1e35     COMF      0x35,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003674   1e2f     COMF      0x2f,0x1,0x0                                                                                    
003662   1e36     COMF      0x36,0x1,0x0           comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003676   1e30     COMF      0x30,0x1,0x0                                                                                    
003664   1e37     COMF      0x37,0x1,0x0           comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003678   1e31     COMF      0x31,0x1,0x0                                                                                    
003666   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00367a   6ae8     CLRF      0xe8,0x0                                                                                        
003668   2235     ADDWFC    0x35,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00367c   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
00366a   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00367e   2230     ADDWFC    0x30,0x1,0x0                                                                                    
00366c   2237     ADDWFC    0x37,0x1,0x0           addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003680   2231     ADDWFC    0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036b0   6c41     NEGF      0x41,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036b2   1e42     COMF      0x42,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036b4   1e2f     COMF      0x2f,0x1,0x0           comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036b6   1e30     COMF      0x30,0x1,0x0           comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036b8   1e31     COMF      0x31,0x1,0x0           comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036ba   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036bc   2242     ADDWFC    0x42,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036be   222f     ADDWFC    0x2f,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036c0   2230     ADDWFC    0x30,0x1,0x0           addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036c2   2231     ADDWFC    0x31,0x1,0x0           addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003696   5034     MOVF      0x34,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003698   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00369a   5035     MOVF      0x35,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00369c   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00369e   5036     MOVF      0x36,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036a0   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036a2   5037     MOVF      0x37,0x0,0x0           movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036a4   2231     ADDWFC    0x31,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035f0   be3e     BTFSC     0x3e,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035f2   d004     BRA       0x35fc                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035c2   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035c6   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
0035da   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
0035e8   a03e     BTFSS     0x3e,0x0,0x0                                                                                    
0035ec   a83e     BTFSS     0x3e,0x4,0x0                                                                                    
0035f4   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
00365a   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
00366e   ac3e     BTFSS     0x3e,0x6,0x0                                                                                    
0036ac   ae31     BTFSS     0x31,0x7,0x0                                                                                    
0036c6   a031     BTFSS     0x31,0x0,0x0                                                                                    
0035c4   d00a     BRA       0x35da                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035c8   d003     BRA       0x35d0                                                                                          
0035dc   d005     BRA       0x35e8                                                                                          
0035ea   d00a     BRA       0x3600                                                                                          
0035ee   d008     BRA       0x3600                                                                                          
0035f6   d002     BRA       0x35fc                                                                                          
00365c   d008     BRA       0x366e                                                                                          
003670   d008     BRA       0x3682                                                                                          
0036ae   d00b     BRA       0x36c6                                                                                          
0036c8   d006     BRA       0x36d6                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003684   5240     MOVF      0x40,0x1,0x0           movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003686   e007     BZ        0x3696                 bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035bc   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035ca   be3e     BTFSC     0x3e,0x7,0x0                                                                                    
003648   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
0035be   ef0c     GOTO      0x3a18                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035c0   f01d                                                                                                               
0035cc   ef0c     GOTO      0x3a18                                                                                          
0035ce   f01d                                                                                                               
00364a   ef54     GOTO      0x3aa8                                                                                          
00364c   f01d                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035d0   a43e     BTFSS     0x3e,0x2,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035de   ac3e     BTFSS     0x3e,0x6,0x0                                                                                    
0035d2   ef18     GOTO      0x3a30                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0035d4   f01d                                                                                                               
0035e0   ef18     GOTO      0x3a30                                                                                          
0035e2   f01d                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00364e   0e1a     MOVLW     0x1a                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003650   6040     CPFSLT    0x40,0x0                 cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003652   ef54     GOTO      0x3aa8                   goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003654   f01d                                                                                                               
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; FPS32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; FPA32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         Addition     fA+fB for floats fA and fB                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         Subtraction  fA-fB for floats fA and fB                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         IEEE 754 format float fA = fA+fB or fA = fA-fB                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     GLOBAL FPS32, FPA32                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnNaN, __FpReturnPosZero, __FpReturnNegZero             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           FPS32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035b0   7e3c     BTG       0x3c,0x7,0x0             btg       fBexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           FPA32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035b2   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035b4   ec64     CALL      0x3ac8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035b6   f01d                                                                                                               
0035b8   ec7c     CALL      0x3af8,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035ba   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A is Infinite                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBANotInf                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A and B Infinite                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_SIGN_ABW,__FpReturnNaN ; Inf - Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jBANotInf:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A infinite and B not infinite or both infinite with same sign            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoClr   fFlg,FLG_SIGN_A,__FpReturnPosInf                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035d6   ef15     GOTO      0x3a2a                   goto      __FpReturnNegInf                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035d8   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBNotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; A finite, B infinite => return signed infinite                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoClr   fFlg,FLG_SIGN_B,__FpReturnPosInf                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035e4   ef15     GOTO      0x3a2a                   goto      __FpReturnNegInf                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035e6   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jBNotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;       Both operands are finite                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jNotBothZero                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jNotBothZero                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; The cases of (+/-0)+(+/-0) must be trapped since IEEE requires:     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        (+0)+(+0), (+0)+(-0) and (-0)+(+0) to = (+0)                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        (-0)+(-0) = (-0)                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braSet    fFlg,FLG_SIGN_ABW,jDifOrPosSign                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_A,jDifOrPosSign                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035f8   ef21     GOTO      0x3a42                   goto      __FpReturnNegZero   ;; Return (-0)                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035fa   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jDifOrPosSign:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035fc   ef25     GOTO      0x3a4a                   goto      __FpReturnPosZero   ;; Return (+0)                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0035fe   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jNotBothZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003600   6a41     CLRF      0x41,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003602   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fT0 = fAexp - fBexp                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003604   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003606   5c37     SUBWF     0x37,0x0,0x0             subwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003608   6e40     MOVWF     0x40,0x0                 movwf     fT0                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00360a   e310     BNC       0x362c                   bnc       jAltBexp                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fAexp >= fBexp   => copy fA -> fW and fB -> fA                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00360c   c034     MOVFF     0x34,0x42                movff     fA2,fW2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00360e   f042                                                                                                               
003610   c035     MOVFF     0x35,0x2f                movff     fA1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003612   f02f                                                                                                               
003614   c036     MOVFF     0x36,0x30                movff     fA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003616   f030                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; save largest exponent                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003618   c037     MOVFF     0x37,0x3f                movff     fAexp,fT1                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00361a   f03f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00361c   c039     MOVFF     0x39,0x34                movff     fB2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00361e   f034                                                                                                               
003620   c03a     MOVFF     0x3a,0x35                movff     fB1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003622   f035                                                                                                               
003624   c03b     MOVFF     0x3b,0x36                movff     fB0,fA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003626   f036                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Exchange A & B flags.                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Note: meaning of FLG_NaN_AorB and FLG_SIGN_ABW swapped!             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003628   3a3e     SWAPF     0x3e,0x1,0x0             swapf     fFlg,F                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00362a   d009     BRA       0x363e                   bra       jAandWsetup                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jAltBexp:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fAexp < fBexp copy fB -> fW                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00362c   c039     MOVFF     0x39,0x42                movff     fB2,fW2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00362e   f042                                                                                                               
003630   c03a     MOVFF     0x3a,0x2f                movff     fB1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003632   f02f                                                                                                               
003634   c03b     MOVFF     0x3b,0x30                movff     fB0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003636   f030                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; save largest exponent                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003638   c03c     MOVFF     0x3c,0x3f                movff     fBexp,fT1                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00363a   f03f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; make fT0 absolute value                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00363c   6c40     NEGF      0x40,0x0                 negf      fT0                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jAandWsetup:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; At this point Flg's for A refer to fA and Flg's for B refer to fW.  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Since flag nibbles may have been swapped FLG_NaN_AorB and           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        FLG_SIGN_ABW may be incorrect.                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Must set FLG_SIGN_ABW and fWexp in case ReturnW is used.            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Flg.FLG_SIGN_ABW = Flg.FLG_SIGN_B                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00363e   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003640   bc3e     BTFSC     0x3e,0x6,0x0             btfsc     fFlg,FLG_SIGN_B                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003642   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003644   c03f     MOVFF     0x3f,0x31                movff     fT1,fWexp           ;; largest exponent                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003646   f031                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; if fA contains zero => return fW                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnW                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fW contains the value with the larger exponent                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fT0 contains the absolute difference between the exponents          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoFgeL  fT0,26,__FpReturnW  ;; fA too small to contribute            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Past here fAexp and fWexp are used as the upper byte of Significants. C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; The upper byte is required both for negation and because the        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; results can exceed fA0 or fW0, i.e. 0.1xx + 0.1xx => 1.xxx          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003656   6a31     CLRF      0x31,0x0                 clrf      fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003658   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Switch from sign and absolute value representation to               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; signed representation                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_A,jANotNeg                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Negate fA                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg4      fA2,fA1,fA0,fAexp                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jANotNeg:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_B,jWNotNeg                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Negate fW                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg4      fW2,fW1,fW0,fWexp                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jWNotNeg:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Have to add additional lower byte, fA3, to capture                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; roundoff & sticky bits                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003682   6a33     CLRF      0x33,0x0                 clrf      fA3                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braFeqZ   fT0,jShiftDone   ;; exponents already equal                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Shift fA right with sign extension until exponents equal            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jShiftLoop:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003688   3437     RLCF      0x37,0x0,0x0             rlcf      fAexp,W             ;; Set C for sign extension              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ShiftR4C  fA3,fA2,fA1,fA0                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003692   2e40     DECFSZ    0x40,0x1,0x0             decfsz    fT0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003694   d7f9     BRA       0x3688                   bra       jShiftLoop                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jShiftDone:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Finally we can add.                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Note that fA3 will not be changed by Add                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Add4      fW2,fW1,fW0,fWexp, fA2,fA1,fA0,fAexp                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036a6   c033     MOVFF     0x33,0x41                movff     fA3,fW3                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036a8   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Switch back to Sign,absolute value representation                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036aa   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fWexp,7,jSignDone                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Result is negative.  Negate and record sign                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg5      fW3,fW2,fW1,fW0,fWexp                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036c4   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jSignDone:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; If results has form 1.xxx must shift to right before going          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; to FpPack                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fWexp,0,jFinalSign                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036ca   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ShiftR4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036d4   2a3f     INCF      0x3f,0x1,0x0             incf      fT1,F                         ;; Note: this can't exceed 255 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jFinalSign:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; load exponent for pack                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036d6   c03f     MOVFF     0x3f,0x31                movff     fT1,fWexp                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036d8   f031                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Sign is FLG_SIGN_ABW                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036da   ef28     GOTO      0x3a50                   goto __FpPack                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0036dc   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003730   6a41     CLRF      0x41,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003732   6a42     CLRF      0x42,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003734   6a2f     CLRF      0x2f,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003736   6a30     CLRF      0x30,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00375e   90d8     BCF       0xd8,0x0,0x0           bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003768   90d8     BCF       0xd8,0x0,0x0                                                                                    
003760   3634     RLCF      0x34,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00376a   3641     RLCF      0x41,0x1,0x0                                                                                    
003762   3635     RLCF      0x35,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00376c   3642     RLCF      0x42,0x1,0x0                                                                                    
003764   3636     RLCF      0x36,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00376e   362f     RLCF      0x2f,0x1,0x0                                                                                    
003766   3637     RLCF      0x37,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003770   3630     RLCF      0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00374a   5039     MOVF      0x39,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00374c   2634     ADDWF     0x34,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00374e   503a     MOVF      0x3a,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003750   2235     ADDWFC    0x35,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003752   503b     MOVF      0x3b,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003754   2236     ADDWFC    0x36,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003756   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003758   2237     ADDWFC    0x37,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003738   5039     MOVF      0x39,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00373a   5e34     SUBWF     0x34,0x1,0x0           subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00373c   503a     MOVF      0x3a,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00373e   5a35     SUBWFB    0x35,0x1,0x0           subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003740   503b     MOVF      0x3b,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003742   5a36     SUBWFB    0x36,0x1,0x0           subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003744   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003746   5a37     SUBWFB    0x37,0x1,0x0           subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036ee   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003702   a03e     BTFSS     0x3e,0x0,0x0                                                                                    
0036f0   d005     BRA       0x36fc                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003704   d005     BRA       0x3710                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036e8   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036f2   ba3e     BTFSC     0x3e,0x5,0x0                                                                                    
0036fc   ba3e     BTFSC     0x3e,0x5,0x0                                                                                    
003706   b83e     BTFSC     0x3e,0x4,0x0                                                                                    
003710   b83e     BTFSC     0x3e,0x4,0x0                                                                                    
0036ea   ef0c     GOTO      0x3a18                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0036ec   f01d                                                                                                               
0036f4   ef0c     GOTO      0x3a18                                                                                          
0036f6   f01d                                                                                                               
0036fe   ef1f     GOTO      0x3a3e                                                                                          
003700   f01d                                                                                                               
003708   ef0c     GOTO      0x3a18                                                                                          
00370a   f01d                                                                                                               
003712   ef13     GOTO      0x3a26                                                                                          
003714   f01d                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; FPD32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         Division  fA/fB for floats fA and fB                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format float fA = fA/fB                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     GLOBAL FPD32                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           FPD32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036de   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036e0   ec64     CALL      0x3ac8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036e2   f01d                                                                                                               
0036e4   ec7c     CALL      0x3af8,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036e6   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Is b also infinite?                                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnNaN                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036f8   ef13     GOTO      0x3a26                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
0036fa   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotInf                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B infinite, A finite => return Zero                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnSignZero                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jANotZero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jSignedZero:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; A == 0                                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN     ; B == 0 => 0/0            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00370c   ef1f     GOTO      0x3a3e                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00370e   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotZero                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnSignInf ; B == 0 => Finite/0       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; ExpW = (ExpA+127) - (ExpB+127) + 127                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003716   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003718   0e7f     MOVLW     0x7f                     movlw     FLT_BIAS                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00371a   2437     ADDWF     0x37,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00371c   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00371e   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003720   2232     ADDWFC    0x32,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003722   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003724   5e31     SUBWF     0x31,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003726   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003728   5a32     SUBWFB    0x32,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Form the quotient and remainder                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00372a   0e1a     MOVLW     0x1a                     movlw     26                  ; quotient width                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00372c   6e3f     MOVWF     0x3f,0x0                 movwf     fT1                 ; loop counter                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00372e   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Init quotient                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig -= fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Sub43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003748   e709     BNN       0x375c                   bnn       jNoAdjust           ; fAsig >= 0                             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig += fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Add43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00375a   d001     BRA       0x375e                   bra       jNext            ; Next quotient bit is zero ...             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNoAdjust:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Insert quotient bit. Location picked so quotient will be            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; left-justified in fW0                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00375c   8a41     BSF       0x41,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNext:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fA2,fA1,fA0,fAexp                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003772   2e3f     DECFSZ    0x3f,0x1,0x0             decfsz    fT1,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003774   d7e1     BRA       0x3738                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;------- Sticky bits                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Quotient consists of 26 bits left-justified in fW0->fW3                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Add sticky bit in position bit 5 of fW3 which is just to right of the         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Round bit.                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003776   5036     MOVF      0x36,0x0,0x0             movf      fA0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003778   1035     IORWF     0x35,0x0,0x0             iorwf     fA1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00377a   1034     IORWF     0x34,0x0,0x0             iorwf     fA2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00377c   a4d8     BTFSS     0xd8,0x2,0x0             btfss     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
00377e   8a41     BSF       0x41,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003780   ef28     GOTO      0x3a50                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003782   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037d0   6a41     CLRF      0x41,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037d2   6a42     CLRF      0x42,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037d4   6a2f     CLRF      0x2f,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037d6   6a30     CLRF      0x30,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037e8   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037f8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0037ea   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037fa   2642     ADDWF     0x42,0x1,0x0                                                                                    
0037ec   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037fc   50f4     MOVF      0xf4,0x0,0x0                                                                                    
0037ee   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037fe   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
0037f0   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003800   0e00     MOVLW     0x0                                                                                             
0037f2   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003802   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00383e   50f4     MOVF      0xf4,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00384e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003840   2641     ADDWF     0x41,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003850   2641     ADDWF     0x41,0x1,0x0                                                                                    
003842   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003852   0e00     MOVLW     0x0                                                                                             
003844   2242     ADDWFC    0x42,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003854   2242     ADDWFC    0x42,0x1,0x0                                                                                    
003846   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003856   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003848   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003858   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003808   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00381a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00382c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00380a   2641     ADDWF     0x41,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00381c   2641     ADDWF     0x41,0x1,0x0                                                                                    
00382e   2641     ADDWF     0x41,0x1,0x0                                                                                    
00380c   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00381e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003830   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00380e   2242     ADDWFC    0x42,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003820   2242     ADDWFC    0x42,0x1,0x0                                                                                    
003832   2242     ADDWFC    0x42,0x1,0x0                                                                                    
003810   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003822   0e00     MOVLW     0x0                                                                                             
003834   0e00     MOVLW     0x0                                                                                             
003812   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003824   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003836   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003814   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003826   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003838   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037d8   503b     MOVF      0x3b,0x0,0x0           movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037e4   503a     MOVF      0x3a,0x0,0x0                                                                                    
0037f4   503b     MOVF      0x3b,0x0,0x0                                                                                    
003804   5039     MOVF      0x39,0x0,0x0                                                                                    
003816   503a     MOVF      0x3a,0x0,0x0                                                                                    
003828   503b     MOVF      0x3b,0x0,0x0                                                                                    
00383a   5039     MOVF      0x39,0x0,0x0                                                                                    
00384a   503a     MOVF      0x3a,0x0,0x0                                                                                    
0037da   0236     MULWF     0x36,0x0               mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037e6   0236     MULWF     0x36,0x0                                                                                        
0037f6   0235     MULWF     0x35,0x0                                                                                        
003806   0236     MULWF     0x36,0x0                                                                                        
003818   0235     MULWF     0x35,0x0                                                                                        
00382a   0234     MULWF     0x34,0x0                                                                                        
00383c   0235     MULWF     0x35,0x0                                                                                        
00384c   0234     MULWF     0x34,0x0                                                                                        
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037b0   b03e     BTFSC     0x3e,0x0,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037b2   d002     BRA       0x37b8                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003794   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037a2   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
0037b4   a83e     BTFSS     0x3e,0x4,0x0                                                                                    
003796   d005     BRA       0x37a2                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0037a4   d005     BRA       0x37b0                                                                                          
0037b6   d002     BRA       0x37bc                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00378e   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003798   b83e     BTFSC     0x3e,0x4,0x0                                                                                    
0037a6   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
003790   ef0c     GOTO      0x3a18                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003792   f01d                                                                                                               
00379a   ef0c     GOTO      0x3a18                                                                                          
00379c   f01d                                                                                                               
0037a8   ef0c     GOTO      0x3a18                                                                                          
0037aa   f01d                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; FPM32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         Mutiplication  fA*fB for floats fA and fB                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format float fA = fA*fB                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------------------------------------------------------------------------------  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     GLOBAL FPM32                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           FPM32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003784   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003786   ec64     CALL      0x3ac8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003788   f01d                                                                                                               
00378a   ec7c     CALL      0x3af8,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
00378c   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Is b zero                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN  ; Inf * Zero => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
00379e   ef13     GOTO      0x3a26                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037a0   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A not infinite                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBothFinite                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A finite, B infinite                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnNaN  ; Zero * Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037ac   ef13     GOTO      0x3a26                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037ae   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothFinite:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braSet    fFlg,FLG_ZERO_A,jHaveZero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jHaveZero:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A or B is zero                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Return zero with sign of product                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037b8   ef1f     GOTO      0x3a3e                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037ba   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothNotZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; ExpW = (ExpA+127) + (ExpB+127) - 127 + 1                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037bc   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037be   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037c0   2437     ADDWF     0x37,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037c2   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037c4   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037c6   2232     ADDWFC    0x32,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037c8   0e7e     MOVLW     0x7e                     movlw     FLT_BIAS-1                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037ca   5e31     SUBWF     0x31,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037cc   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037ce   5a32     SUBWFB    0x32,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Not all products are calculated and not all products are included             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; This will have a slight effect on the rounding and could cause                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a round toward zero when a round up is required by IEEE754                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round to nearest mode.  Effectively the round up threshold is changed         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; from 0.5 to about 0.5001                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a0b0    a0b0                    not     not                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a1b0    a1b0            added   added                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a0b1    a0b1             |       |                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a2b0    a2b0     V       V                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a1b1    a1b1                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a0b2    a0b2                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a1b2    a1b2                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a2b1    a2b1                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                 a2b2    a2b2                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; added to get                                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW0      fW1     fW2     fW3    NA      NA                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; If msb of fW0   is 0 then the results will have to be left shifted            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; which will move the msb of fA3 into fA2. After this is done then              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; the msb of fW3 becomes the Round bit and the rest of the less significant     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; bits combine to form the Sticky bit.  Since the full product is not           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; calculated fW3 could be a maximum of 2 too small. Since bits 0 -> 6 of        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW3 are used only for rounding the effect is a very small failure to          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round up.                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037dc   cff4     MOVFF     0xff4,0x30               movff     PRODH,fW0                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037de   f030                                                                                                               
0037e0   cff3     MOVFF     0xff3,0x2f               movff     PRODL,fW1                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0037e2   f02f                                                                                                               
                                                     Mul2      fA0,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Start with form 0.f * 0.f                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Results can be fW0 = 11xxxxxx -> 01xxxxxx                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Round and partial Sticky bits in fW3.                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; One bit of signficant in fW3 in the 01xxxxxx case                             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
00385a   ef28     GOTO      0x3a50                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
00385c   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           /*** Unsigned Integer Division: 8-bit by 8-bit                                   C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            ***       for: Saved (for the worst case) at least 4*8 = 32 instruction cycles  C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           void FXD0808U (/*unsigned char arg0, unsigned char arg1*/)                       C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055e0   6a32     CLRF      0x32,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               // INDF1 = 8                                                                 C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055e2   0e08     MOVLW     0x8                movlw 8                                                                      C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055e4   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               // clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055e6   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           	//AARGB0 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055e8   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               //PROD = (PROD << 1) | (ARGB0 >> 16);                                        C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055ea   3632     RLCF      0x32,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           	//if (REMB0 >= BARGB0)                                                          C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055ec   503b     MOVF      0x3b,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055ee   5c32     SUBWF     0x32,0x0,0x0   	subwf REMB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055f0   e302     BNC       0x55f6         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           	    //REMB0 -= BARGB0;                                                          C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055f2   6e32     MOVWF     0x32,0x0       	    movwf REMB0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           	    //++AARGB0;                                                                 C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055f4   2a36     INCF      0x36,0x1,0x0   	    incf AARGB0, 1, 0   // Carry is cleared by incf since overflow not possible C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055f6   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect carry                               C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055f8   d7f7     BRA       0x55e8             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                 _endasm                                                                    C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
0055fa   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd0808u.c
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00385e   6a3d     CLRF      0x3d,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003860   ae3b     BTFSS     0x3b,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003862   ef38     GOTO      0x3870                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003864   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003866   6c3a     NEGF      0x3a,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003868   1e3b     COMF      0x3b,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00386a   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00386c   223b     ADDWFC    0x3b,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00386e   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003870   ae36     BTFSS     0x36,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003872   ef40     GOTO      0x3880                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003874   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003876   6c35     NEGF      0x35,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003878   1e36     COMF      0x36,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00387a   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00387c   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00387e   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003880   ec86     CALL      0x550c,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003882   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003884   be36     BTFSC     0x36,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003886   ef50     GOTO      0x38a0         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003888   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00388a   ae3d     BTFSS     0x3d,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00388c   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00388e   6c35     NEGF      0x35,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003890   1e36     COMF      0x36,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003892   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003894   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003896   6c31     NEGF      0x31,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003898   1e32     COMF      0x32,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00389a   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00389c   2232     ADDWFC    0x32,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00389e   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0038a0   be3d     BTFSC     0x3d,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0038a2   ef47     GOTO      0x388e         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0038a4   f01c                                                                                                               
0038a6   883e     BSF       0x3e,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0038a8   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00550c   6a32     CLRF      0x32,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00550e   6a31     CLRF      0x31,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005510   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005512   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005514   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005516   3635     RLCF      0x35,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005518   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00551a   3631     RLCF      0x31,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00551c   3632     RLCF      0x32,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00551e   503a     MOVF      0x3a,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005520   5c31     SUBWF     0x31,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005522   503b     MOVF      0x3b,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005524   5832     SUBWFB    0x32,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005526   e305     BNC       0x5532         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005528   503a     MOVF      0x3a,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00552a   5e31     SUBWF     0x31,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00552c   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
00552e   5a32     SUBWFB    0x32,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005530   2a35     INCF      0x35,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005532   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005534   d7f0     BRA       0x5516             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005536   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038aa   6a3d     CLRF      0x3d,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ac   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ae   ae3b     BTFSS     0x3b,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038b0   ef62     GOTO      0x38c4         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038b2   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038b4   6c38     NEGF      0x38,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038b6   1e39     COMF      0x39,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038b8   1e3a     COMF      0x3a,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ba   1e3b     COMF      0x3b,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038bc   2239     ADDWFC    0x39,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038be   223a     ADDWFC    0x3a,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038c0   223b     ADDWFC    0x3b,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038c2   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038c4   ae36     BTFSS     0x36,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038c6   ef6d     GOTO      0x38da         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038c8   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ca   6c33     NEGF      0x33,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038cc   1e34     COMF      0x34,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ce   1e35     COMF      0x35,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038d0   1e36     COMF      0x36,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038d2   2234     ADDWFC    0x34,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038d4   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038d6   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038d8   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038da   ec43     CALL      0x5486,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038dc   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038de   be36     BTFSC     0x36,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038e0   ef84     GOTO      0x3908         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038e2   f01c                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038e4   ae3d     BTFSS     0x3d,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038e6   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038e8   6c33     NEGF      0x33,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ea   1e34     COMF      0x34,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ec   1e35     COMF      0x35,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038ee   1e36     COMF      0x36,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038f0   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038f2   2234     ADDWFC    0x34,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038f4   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038f6   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038f8   6c2f     NEGF      0x2f,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038fa   1e30     COMF      0x30,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038fc   1e31     COMF      0x31,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0038fe   1e32     COMF      0x32,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003900   2230     ADDWFC    0x30,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003902   2231     ADDWFC    0x31,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003904   2232     ADDWFC    0x32,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003906   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003908   be3d     BTFSC     0x3d,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00390a   ef74     GOTO      0x38e8         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00390c   f01c                                                                                                               
00390e   883e     BSF       0x3e,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003910   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005486   6a32     CLRF      0x32,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005488   6a31     CLRF      0x31,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00548a   6a30     CLRF      0x30,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00548c   6a2f     CLRF      0x2f,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00548e   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005490   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005492   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005494   3633     RLCF      0x33,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005496   3634     RLCF      0x34,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005498   3635     RLCF      0x35,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00549a   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00549c   362f     RLCF      0x2f,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00549e   3630     RLCF      0x30,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054a0   3631     RLCF      0x31,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054a2   3632     RLCF      0x32,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054a4   5038     MOVF      0x38,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054a6   5c2f     SUBWF     0x2f,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054a8   5039     MOVF      0x39,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054aa   5830     SUBWFB    0x30,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054ac   503a     MOVF      0x3a,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054ae   5831     SUBWFB    0x31,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054b0   503b     MOVF      0x3b,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054b2   5832     SUBWFB    0x32,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054b4   e309     BNC       0x54c8         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054b6   5038     MOVF      0x38,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054b8   5e2f     SUBWF     0x2f,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054ba   5039     MOVF      0x39,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054bc   5a30     SUBWFB    0x30,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054be   503a     MOVF      0x3a,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054c0   5a31     SUBWFB    0x31,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054c2   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054c4   5a32     SUBWFB    0x32,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054c6   2a33     INCF      0x33,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054c8   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054ca   d7e4     BRA       0x5494             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0054cc   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003912   c036     MOVFF     0x36,0x42      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003914   f042                                                                                                               
003916   c035     MOVFF     0x35,0x41      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003918   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00391a   5035     MOVF      0x35,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00391c   023a     MULWF     0x3a,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00391e   cff4     MOVFF     0xff4,0x34     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003920   f034                                                                                                               
003922   cff3     MOVFF     0xff3,0x33     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003924   f033                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003926   5036     MOVF      0x36,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003928   023b     MULWF     0x3b,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00392a   cff4     MOVFF     0xff4,0x36     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00392c   f036                                                                                                               
00392e   cff3     MOVFF     0xff3,0x35     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003930   f035                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003932   023a     MULWF     0x3a,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003934   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003936   2634     ADDWF     0x34,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003938   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00393a   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00393c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00393e   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003940   5041     MOVF      0x41,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003942   023b     MULWF     0x3b,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003944   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003946   2634     ADDWF     0x34,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003948   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00394a   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00394c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00394e   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003950   ae3b     BTFSS     0x3b,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003952   efaf     GOTO      0x395e         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003954   f01c                                                                                                               
003956   5041     MOVF      0x41,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003958   5e35     SUBWF     0x35,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00395a   5042     MOVF      0x42,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00395c   5a36     SUBWFB    0x36,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00395e   ae42     BTFSS     0x42,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003960   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003962   503a     MOVF      0x3a,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003964   5e35     SUBWF     0x35,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003966   503b     MOVF      0x3b,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003968   5a36     SUBWFB    0x36,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00396a   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052e4   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052e6   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052e8   cff3     MOVFF     0xff3,0x2f         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052ea   f02f                                                                                                               
0052ec   cff4     MOVFF     0xff4,0x30         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052ee   f030                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052f0   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052f2   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052f4   2630     ADDWF     0x30,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052f6   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052f8   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052fa   6e31     MOVWF     0x31,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052fc   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0052fe   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005300   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005302   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005304   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005306   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005308   6e32     MOVWF     0x32,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
00530a   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
00530c   023b     MULWF     0x3b,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00530e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005310   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005312   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005314   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005316   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005318   2630     ADDWF     0x30,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00531a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00531c   2231     ADDWFC    0x31,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00531e   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005320   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005322   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005324   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005326   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005328   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00532a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00532c   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
00532e   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005330   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005332   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005334   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005336   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005338   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
00533a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00533c   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00533e   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005340   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005342   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005344   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005346   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005348   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534a   5036     MOVF      0x36,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534c   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005350   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
005352   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00397c   b43e     BTFSC     0x3e,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003990   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
00397e   d003     BRA       0x3986                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003992   d7fc     BRA       0x398c                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003978   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039ae   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
0039b4   ae36     BTFSS     0x36,0x7,0x0                                                                                    
00397a   d00a     BRA       0x3990                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039b0   d003     BRA       0x39b8                                                                                          
0039b6   d7ea     BRA       0x398c                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039a0   0e86     MOVLW     0x86                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039a2   5c37     SUBWF     0x37,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039a4   e004     BZ        0x39ae                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00399a   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00399c   6437     CPFSGT    0x37,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00399e   d7f6     BRA       0x398c                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003994   0e87     MOVLW     0x87                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003996   6037     CPFSLT    0x37,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003998   d7f1     BRA       0x397c                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003972   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003974   efc0     GOTO      0x3980                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003976   f01c                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; INT3208:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Float to one byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         NaN                 0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         +Infinity           0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         -Infinity           0x80                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         255->128            0xFF=>0x80                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         <-128               0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         INT3208U: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     GLOBAL INT3208                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           INT3208:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
00396c   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
00396e   ec64     CALL      0x3ac8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003970   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003980   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003982   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003984   d019     BRA       0x39b8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003986   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003988   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
00398a   d016     BRA       0x39b8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
00398c   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
00398e   d014     BRA       0x39b8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFgeL   fAexp,0x87,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFeqL   fAexp,0x86,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039a6   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039a8   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039aa   2a37     INCF      0x37,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039ac   d7f9     BRA       0x39a0                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039b2   6c36     NEGF      0x36,0x0                 negf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fA0,7,jZero             ;; too large                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
0039b8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039fe   3236     RRCF      0x36,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a00   3235     RRCF      0x35,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a0a   6c35     NEGF      0x35,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a0c   1e36     COMF      0x36,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a0e   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a10   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039ca   b43e     BTFSC     0x3e,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039e6   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
0039cc   d005     BRA       0x39d8                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039e8   d7fb     BRA       0x39e0                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039c6   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a06   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
003a12   ae36     BTFSS     0x36,0x7,0x0                                                                                    
0039c8   d00e     BRA       0x39e6                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a08   d006     BRA       0x3a16                                                                                          
003a14   d7e5     BRA       0x39e0                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039f6   0e8e     MOVLW     0x8e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039f8   5c37     SUBWF     0x37,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039fa   e005     BZ        0x3a06                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039f0   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039f2   6437     CPFSGT    0x37,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039f4   d7f5     BRA       0x39e0                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039ea   0e8f     MOVLW     0x8f                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039ec   6037     CPFSLT    0x37,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039ee   d7ed     BRA       0x39ca                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039c0   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039c2   efe7     GOTO      0x39ce                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0039c4   f01c                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; INT3216:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         Float to two byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         NaN                 0x7FFF                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         +Infinity           0x7FFF                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         -Infinity           0x8000                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         65535->32768        0xFFFF=>0x8000                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         <-32768             0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         INT3216U: Two byte signed integer in iA0,iA1                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     GLOBAL INT3216                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           INT3216:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039ba   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039bc   ec64     CALL      0x3ac8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039be   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039ce   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039d0   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039d2   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039d4   6e35     MOVWF     0x35,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039d6   d01f     BRA       0x3a16                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039d8   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039da   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039dc   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039de   d01b     BRA       0x3a16                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039e0   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039e2   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039e4   d018     BRA       0x3a16                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFgeL   fAexp,0x8F,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFeqL   fAexp,0x8E,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     ;;braFeqL   fAexp,0x8F,jLoopExit    ;; shift complete                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0039fc   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     ShiftR2C  fA1, fA0                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003a02   2a37     INCF      0x37,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003a04   d7f8     BRA       0x39f6                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     Neg2      fA1,fA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fA0,7,jZero    ;; too negative for signed & unsigned illegal C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003a16   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005422   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005424   ffe6                                                                                                               
005426   cfda     MOVFF     0xfda,0xfe6                                                                                     
005428   ffe6                                                                                                               
00542a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00542c   ffd9                                                                                                               
00542e   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005430   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005432   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005434   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005436   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005438   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
00543a   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00543c   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00543e   d002     BRA       0x5444                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005440   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005442   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005444   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005446   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005448   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00544a   d002     BRA       0x5450                                                                                          
00544c   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00544e   d001     BRA       0x5452           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005450   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005452   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005454   d002     BRA       0x545a                                                                                          
005456   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005458   d001     BRA       0x545c           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00545a   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00545c   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00545e   d002     BRA       0x5464                                                                                          
005460   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005462   d001     BRA       0x5466           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005464   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005466   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005468   d002     BRA       0x546e                                                                                          
00546a   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00546c   d001     BRA       0x5470           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00546e   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005470   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005472   50db     MOVF      0xdb,0x0,0x0                                                                                    
005474   6eaf     MOVWF     0xaf,0x0                                                                                        
005476   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005478   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00547a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00547c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00547e   ffda                                                                                                               
005480   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005482   ffd9                                                                                                               
005484   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005354   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005356   ffe6                                                                                                               
005358   cfda     MOVFF     0xfda,0xfe6                                                                                     
00535a   ffe6                                                                                                               
00535c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00535e   ffd9                                                                                                               
005360   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005362   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005364   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005366   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005368   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00536a   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00536c   40db     RRNCF     0xdb,0x0,0x0                                                                                    
00536e   0b7f     ANDLW     0x7f                                                                                            
005370   0b3c     ANDLW     0x3c                                                                                            
005372   6ec2     MOVWF     0xc2,0x0                                                                                        
005374   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005376   50db     MOVF      0xdb,0x0,0x0                                                                                    
005378   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00537a   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00537c   38db     SWAPF     0xdb,0x0,0x0                                                                                    
00537e   0bf0     ANDLW     0xf0                                                                                            
005380   0b30     ANDLW     0x30                                                                                            
005382   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005384   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005386   50db     MOVF      0xdb,0x0,0x0                                                                                    
005388   0b80     ANDLW     0x80                                                                                            
00538a   6ec0     MOVWF     0xc0,0x0                                                                                        
00538c   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00538e   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005390   0b0f     ANDLW     0xf                                                                                             
005392   0b07     ANDLW     0x7                                                                                             
005394   12c0     IORWF     0xc0,0x1,0x0                                                                                    
005396   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005398   50db     MOVF      0xdb,0x0,0x0                                                                                    
00539a   0d04     MULLW     0x4                                                                                             
00539c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00539e   0b38     ANDLW     0x38                                                                                            
0053a0   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053a2   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053a4   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
0053a6   d003     BRA       0x53ae                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053a8   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053aa   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053ac   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053ae   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053b0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053b2   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0053b4   ffda                                                                                                               
0053b6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0053b8   ffd9                                                                                                               
0053ba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053bc   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053be   ffe6                                                                                                               
0053c0   cfda     MOVFF     0xfda,0xfe6                                                                                     
0053c2   ffe6                                                                                                               
0053c4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0053c6   ffd9                                                                                                               
0053c8   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0053ca   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053cc   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053ce   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
0053d0   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053d2   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053d4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053d6   12c6     IORWF     0xc6,0x1,0x0                                                                                    
0053d8   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053dc   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053de   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053e0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053e2   0a03     XORLW     0x3                                                                                             
0053e4   e009     BZ        0x53f8                                                                                          
0053e6   0a01     XORLW     0x1                                                                                             
0053e8   e004     BZ        0x53f2                                                                                          
0053ea   0a02     XORLW     0x2                                                                                             
0053ec   e106     BNZ       0x53fa                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053ee   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053f0   d004     BRA       0x53fa               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053f2   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053f4   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053f6   d001     BRA       0x53fa               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053f8   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053fa   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0053fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053fe   0a05     XORLW     0x5                                                                                             
005400   e003     BZ        0x5408                                                                                          
005402   0a01     XORLW     0x1                                                                                             
005404   e104     BNZ       0x540e                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005406   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005408   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
00540a   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
00540c   d001     BRA       0x5410               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
00540e   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005410   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005412   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005414   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005416   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005418   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00541a   ffda                                                                                                               
00541c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00541e   ffd9                                                                                                               
005420   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054ce   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054d0   ffe6                                                                                                               
0054d2   cfda     MOVFF     0xfda,0xfe6                                                                                     
0054d4   ffe6                                                                                                               
0054d6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0054d8   ffd9                                                                                                               
0054da   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0054dc   ffda                                                                                                               
0054de   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0054e0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054e2   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054e4   6edf     MOVWF     0xdf,0x0                                                                                        
0054e6   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054e8   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
0054ea   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054ec   cfde     MOVFF     0xfde,0x0        return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054ee   f000                                                                                                               
0054f0   cfdd     MOVFF     0xfdd,0x1                                                                                       
0054f2   f001                                                                                                               
0054f4   c000     MOVFF     0x0,0xff3                                                                                       
0054f6   fff3                                                                                                               
0054f8   c001     MOVFF     0x1,0xff4                                                                                       
0054fa   fff4                                                                                                               
0054fc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0054fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005500   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005502   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005504   ffda                                                                                                               
005506   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005508   ffd9                                                                                                               
00550a   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a6a   3641     RLCF      0x41,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a6c   3642     RLCF      0x42,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a6e   362f     RLCF      0x2f,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a70   3630     RLCF      0x30,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a9c   3230     RRCF      0x30,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a9e   322f     RRCF      0x2f,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003aa0   3242     RRCF      0x42,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a90   2a42     INCF      0x42,0x1,0x0           incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a92   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a94   222f     ADDWFC    0x2f,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a96   2230     ADDWFC    0x30,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a72   0631     DECF      0x31,0x1,0x0           decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a74   a0d8     BTFSS     0xd8,0x0,0x0           btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a76   0632     DECF      0x32,0x1,0x0           decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a5a   be32     BTFSC     0x32,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a5e   be30     BTFSC     0x30,0x7,0x0                                                                                    
003a5c   d7f0     BRA       0x3a3e                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a60   d00c     BRA       0x3a7a                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a3e   ae3e     BTFSS     0x3e,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a82   ae41     BTFSS     0x41,0x7,0x0                                                                                    
003a8c   a042     BTFSS     0x42,0x0,0x0                                                                                    
003a40   d004     BRA       0x3a4a                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003a84   d011     BRA       0x3aa8                                                                                          
003a8e   d00c     BRA       0x3aa8                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;************ C O M M O M    E N T R I E S *****************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNaN:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return NaN                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a18   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a1a   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a1c   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a1e   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a20   6e35     MOVWF     0x35,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a22   6e34     MOVWF     0x34,0x0                 movwf     fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpExit:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a24   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignInf:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return infinite with sign in FLG_SIGN_ABW                           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a26   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a28   be3e     BTFSC     0x3e,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegInf:            ;; return negative infinite                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a2a   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a2c   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a2e   d002     BRA       0x3a34                   bra       jReturnPosInf0                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosInf:                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return positive infinite                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a30   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a32   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jReturnPosInf0:                                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a34   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a36   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jZero1and2:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a38   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a3a   6a34     CLRF      0x34,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a3c   d7f3     BRA       0x3a24                   bra       __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignZero:                                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return Zero with sign in FLG_SIGN_ABW                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,__FpReturnPosZero                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a42   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a44   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a46   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a48   d7f7     BRA       0x3a38                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return zero                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a4a   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a4c   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a4e   d7f4     BRA       0x3a38                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; __Fppack:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Rounds and packs a float                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Assumes significant, round bit and sticky bits in fW0 -> fW3.            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Biased exponent in fWexp,fWexpHi.                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Exponent must be adjusted for significant left-justified in fW0.         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Sign in FLAG_SIGN_ABW.                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Packed, signed float in fAexp...fA2                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpPack                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a50   5030     MOVF      0x30,0x0,0x0             movf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a52   102f     IORWF     0x2f,0x0,0x0             iorwf     fW1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a54   1042     IORWF     0x42,0x0,0x0             iorwf     fW2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a56   1041     IORWF     0x41,0x0,0x0             iorwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a58   e0f8     BZ        0x3a4a                   bz        __FpReturnPosZero             ;; Pure zero                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fWexpHi,7,__FpReturnSignZero  ;; Subnormal. Treat as signed zero C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkLoop:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fW0,7,jPkShiftDone            ;; Significant left-justified  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0 && fWexpHi == 0 )goto __FpReturnZero;                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a62   5031     MOVF      0x31,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a64   1032     IORWF     0x32,0x0,0x0             iorwf     fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a66   e0eb     BZ        0x3a3e                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a68   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftL4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Dec2      fWexp,fWexpHi                 ;; corrected exponent          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a78   d7f2     BRA       0x3a5e                   bra       jPkLoop                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkShiftDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexpHi ) goto __FpReturnSignInf                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a7a   5032     MOVF      0x32,0x0,0x0             movf      fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a7c   e1d4     BNZ       0x3a26                   bnz       __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a7e   2831     INCF      0x31,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a80   e0d2     BZ        0x3a26                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;;------ Round up if (round && (sticky || (significand & 1)))          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW3 & 0x80)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW3,7,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if(  fW3 & 0x7F)   goto jPkRoundIt;                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a86   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a88   1441     ANDWF     0x41,0x0,0x0             andwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a8a   e102     BNZ       0x3a90                   bnz       jPkRoundIt          ;; Rounding required ...                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW2 & 0x01)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW2,0,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundIt:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; ---------- Do Rounding ----------------                             C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Inc3      fW2,fW1,fW0         ;; Significand++                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a98   e307     BNC       0x3aa8                   bnc       jPkRoundDone        ;; No need to adjust exponent            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; Renormalize                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003a9a   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftR3C  fW2,fW1,fW0                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aa2   2a31     INCF      0x31,0x1,0x0             incf      fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aa4   2831     INCF      0x31,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aa6   e0bf     BZ        0x3a26                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnW:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aa8   5031     MOVF      0x31,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aaa   e0c9     BZ        0x3a3e                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aac   c042     MOVFF     0x42,0x34                movff     fW2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aae   f034                                                                                                               
003ab0   c02f     MOVFF     0x2f,0x35                movff     fW1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ab2   f035                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ab4   3430     RLCF      0x30,0x0,0x0             rlcf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ab6   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ab8   3031     RRCF      0x31,0x0,0x0             rrcf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003aba   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003abc   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003abe   9e37     BCF       0x37,0x7,0x0             bcf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ac0   be3e     BTFSC     0x3e,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ac2   8e37     BSF       0x37,0x7,0x0             bsf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ac4   ef12     GOTO      0x3a24                   goto      __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ac6   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackA                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackB                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpack floats fA and fB                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Requires flags to be zero on entry.                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpacks exponent into fAexp and Significant into fA0,fA1,fA2.          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets .0f => .1f, i.e. makes msb of Significant explict                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets Zero, Infinite and NaN flags.                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On entry: IEEE 754 format                   Address increasing down            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     E0  D22 D21 D20 D19 D18 D17 D16             |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   Sn  E7  E6  E5  E4  E3  E2  E1              V                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On exit                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     1   D22 D21 D20 D19 D18 D17 D16                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   E7  E6  E5  E4  E3  E2  E1  E0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     GLOBAL __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackA:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ac8   3636     RLCF      0x36,0x1,0x0             rlcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003aca   3637     RLCF      0x37,0x1,0x0             rlcf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003acc   e302     BNC       0x3ad2                   bnc       jUnpkA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ace   843e     BSF       0x3e,0x2,0x0             bsf       fFlg,FLG_SIGN_A    ; Signal negative                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ad0   7e3e     BTG       0x3e,0x7,0x0             btg       fFlg,FLG_SIGN_ABW  ; Toggle combined sign                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ad2   e106     BNZ       0x3ae0                   bnz       jUnpkANZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ad4   803e     BSF       0x3e,0x0,0x0             bsf       fFlg,FLG_ZERO_A    ; Signal Zero                             C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ad6   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ad8   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ada   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003adc   6a34     CLRF      0x34,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ade   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkANZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ae0   2837     INCF      0x37,0x0,0x0             incf      fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ae2   e003     BZ        0x3aea                   bz        jUnpkA2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ae4   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ae6   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003ae8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003aea   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003aec   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003aee   e102     BNZ       0x3af4                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003af0   823e     BSF       0x3e,0x1,0x0             bsf       fFlg,FLG_INF_A      ; A: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003af2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkNaN:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either A or B is a NaN                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003af4   863e     BSF       0x3e,0x3,0x0             bsf       fFlg,FLG_NaN_AorB   ; Signal NaN for A or B                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003af6   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackB                                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003af8   363b     RLCF      0x3b,0x1,0x0             rlcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003afa   363c     RLCF      0x3c,0x1,0x0             rlcf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003afc   e302     BNC       0x3b02                   bnc       jUnpkB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003afe   8c3e     BSF       0x3e,0x6,0x0             bsf       fFlg,FLG_SIGN_B       ; Signal negative                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b00   7e3e     BTG       0x3e,0x7,0x0             btg       fFlg,FLG_SIGN_ABW     ; Toggle combined sign                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b02   e106     BNZ       0x3b10                   bnz       jUnpkBNZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b04   883e     BSF       0x3e,0x4,0x0             bsf       fFlg,FLG_ZERO_B       ; Signal Zero                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b06   6a3c     CLRF      0x3c,0x0                 clrf      fBexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b08   6a3b     CLRF      0x3b,0x0                 clrf      fB0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b0a   6a3a     CLRF      0x3a,0x0                 clrf      fB1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b0c   6a39     CLRF      0x39,0x0                 clrf      fB2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b0e   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkBNZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b10   283c     INCF      0x3c,0x0,0x0             incf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b12   e003     BZ        0x3b1a                   bz        jUnpkB2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b14   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b16   323b     RRCF      0x3b,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b18   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b1a   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b1c   323b     RRCF      0x3b,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b1e   e1ea     BNZ       0x3af4                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b20   8a3e     BSF       0x3e,0x5,0x0             bsf       fFlg,FLG_INF_B      ; B: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003b22   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
0051cc   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
0051ce   ffe6                                                                                                               
0051d0   cfda     MOVFF     0xfda,0xfe6                                                                                     
0051d2   ffe6                                                                                                               
0051d4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0051d6   ffd9                                                                                                               
0051d8   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0051da   ffda                                                                                                               
0051dc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0051de   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0051e0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0051e2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
0051e4   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
0051e6   0ffb     ADDLW     0xfb                                                                                            
0051e8   6e00     MOVWF     0x0,0x0                                                                                         
0051ea   0eff     MOVLW     0xff                                                                                            
0051ec   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0051ee   6e01     MOVWF     0x1,0x0                                                                                         
0051f0   c000     MOVFF     0x0,0xfde                                                                                       
0051f2   ffde                                                                                                               
0051f4   6edd     MOVWF     0xdd,0x0                                                                                        
0051f6   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
0051f8   ffe6                                                                                                               
0051fa   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
0051fc   ffe6                                                                                                               
0051fe   0efb     MOVLW     0xfb                                                                                            
005200   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005202   ffe6                                                                                                               
005204   0efc     MOVLW     0xfc                                                                                            
005206   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005208   ffe6                                                                                                               
00520a   0efd     MOVLW     0xfd                                                                                            
00520c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00520e   ffe6                                                                                                               
005210   c289     MOVFF     0x289,0xfe6                                                                                     
005212   ffe6                                                                                                               
005214   c28a     MOVFF     0x28a,0xfe6                                                                                     
005216   ffe6                                                                                                               
005218   ec5c     CALL      0x8b8,0x0                                                                                       
00521a   f004                                                                                                               
00521c   6ef5     MOVWF     0xf5,0x0                                                                                        
00521e   0e07     MOVLW     0x7                                                                                             
005220   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
005222   e202     BC        0x5228                                                                                          
005224   6ae1     CLRF      0xe1,0x0                                                                                        
005226   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005228   6ee1     MOVWF     0xe1,0x0                                                                                        
00522a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00522c   0e02     MOVLW     0x2                                                                                             
00522e   cff3     MOVFF     0xff3,0xfdb                                                                                     
005230   ffdb                                                                                                               
005232   0e03     MOVLW     0x3                                                                                             
005234   cff4     MOVFF     0xff4,0xfdb                                                                                     
005236   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
005238   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
00523a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00523c   f000                                                                                                               
00523e   0e03     MOVLW     0x3                                                                                             
005240   cfdb     MOVFF     0xfdb,0x1                                                                                       
005242   f001                                                                                                               
005244   c000     MOVFF     0x0,0xff3                                                                                       
005246   fff3                                                                                                               
005248   c001     MOVFF     0x1,0xff4                                                                                       
00524a   fff4                                                                                                               
00524c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00524e   ffe1                                                                                                               
005250   cfda     MOVFF     0xfda,0xfe2                                                                                     
005252   ffe2                                                                                                               
005254   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005256   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005258   ffda                                                                                                               
00525a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00525c   ffd9                                                                                                               
00525e   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           ; $Id: scpyp2r.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005146   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005148   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00514a   ffe9                                                                                                               
00514c   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00514e   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005150   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005134   0efb     MOVLW     0xfb                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005136   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005138   fff6                                                                                                               
00513a   0efc     MOVLW     0xfc                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00513c   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00513e   fff7                                                                                                               
005140   0efd     MOVLW     0xfd                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005142   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005144   fff8                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; @name strcpypgm2ram                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;The {\bf strcpypgm2ram} function performs a {\bf strcpy} where                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;{\bf s1} points to data memory and {\bf s2} points to program                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;memory.                                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s1 pointer to destination in data memory                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s2 pointer to source in program memory                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; char *strcpypgm2ram (char *s1, const rom char *s2);                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           strcpypgm2ram                                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             global strcpypgm2ram                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - SMALL"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Use FSR0 for 'dest' and TBLPTR for 'src'                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Assumes TBLPTRU = 0.                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -4,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - LARGE"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Three byte rom pointer.                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Use FSR0 for 'dest' and TBLPTR for 'src'                               C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk3CpyToReg -5,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005152   cfe9     MOVFF     0xfe9,0xff3    	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005154   fff3                                                                                                               
005156   cfea     MOVFF     0xfea,0xff4    	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005158   fff4                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00515a   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00515c   cff5     MOVFF     0xff5,0xfef              movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00515e   ffef                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005160   66ee     TSTFSZ    0xee,0x0                 tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005162   d7fb     BRA       0x515a                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005164   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005166   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005168   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00516a   ffe9                                                                                                               
00516c   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00516e   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005170   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005172   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005174   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005176   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005178   e003     BZ        0x5180                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00517a   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00517c   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00517e   d7fb     BRA       0x5176                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005180   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00088c   ec82     CALL      0x1304,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00088e   f009                                                                                                               
001304   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
001306   ffe6                                                                                                               
001308   cfda     MOVFF     0xfda,0xfe6                                                                                     
00130a   ffe6                                                                                                               
00130c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00130e   ffd9                                                                                                               
001310   cfe2     MOVFF     0xfe2,0xfda                                                                                     
001312   ffda                                                                                                               
001314   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000890   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000892   cfdb     MOVFF     0xfdb,0xff3                                                                                     
000894   fff3                                                                                                               
000896   06db     DECF      0xdb,0x1,0x0                                                                                    
000898   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00089a   0900     IORLW     0x0                                                                                             
00089c   e00a     BZ        0x8b2                                                                                           
00089e   ecd0     CALL      0x13a0,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008a0   f009                                                                                                               
0008a2   0efa     MOVLW     0xfa                                                                                            
0008a4   ec3b     CALL      0x1476,0x0                                                                                      
0008a6   f00a                                                                                                               
0008a8   e1f3     BNZ       0x890                                                                                           
0008aa   1c01     COMF      0x1,0x0,0x0                                                                                     
0008ac   e1f1     BNZ       0x890                                                                                           
0008ae   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008b0   d001     BRA       0x8b4                                                                                           
0008b2   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008b4   efb1     GOTO      0x1362         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008b6   f009                                                                                                               
001362   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001364   cfe5     MOVFF     0xfe5,0xfda                                                                                     
001366   ffda                                                                                                               
001368   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00136a   ffd9                                                                                                               
00136c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008b8   ec82     CALL      0x1304,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008ba   f009                                                                                                               
0008bc   0e3b     MOVLW     0x3b                                                                                            
0008be   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
0008c0   e302     BNC       0x8c6                                                                                           
0008c2   68e1     SETF      0xe1,0x0                                                                                        
0008c4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0008c6   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008c8   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008ca   6adb     CLRF      0xdb,0x0                                                                                        
0008cc   0e02     MOVLW     0x2                                                                                             
0008ce   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008d0   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008d2   cfdb     MOVFF     0xfdb,0xff6                                                                                     
0008d4   fff6                                                                                                               
0008d6   0efa     MOVLW     0xfa                                                                                            
0008d8   cfdb     MOVFF     0xfdb,0xff7                                                                                     
0008da   fff7                                                                                                               
0008dc   0efb     MOVLW     0xfb                                                                                            
0008de   cfdb     MOVFF     0xfdb,0xff8                                                                                     
0008e0   fff8                                                                                                               
0008e2   0008     TBLRD                                                                                                     
0008e4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0008e6   6edf     MOVWF     0xdf,0x0                                                                                        
0008e8   50df     MOVF      0xdf,0x0,0x0                                                                                    
0008ea   e102     BNZ       0x8f0                                                                                           
0008ec   efd7     GOTO      0x11ae                                                                                          
0008ee   f008                                                                                                               
0011a8   d977     RCALL     0x1498                                                                                          
0011aa   ef71     GOTO      0x8e2                                                                                           
0011ac   f004                                                                                                               
001498   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00149a   0ff9     ADDLW     0xf9                                                                                            
00149c   6ee9     MOVWF     0xe9,0x0                                                                                        
00149e   0eff     MOVLW     0xff                                                                                            
0014a0   efe5     GOTO      0x13ca                                                                                          
0014a2   f009                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008f0   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008f2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0008f4   e002     BZ        0x8fa                                                                                           
0008f6   efca     GOTO      0x1194                                                                                          
0008f8   f008                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008fa   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0008fc   6adb     CLRF      0xdb,0x0                                                                                        
0008fe   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000900   6adb     CLRF      0xdb,0x0                                                                                        
000902   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000904   6adb     CLRF      0xdb,0x0                                                                                        
000906   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000908   6adb     CLRF      0xdb,0x0                                                                                        
00090a   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00090c   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00090e   ecea     CALL      0x11d4,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000910   f008                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000912   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000914   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000916   e00c     BZ        0x930                                                                                           
000918   0e2b     MOVLW     0x2b                                                                                            
00091a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00091c   e009     BZ        0x930                                                                                           
00091e   0e20     MOVLW     0x20                                                                                            
000920   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000922   e006     BZ        0x930                                                                                           
000924   0e23     MOVLW     0x23                                                                                            
000962   d7d5     BRA       0x90e                                                                                           
000926   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000928   e003     BZ        0x930                                                                                           
00092a   0e30     MOVLW     0x30                                                                                            
00092c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00092e   e11a     BNZ       0x964                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000930   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000932   0a30     XORLW     0x30                                                                                            
000934   e014     BZ        0x95e                                                                                           
000936   0a13     XORLW     0x13                                                                                            
000938   e00f     BZ        0x958                                                                                           
00093a   0a03     XORLW     0x3                                                                                             
00093c   e00a     BZ        0x952                                                                                           
00093e   0a0b     XORLW     0xb                                                                                             
000940   e005     BZ        0x94c                                                                                           
000942   0a06     XORLW     0x6                                                                                             
000944   e1e4     BNZ       0x90e                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000946   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000948   80db     BSF       0xdb,0x0,0x0                                                                                    
00094a   d7e1     BRA       0x90e                            break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00094c   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00094e   82db     BSF       0xdb,0x1,0x0                                                                                    
000950   d7de     BRA       0x90e                            break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000952   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000954   84db     BSF       0xdb,0x2,0x0                                                                                    
000956   d7db     BRA       0x90e                            break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000958   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00095a   86db     BSF       0xdb,0x3,0x0                                                                                    
00095c   d7d8     BRA       0x90e                            break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00095e   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000960   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000964   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000966   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000968   e11b     BNZ       0x9a0                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00096a   ece6     CALL      0x11cc,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00096c   f008                                                                                                               
00096e   ec34     CALL      0x1268,0x0                                                                                      
000970   f009                                                                                                               
001268   0e13     MOVLW     0x13                                                                                            
00126a   cfee     MOVFF     0xfee,0xfdb                                                                                     
00126c   ffdb                                                                                                               
00126e   0e14     MOVLW     0x14                                                                                            
001270   cfed     MOVFF     0xfed,0xfdb                                                                                     
001272   ffdb                                                                                                               
000972   e010     BZ        0x994                        if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001274   0e13     MOVLW     0x13                                                                                            
001276   cfdb     MOVFF     0xfdb,0x0                                                                                       
001278   f000                                                                                                               
00127a   0e14     MOVLW     0x14                                                                                            
00127c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00127e   f001                                                                                                               
001280   0100     MOVLB     0x0                                                                                             
001282   0e80     MOVLW     0x80                                                                                            
001284   1401     ANDWF     0x1,0x0,0x0                                                                                     
001286   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000974   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000976   80db     BSF       0xdb,0x0,0x0                                                                                    
000978   6835     SETF      0x35,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00097a   6836     SETF      0x36,0x0                                                                                        
00097c   0e13     MOVLW     0x13                                                                                            
00097e   cfdb     MOVFF     0xfdb,0x3a                                                                                      
000980   f03a                                                                                                               
000982   0e14     MOVLW     0x14                                                                                            
000984   cfdb     MOVFF     0xfdb,0x3b                                                                                      
000986   f03b                                                                                                               
000988   ec89     CALL      0x3912,0x0                                                                                      
00098a   f01c                                                                                                               
00098c   0e04     MOVLW     0x4                                                                                             
00098e   c033     MOVFF     0x33,0xfdb                                                                                      
000990   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000992   d003     BRA       0x99a                        else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000994   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000996   ec1d     CALL      0x123a,0x0                                                                                      
000998   f009                                                                                                               
00099a   ecea     CALL      0x11d4,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00099c   f008                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00099e   d00b     BRA       0x9b6                    else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009a0   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009a2   6adb     CLRF      0xdb,0x0                                                                                        
0009a4   ec8b     CALL      0x1316,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009a6   f009                                                                                                               
0009a8   e003     BZ        0x9b0                                                                                           
0009ae   d7fa     BRA       0x9a4                                                                                           
001316   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
001318   ffe6                                                                                                               
00131a   6ae6     CLRF      0xe6,0x0                                                                                        
00131c   ecb0     CALL      0x5560,0x0                                                                                      
00131e   f02a                                                                                                               
001320   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001322   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001324   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001326   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009aa   ecff     CALL      0x13fe,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009ac   f009                                                                                                               
0013fe   0e09     MOVLW     0x9                                                                                             
001400   50db     MOVF      0xdb,0x0,0x0                                                                                    
001402   0d0a     MULLW     0xa                                                                                             
001404   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001406   24df     ADDWF     0xdf,0x0,0x0                                                                                    
001408   0fd0     ADDLW     0xd0                                                                                            
00140a   6ee7     MOVWF     0xe7,0x0                                                                                        
00140c   0e09     MOVLW     0x9                                                                                             
00140e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001410   ffdb                                                                                                               
001412   efea     GOTO      0x11d4                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001414   f008                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009b0   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009b2   ec1d     CALL      0x123a,0x0                                                                                      
0009b4   f009                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009b6   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009b8   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0009ba   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009bc   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009be   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0009c0   e11b     BNZ       0x9f8                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009c2   ecea     CALL      0x11d4,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009c4   f008                                                                                                               
0009c6   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009c8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0009ca   e10b     BNZ       0x9e2                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009cc   ece6     CALL      0x11cc,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009ce   f008                                                                                                               
0009d0   ec34     CALL      0x1268,0x0                                                                                      
0009d2   f009                                                                                                               
0011cc   d929     RCALL     0x1420                                                                                          
0011ce   0e02     MOVLW     0x2                                                                                             
0011d0   efd7     GOTO      0x13ae                                                                                          
0011d2   f009                                                                                                               
0013ae   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0013b0   0e00     MOVLW     0x0                                                                                             
0013b2   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0013b4   0ef7     MOVLW     0xf7                                                                                            
0013b6   c000     MOVFF     0x0,0xfdb                                                                                       
0013b8   ffdb                                                                                                               
0013ba   0ef8     MOVLW     0xf8                                                                                            
0013bc   c001     MOVFF     0x1,0xfdb                                                                                       
0013be   ffdb                                                                                                               
0013c0   c000     MOVFF     0x0,0xfe9                                                                                       
0013c2   ffe9                                                                                                               
0013c4   c001     MOVFF     0x1,0xfea                                                                                       
0013c6   ffea                                                                                                               
0013c8   0012     RETURN    0x0                                                                                             
001420   0ef7     MOVLW     0xf7                                                                                            
001422   cfdb     MOVFF     0xfdb,0x0                                                                                       
001424   f000                                                                                                               
001426   0ef8     MOVLW     0xf8                                                                                            
001428   cfdb     MOVFF     0xfdb,0x1                                                                                       
00142a   f001                                                                                                               
00142c   0012     RETURN    0x0                                                                                             
0009d4   e103     BNZ       0x9dc                            if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009d6   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009d8   ec6f     CALL      0x12de,0x0                                                                                      
0009da   f009                                                                                                               
0012de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012e0   d8ce     RCALL     0x147e                                                                                          
00147e   6ee7     MOVWF     0xe7,0x0                                                                                        
001480   0e05     MOVLW     0x5                                                                                             
001482   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001484   ffdb                                                                                                               
001486   0012     RETURN    0x0                                                                                             
0012e2   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0012e4   6ef3     MOVWF     0xf3,0x0                                                                                        
0012e6   0e06     MOVLW     0x6                                                                                             
0012e8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0012ea   ffdb                                                                                                               
0012ec   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009dc   ecea     CALL      0x11d4,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009de   f008                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009e0   d00b     BRA       0x9f8                        else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009e2   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009e4   6adb     CLRF      0xdb,0x0                                                                                        
0009e6   ec8b     CALL      0x1316,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009e8   f009                                                                                                               
0009ea   e003     BZ        0x9f2                                                                                           
0009f0   d7fa     BRA       0x9e6                                                                                           
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009ec   ecff     CALL      0x13fe,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009ee   f009                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009f2   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009f4   ec6f     CALL      0x12de,0x0                                                                                      
0009f6   f009                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009f8   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009fa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0009fc   e107     BNZ       0xa0c                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0009fe   ecea     CALL      0x11d4,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a00   f008                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a02   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a04   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a06   e11d     BNZ       0xa42                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a08   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a0a   d018     BRA       0xa3c                    else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a0c   0e74     MOVLW     0x74                                                                                            
000a0e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a10   e017     BZ        0xa40                                                                                           
000a12   0e7a     MOVLW     0x7a                                                                                            
000a14   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a16   e014     BZ        0xa40                                                                                           
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a18   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a1a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a1c   e006     BZ        0xa2a                                                                                           
000a1e   0e54     MOVLW     0x54                                                                                            
000a20   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a22   e003     BZ        0xa2a                                                                                           
000a24   0e5a     MOVLW     0x5a                                                                                            
000a26   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a28   e102     BNZ       0xa2e                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a2a   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a2c   d007     BRA       0xa3c                    else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a2e   0e6c     MOVLW     0x6c                                                                                            
000a30   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a32   e003     BZ        0xa3a                                                                                           
000a34   0e6a     MOVLW     0x6a                                                                                            
000a36   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000a38   e104     BNZ       0xa42                                                                                           
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a3a   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a3c   ecc2     CALL      0x1384,0x0                                                                                      
000a3e   f009                                                                                                               
000a40   dbc9     RCALL     0x11d4                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0011d4   d961     RCALL     0x1498                                                                                          
0011d6   0008     TBLRD                                                                                                     
0011d8   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0011da   6edf     MOVWF     0xdf,0x0                                                                                        
0011dc   0012     RETURN    0x0                                                                                             
0013ca   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0013cc   6eea     MOVWF     0xea,0x0                                                                                        
0013ce   2aef     INCF      0xef,0x1,0x0                                                                                    
0013d0   cfee     MOVFF     0xfee,0xff6                                                                                     
0013d2   fff6                                                                                                               
0013d4   0e00     MOVLW     0x0                                                                                             
0013d6   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0013d8   cfee     MOVFF     0xfee,0xff7                                                                                     
0013da   fff7                                                                                                               
0013dc   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0013de   cfee     MOVFF     0xfee,0xff8                                                                                     
0013e0   fff8                                                                                                               
0013e2   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a42   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a44   0a6e     XORLW     0x6e                                                                                            
000a46   e101     BNZ       0xa4a                                                                                           
000a48   d381     BRA       0x114c                                                                                          
000a4a   0a1e     XORLW     0x1e                                                                                            
000a4c   e101     BNZ       0xa50                                                                                           
000a4e   d192     BRA       0xd74                                                                                           
000a50   0a20     XORLW     0x20                                                                                            
000a52   e101     BNZ       0xa56                                                                                           
000a54   d18f     BRA       0xd74                                                                                           
000a56   0a3f     XORLW     0x3f                                                                                            
000a58   e101     BNZ       0xa5c                                                                                           
000a5a   d149     BRA       0xcee                                                                                           
000a5c   0a1a     XORLW     0x1a                                                                                            
000a5e   e101     BNZ       0xa62                                                                                           
000a60   d146     BRA       0xcee                                                                                           
000a62   0a0d     XORLW     0xd                                                                                             
000a64   e101     BNZ       0xa68                                                                                           
000a66   d143     BRA       0xcee                                                                                           
000a68   0a20     XORLW     0x20                                                                                            
000a6a   e101     BNZ       0xa6e                                                                                           
000a6c   d140     BRA       0xcee                                                                                           
000a6e   0a3a     XORLW     0x3a                                                                                            
000a70   e101     BNZ       0xa74                                                                                           
000a72   d13d     BRA       0xcee                                                                                           
000a74   0a20     XORLW     0x20                                                                                            
000a76   e101     BNZ       0xa7a                                                                                           
000a78   d13a     BRA       0xcee                                                                                           
000a7a   0a26     XORLW     0x26                                                                                            
000a7c   e101     BNZ       0xa80                                                                                           
000a7e   d135     BRA       0xcea                                                                                           
000a80   0a0d     XORLW     0xd                                                                                             
000a82   e101     BNZ       0xa86                                                                                           
000a84   d132     BRA       0xcea                                                                                           
000a86   0a1a     XORLW     0x1a                                                                                            
000a88   e101     BNZ       0xa8c                                                                                           
000a8a   d0d9     BRA       0xc3e                                                                                           
000a8c   0a20     XORLW     0x20                                                                                            
000a8e   e04a     BZ        0xb24                                                                                           
000a90   0a30     XORLW     0x30                                                                                            
000a92   e01f     BZ        0xad2                                                                                           
000a94   0a46     XORLW     0x46                                                                                            
000a96   e00e     BZ        0xab4                                                                                           
000a98   0a25     XORLW     0x25                                                                                            
000a9a   e001     BZ        0xa9e                                                                                           
000a9c   d385     BRA       0x11a8                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000a9e   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000aa0   0ff9     ADDLW     0xf9                                                                                            
000aa2   6ee9     MOVWF     0xe9,0x0                                                                                        
000aa4   0eff     MOVLW     0xff                                                                                            
000aa6   20da     ADDWFC    0xda,0x0,0x0                                                                                    
000aa8   6eea     MOVWF     0xea,0x0                                                                                        
000aaa   0e01     MOVLW     0x1                                                                                             
000aac   5eee     SUBWF     0xee,0x1,0x0                                                                                    
000aae   0e00     MOVLW     0x0                                                                                             
000ab0   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
000ab2   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ab4   ecd0     CALL      0x13a0,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ab6   f009                                                                                                               
000ab8   0e25     MOVLW     0x25                                                                                            
000aba   6ee6     MOVWF     0xe6,0x0                                                                                        
000abc   db95     RCALL     0x11e8                                                                                          
000abe   e103     BNZ       0xac6                                                                                           
000ac0   1c01     COMF      0x1,0x0,0x0                                                                                     
000ac2   e101     BNZ       0xac6                                                                                           
000ac4   d36b     BRA       0x119c                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ac6   eccc     CALL      0x1398,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ac8   f009                                                                                                               
000aca   e201     BC        0xace                                                                                           
000acc   d36d     BRA       0x11a8                                                                                          
000ace   2adb     INCF      0xdb,0x1,0x0                                                                                    
000ad0   d36b     BRA       0x11a8                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ad2   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ad4   6adb     CLRF      0xdb,0x0                                                                                        
000ad6   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ad8   50db     MOVF      0xdb,0x0,0x0                                                                                    
000ada   0801     SUBLW     0x1                                                                                             
000adc   e206     BC        0xaea                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ade   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ae0   04db     DECF      0xdb,0x0,0x0                                                                                    
000ae2   ec94     CALL      0x1328,0x0                                                                                      
000ae4   f009                                                                                                               
000ae6   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ae8   db8b     RCALL     0x1200                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000aea   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000aec   50db     MOVF      0xdb,0x0,0x0                                                                                    
000aee   e009     BZ        0xb02                                                                                           
000af0   0e03     MOVLW     0x3                                                                                             
000af2   50db     MOVF      0xdb,0x0,0x0                                                                                    
000af4   0b01     ANDLW     0x1                                                                                             
000af6   e105     BNZ       0xb02                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000af8   db72     RCALL     0x11de                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000afa   e001     BZ        0xafe                                                                                           
000afc   d34f     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000afe   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b00   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b02   db64     RCALL     0x11cc                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b04   cfef     MOVFF     0xfef,0xfdf                                                                                     
000b06   ffdf                                                                                                               
000b08   ec44     CALL      0x1488,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b0a   f00a                                                                                                               
000b0c   e103     BNZ       0xb14                                                                                           
000b0e   1c01     COMF      0x1,0x0,0x0                                                                                     
000b10   e101     BNZ       0xb14                                                                                           
000b12   d344     BRA       0x119c                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b14   eccc     CALL      0x1398,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b16   f009                                                                                                               
000b18   e301     BNC       0xb1c                                                                                           
000b1a   2adb     INCF      0xdb,0x1,0x0                                                                                    
000b1c   db60     RCALL     0x11de                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b1e   e101     BNZ       0xb22                                                                                           
000b20   d343     BRA       0x11a8                                                                                          
000b22   d33c     BRA       0x119c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b24   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b26   50db     MOVF      0xdb,0x0,0x0                                                                                    
000b28   0802     SUBLW     0x2                                                                                             
000b2a   e10f     BNZ       0xb4a                                                                                           
000b2c   ec10     CALL      0x1420,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b2e   f00a                                                                                                               
000b30   0e03     MOVLW     0x3                                                                                             
000b32   ecd7     CALL      0x13ae,0x0                                                                                      
000b34   f009                                                                                                               
000b36   0e0e     MOVLW     0xe                                                                                             
000b38   cfee     MOVFF     0xfee,0xfdb                                                                                     
000b3a   ffdb                                                                                                               
000b3c   0e0f     MOVLW     0xf                                                                                             
000b3e   cfee     MOVFF     0xfee,0xfdb                                                                                     
000b40   ffdb                                                                                                               
000b42   0e10     MOVLW     0x10                                                                                            
000b44   cfee     MOVFF     0xfee,0xfdb                                                                                     
000b46   ffdb                                                                                                               
000b48   d020     BRA       0xb8a                        else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b4a   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b4c   cfdb     MOVFF     0xfdb,0x3                                                                                       
000b4e   f003                                                                                                               
000b50   0ef8     MOVLW     0xf8                                                                                            
000b52   cfdb     MOVFF     0xfdb,0x4                                                                                       
000b54   f004                                                                                                               
000b56   0e02     MOVLW     0x2                                                                                             
000b58   5e03     SUBWF     0x3,0x1,0x0                                                                                     
000b5a   0e00     MOVLW     0x0                                                                                             
000b5c   5a04     SUBWFB    0x4,0x1,0x0                                                                                     
000b5e   0ef7     MOVLW     0xf7                                                                                            
000b60   c003     MOVFF     0x3,0xfdb                                                                                       
000b62   ffdb                                                                                                               
000b64   0ef8     MOVLW     0xf8                                                                                            
000b66   c004     MOVFF     0x4,0xfdb                                                                                       
000b68   ffdb                                                                                                               
000b6a   c003     MOVFF     0x3,0xfe9                                                                                       
000b6c   ffe9                                                                                                               
000b6e   c004     MOVFF     0x4,0xfea                                                                                       
000b70   ffea                                                                                                               
000b72   ecc7     CALL      0x138e,0x0                                                                                      
000b74   f009                                                                                                               
000b76   6a02     CLRF      0x2,0x0                                                                                         
000b78   0e0e     MOVLW     0xe                                                                                             
000b7a   c000     MOVFF     0x0,0xfdb                                                                                       
000b7c   ffdb                                                                                                               
000b7e   0e0f     MOVLW     0xf                                                                                             
000b80   c001     MOVFF     0x1,0xfdb                                                                                       
000b82   ffdb                                                                                                               
000b84   0e10     MOVLW     0x10                                                                                            
000b86   c002     MOVFF     0x2,0xfdb                                                                                       
000b88   ffdb                                                                                                               
000b8a   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000b8c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b8e   ffe6                                                                                                               
000b90   0e0f     MOVLW     0xf                                                                                             
000b92   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b94   ffe6                                                                                                               
000b96   0e10     MOVLW     0x10                                                                                            
000b98   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b9a   ffe6                                                                                                               
000b9c   ecc1     CALL      0x5182,0x0                                                                                      
000b9e   f028                                                                                                               
000ba0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba6   0e13     MOVLW     0x13                                                                                            
000ba8   c034     MOVFF     0x34,0xfdb                                                                                      
000baa   ffdb                                                                                                               
000bac   0e14     MOVLW     0x14                                                                                            
000bae   c035     MOVFF     0x35,0xfdb                                                                                      
000bb0   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bb2   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bb4   50db     MOVF      0xdb,0x0,0x0                                                                                    
000bb6   e005     BZ        0xbc2                                                                                           
000bb8   0e13     MOVLW     0x13                                                                                            
000bba   ec0b     CALL      0x1416,0x0                                                                                      
000bbc   f00a                                                                                                               
000bbe   e201     BC        0xbc2                                                                                           
000bc0   db6a     RCALL     0x1296                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001296   0e05     MOVLW     0x5                                                                                             
001298   50db     MOVF      0xdb,0x0,0x0                                                                                    
00129a   6ee6     MOVWF     0xe6,0x0                                                                                        
00129c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00129e   0f13     ADDLW     0x13                                                                                            
0012a0   d901     RCALL     0x14a4                                                                                          
0012a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012a4   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0012a6   6eee     MOVWF     0xee,0x0                                                                                        
0012a8   6aed     CLRF      0xed,0x0                                                                                        
0012aa   0012     RETURN    0x0                                                                                             
000bc2   ec2f     CALL      0x145e,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bc4   f00a                                                                                                               
000bc6   e202     BC        0xbcc                                                                                           
00145e   0e13     MOVLW     0x13                                                                                            
001460   50db     MOVF      0xdb,0x0,0x0                                                                                    
001462   6ef3     MOVWF     0xf3,0x0                                                                                        
001464   0e04     MOVLW     0x4                                                                                             
001466   ef18     GOTO      0x1230                                                                                          
001468   f009                                                                                                               
000bc8   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bca   db37     RCALL     0x123a                                                                                          
000bcc   ecf2     CALL      0x13e4,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bce   f009                                                                                                               
0013e4   0e04     MOVLW     0x4                                                                                             
0013e6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013e8   ffe6                                                                                                               
0013ea   0e13     MOVLW     0x13                                                                                            
0013ec   50db     MOVF      0xdb,0x0,0x0                                                                                    
0013ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013f0   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0013f2   df9a     RCALL     0x1328                                                                                          
0013f4   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0013f6   df04     RCALL     0x1200                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bd0   e006     BZ        0xbde                        if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bd2   0e04     MOVLW     0x4                                                                                             
000bd4   ec0b     CALL      0x1416,0x0                                                                                      
000bd6   f00a                                                                                                               
000bd8   e202     BC        0xbde                                                                                           
0013f8   0e06     MOVLW     0x6                                                                                             
0013fa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0013fc   0012     RETURN    0x0                                                                                             
000bda   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bdc   db2e     RCALL     0x123a                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bde   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000be0   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
000be2   d005     BRA       0xbee                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000be4   dafc     RCALL     0x11de                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000be6   e001     BZ        0xbea                                                                                           
000be8   d2d9     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bea   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bec   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bee   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bf0   6adb     CLRF      0xdb,0x0                                                                                        
000bf2   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000bf4   cfdb     MOVFF     0xfdb,0xff6                                                                                     
000bf6   fff6                                                                                                               
000bf8   0e0f     MOVLW     0xf                                                                                             
000bfa   cfdb     MOVFF     0xfdb,0xff7                                                                                     
000bfc   fff7                                                                                                               
000bfe   0e10     MOVLW     0x10                                                                                            
000c00   cfdb     MOVFF     0xfdb,0xff8                                                                                     
000c02   fff8                                                                                                               
000c04   0008     TBLRD                                                                                                     
000c06   50f5     MOVF      0xf5,0x0,0x0                                                                                    
000c08   6edf     MOVWF     0xdf,0x0                                                                                        
000c0a   50df     MOVF      0xdf,0x0,0x0                                                                                    
000c0c   e014     BZ        0xc36                                                                                           
000c0e   ec35     CALL      0x146a,0x0                                                                                      
000c10   f00a                                                                                                               
000c12   e211     BC        0xc36                                                                                           
000c2a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000c2c   0f0e     ADDLW     0xe                                                                                             
000c2e   6ee9     MOVWF     0xe9,0x0                                                                                        
000c30   0e00     MOVLW     0x0                                                                                             
000c32   dbcb     RCALL     0x13ca                                                                                          
000c34   d7e7     BRA       0xc04                                                                                           
00146a   0e04     MOVLW     0x4                                                                                             
00146c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00146e   6ef3     MOVWF     0xf3,0x0                                                                                        
001470   0e09     MOVLW     0x9                                                                                             
001472   ef18     GOTO      0x1230                                                                                          
001474   f009                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c14   ec44     CALL      0x1488,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c16   f00a                                                                                                               
000c18   e103     BNZ       0xc20                                                                                           
000c1a   1c01     COMF      0x1,0x0,0x0                                                                                     
000c1c   e101     BNZ       0xc20                                                                                           
000c1e   d2be     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c20   dbbb     RCALL     0x1398                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c22   e301     BNC       0xc26                                                                                           
000c24   2adb     INCF      0xdb,0x1,0x0                                                                                    
000c26   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c28   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c36   dad3     RCALL     0x11de                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c38   e101     BNZ       0xc3c                                                                                           
000c3a   d2b6     BRA       0x11a8                                                                                          
000c3c   d2af     BRA       0x119c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c3e   dac6     RCALL     0x11cc                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c40   0e11     MOVLW     0x11                                                                                            
000c42   cfee     MOVFF     0xfee,0xfdb                                                                                     
000c44   ffdb                                                                                                               
000c46   0e12     MOVLW     0x12                                                                                            
000c48   cfed     MOVFF     0xfed,0xfdb                                                                                     
000c4a   ffdb                                                                                                               
000c4c   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c4e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000c50   ffe6                                                                                                               
000c52   0e12     MOVLW     0x12                                                                                            
000c54   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000c56   ffe6                                                                                                               
000c58   ecb3     CALL      0x5166,0x0                                                                                      
000c5a   f028                                                                                                               
000c5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c60   0e13     MOVLW     0x13                                                                                            
000c62   cff3     MOVFF     0xff3,0xfdb                                                                                     
000c64   ffdb                                                                                                               
000c66   0e14     MOVLW     0x14                                                                                            
000c68   cff4     MOVFF     0xff4,0xfdb                                                                                     
000c6a   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c6c   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c6e   50db     MOVF      0xdb,0x0,0x0                                                                                    
000c70   e004     BZ        0xc7a                                                                                           
000c72   0e13     MOVLW     0x13                                                                                            
000c74   dbd0     RCALL     0x1416                                                                                          
000c76   e201     BC        0xc7a                                                                                           
000c78   db0e     RCALL     0x1296                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c7a   ec2f     CALL      0x145e,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c7c   f00a                                                                                                               
000c7e   e202     BC        0xc84                                                                                           
000c80   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c82   dadb     RCALL     0x123a                                                                                          
000c84   dbaf     RCALL     0x13e4                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001328   6ee7     MOVWF     0xe7,0x0                                                                                        
00132a   0e08     MOVLW     0x8                                                                                             
00132c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00132e   ffdb                                                                                                               
001330   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c86   e005     BZ        0xc92                        if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c88   0e04     MOVLW     0x4                                                                                             
000c8a   dbc5     RCALL     0x1416                                                                                          
000c8c   e202     BC        0xc92                                                                                           
001416   50db     MOVF      0xdb,0x0,0x0                                                                                    
001418   6ef3     MOVWF     0xf3,0x0                                                                                        
00141a   0e05     MOVLW     0x5                                                                                             
00141c   ef18     GOTO      0x1230                                                                                          
00141e   f009                                                                                                               
000c8e   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c90   dad4     RCALL     0x123a                                                                                          
00123a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00123c   6ee7     MOVWF     0xe7,0x0                                                                                        
00123e   0e04     MOVLW     0x4                                                                                             
001240   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001242   ffdb                                                                                                               
001244   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c92   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c94   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
000c96   d005     BRA       0xca2                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c98   daa2     RCALL     0x11de                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c9a   e001     BZ        0xc9e                                                                                           
000c9c   d27f     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000c9e   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ca0   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ca2   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ca4   6adb     CLRF      0xdb,0x0                                                                                        
000ca6   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ca8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000caa   ffe9                                                                                                               
000cac   0e12     MOVLW     0x12                                                                                            
000cae   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000cb0   ffea                                                                                                               
000cb2   cfef     MOVFF     0xfef,0xfdf                                                                                     
000cb4   ffdf                                                                                                               
000cb6   50df     MOVF      0xdf,0x0,0x0                                                                                    
000cb8   e014     BZ        0xce2                                                                                           
000cba   dbd7     RCALL     0x146a                                                                                          
000cbc   e212     BC        0xce2                                                                                           
000cd2   0e11     MOVLW     0x11                                                                                            
000cd4   2adb     INCF      0xdb,0x1,0x0                                                                                    
000cd6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000cd8   ffe9                                                                                                               
000cda   0e12     MOVLW     0x12                                                                                            
000cdc   e3e8     BNC       0xcae                                                                                           
000cde   2adb     INCF      0xdb,0x1,0x0                                                                                    
000ce0   d7e6     BRA       0xcae                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cbe   dbe4     RCALL     0x1488                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cc0   e103     BNZ       0xcc8                                                                                           
000cc2   1c01     COMF      0x1,0x0,0x0                                                                                     
000cc4   e101     BNZ       0xcc8                                                                                           
000cc6   d26a     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cc8   db67     RCALL     0x1398                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cca   e301     BNC       0xcce                                                                                           
000ccc   2adb     INCF      0xdb,0x1,0x0                                                                                    
000cce   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cd0   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ce2   da7d     RCALL     0x11de                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ce4   e101     BNZ       0xce8                                                                                           
000ce6   d260     BRA       0x11a8                                                                                          
000ce8   d259     BRA       0x119c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cea   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cec   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cee   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cf0   04db     DECF      0xdb,0x0,0x0                                                                                    
000cf2   e110     BNZ       0xd14                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cf4   db95     RCALL     0x1420                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000cf6   0e04     MOVLW     0x4                                                                                             
000cf8   db5a     RCALL     0x13ae                                                                                          
000cfa   0e0a     MOVLW     0xa                                                                                             
000cfc   cfee     MOVFF     0xfee,0xfdb                                                                                     
000cfe   ffdb                                                                                                               
000d00   0e0b     MOVLW     0xb                                                                                             
000d02   cfee     MOVFF     0xfee,0xfdb                                                                                     
000d04   ffdb                                                                                                               
000d06   0e0c     MOVLW     0xc                                                                                             
000d08   cfee     MOVFF     0xfee,0xfdb                                                                                     
000d0a   ffdb                                                                                                               
000d0c   0e0d     MOVLW     0xd                                                                                             
000d0e   cfee     MOVFF     0xfee,0xfdb                                                                                     
000d10   ffdb                                                                                                               
000d12   d06c     BRA       0xdec                            goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d14   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d16   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d18   0803     SUBLW     0x3                                                                                             
000d1a   e12c     BNZ       0xd74                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d1c   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d1e   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
000d20   d00d     BRA       0xd3c                                                                                           
000d22   dab2     RCALL     0x1288                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d24   0e02     MOVLW     0x2                                                                                             
000d26   da76     RCALL     0x1214                                                                                          
000d28   cfef     MOVFF     0xfef,0x0                                                                                       
000d2a   f000                                                                                                               
000d2c   6a01     CLRF      0x1,0x0                                                                                         
000d2e   6a02     CLRF      0x2,0x0                                                                                         
000d30   6a03     CLRF      0x3,0x0                                                                                         
000d32   ae00     BTFSS     0x0,0x7,0x0                                                                                     
000d34   d039     BRA       0xda8                                                                                           
000d36   6801     SETF      0x1,0x0                                                                                         
000d38   6802     SETF      0x2,0x0                                                                                         
000d3a   d035     BRA       0xda6                            else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d3c   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d3e   cfdb     MOVFF     0xfdb,0x1                                                                                       
000d40   f001                                                                                                               
000d42   0ef8     MOVLW     0xf8                                                                                            
000d44   cfdb     MOVFF     0xfdb,0x2                                                                                       
000d46   f002                                                                                                               
000d48   0e02     MOVLW     0x2                                                                                             
000d4a   5e01     SUBWF     0x1,0x1,0x0                                                                                     
000d4c   0e00     MOVLW     0x0                                                                                             
000d4e   5a02     SUBWFB    0x2,0x1,0x0                                                                                     
000d50   0ef7     MOVLW     0xf7                                                                                            
000d52   c001     MOVFF     0x1,0xfdb                                                                                       
000d54   ffdb                                                                                                               
000d56   0ef8     MOVLW     0xf8                                                                                            
000d58   c002     MOVFF     0x2,0xfdb                                                                                       
000d5a   ffdb                                                                                                               
000d5c   c001     MOVFF     0x1,0xfe9                                                                                       
000d5e   ffe9                                                                                                               
000d60   c002     MOVFF     0x2,0xfea                                                                                       
000d62   ffea                                                                                                               
000d64   cfef     MOVFF     0xfef,0x0                                                                                       
000d66   f000                                                                                                               
000d68   0e0a     MOVLW     0xa                                                                                             
000d6a   c000     MOVFF     0x0,0xfdb                                                                                       
000d6c   ffdb                                                                                                               
000d6e   0e0b     MOVLW     0xb                                                                                             
000d70   6adb     CLRF      0xdb,0x0                                                                                        
000d72   d038     BRA       0xde4                            goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d74   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d76   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d78   0802     SUBLW     0x2                                                                                             
000d7a   e109     BNZ       0xd8e                                                                                           
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d7c   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d7e   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
000d80   d004     BRA       0xd8a                                                                                           
000d82   db59     RCALL     0x1436                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d84   ae02     BTFSS     0x2,0x7,0x0                                                                                     
000d86   d010     BRA       0xda8                                                                                           
001332   cfee     MOVFF     0xfee,0x0                                                                                       
001334   f000                                                                                                               
001336   cfee     MOVFF     0xfee,0x1                                                                                       
001338   f001                                                                                                               
00133a   cfef     MOVFF     0xfef,0x2                                                                                       
00133c   f002                                                                                                               
00133e   6a03     CLRF      0x3,0x0                                                                                         
001340   0012     RETURN    0x0                                                                                             
001436   df28     RCALL     0x1288                                                                                          
001438   0e03     MOVLW     0x3                                                                                             
00143a   deec     RCALL     0x1214                                                                                          
00143c   ef99     GOTO      0x1332                                                                                          
00143e   f009                                                                                                               
000d88   d00e     BRA       0xda6                            else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d8a   db55     RCALL     0x1436                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d8c   d00d     BRA       0xda8                        else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d8e   0e03     MOVLW     0x3                                                                                             
000d90   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
000d92   d012     BRA       0xdb8                                                                                           
000d94   da79     RCALL     0x1288                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000d96   0e02     MOVLW     0x2                                                                                             
000d98   da3d     RCALL     0x1214                                                                                          
000d9a   daf9     RCALL     0x138e                                                                                          
000d9c   6a02     CLRF      0x2,0x0                                                                                         
000d9e   6a03     CLRF      0x3,0x0                                                                                         
000da0   ae01     BTFSS     0x1,0x7,0x0                                                                                     
000da2   d002     BRA       0xda8                                                                                           
000da4   6802     SETF      0x2,0x0                                                                                         
000da6   6803     SETF      0x3,0x0                                                                                         
000da8   dae2     RCALL     0x136e                                                                                          
000daa   0e0c     MOVLW     0xc                                                                                             
000dac   c002     MOVFF     0x2,0xfdb                                                                                       
000dae   ffdb                                                                                                               
000db0   0e0d     MOVLW     0xd                                                                                             
000db2   c003     MOVFF     0x3,0xfdb                                                                                       
000db4   ffdb                                                                                                               
001214   5e04     SUBWF     0x4,0x1,0x0                                                                                     
001216   0e00     MOVLW     0x0                                                                                             
001218   5a05     SUBWFB    0x5,0x1,0x0                                                                                     
00121a   0ef7     MOVLW     0xf7                                                                                            
00121c   c004     MOVFF     0x4,0xfdb                                                                                       
00121e   ffdb                                                                                                               
001220   0ef8     MOVLW     0xf8                                                                                            
001222   c005     MOVFF     0x5,0xfdb                                                                                       
001224   ffdb                                                                                                               
001226   c004     MOVFF     0x4,0xfe9                                                                                       
001228   ffe9                                                                                                               
00122a   c005     MOVFF     0x5,0xfea                                                                                       
00122c   ffea                                                                                                               
00122e   0012     RETURN    0x0                                                                                             
001288   0ef7     MOVLW     0xf7                                                                                            
00128a   cfdb     MOVFF     0xfdb,0x4                                                                                       
00128c   f004                                                                                                               
00128e   0ef8     MOVLW     0xf8                                                                                            
001290   cfdb     MOVFF     0xfdb,0x5                                                                                       
001292   f005                                                                                                               
001294   0012     RETURN    0x0                                                                                             
00136e   0e0a     MOVLW     0xa                                                                                             
001370   c000     MOVFF     0x0,0xfdb                                                                                       
001372   ffdb                                                                                                               
001374   0e0b     MOVLW     0xb                                                                                             
001376   c001     MOVFF     0x1,0xfdb                                                                                       
001378   ffdb                                                                                                               
00137a   0012     RETURN    0x0                                                                                             
00138e   cfee     MOVFF     0xfee,0x0                                                                                       
001390   f000                                                                                                               
001392   cfef     MOVFF     0xfef,0x1                                                                                       
001394   f001                                                                                                               
001396   0012     RETURN    0x0                                                                                             
000db6   d01a     BRA       0xdec                        else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000db8   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000dba   cfdb     MOVFF     0xfdb,0x2                                                                                       
000dbc   f002                                                                                                               
000dbe   0ef8     MOVLW     0xf8                                                                                            
000dc0   cfdb     MOVFF     0xfdb,0x3                                                                                       
000dc2   f003                                                                                                               
000dc4   0e02     MOVLW     0x2                                                                                             
000dc6   5e02     SUBWF     0x2,0x1,0x0                                                                                     
000dc8   0e00     MOVLW     0x0                                                                                             
000dca   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
000dcc   0ef7     MOVLW     0xf7                                                                                            
000dce   c002     MOVFF     0x2,0xfdb                                                                                       
000dd0   ffdb                                                                                                               
000dd2   0ef8     MOVLW     0xf8                                                                                            
000dd4   c003     MOVFF     0x3,0xfdb                                                                                       
000dd6   ffdb                                                                                                               
000dd8   c002     MOVFF     0x2,0xfe9                                                                                       
000dda   ffe9                                                                                                               
000ddc   c003     MOVFF     0x3,0xfea                                                                                       
000dde   ffea                                                                                                               
000de0   dad6     RCALL     0x138e                                                                                          
000de2   dac5     RCALL     0x136e                                                                                          
000de4   0e0c     MOVLW     0xc                                                                                             
000de6   6adb     CLRF      0xdb,0x0                                                                                        
000de8   0e0d     MOVLW     0xd                                                                                             
000dea   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000dec   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000dee   50db     MOVF      0xdb,0x0,0x0                                                                                    
000df0   e105     BNZ       0xdfc                                                                                           
000df2   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000df4   6ef3     MOVWF     0xf3,0x0                                                                                        
000df6   0e05     MOVLW     0x5                                                                                             
000df8   cff3     MOVFF     0xff3,0xfdb                                                                                     
000dfa   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000dfc   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000dfe   6adb     CLRF      0xdb,0x0                                                                                        
000e00   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e02   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e04   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e06   0f37     ADDLW     0x37                                                                                            
000e08   6e00     MOVWF     0x0,0x0                                                                                         
000e0a   0e00     MOVLW     0x0                                                                                             
000e0c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
000e0e   6e01     MOVWF     0x1,0x0                                                                                         
000e10   0e39     MOVLW     0x39                                                                                            
000e12   c000     MOVFF     0x0,0xfdb                                                                                       
000e14   ffdb                                                                                                               
000e16   0e3a     MOVLW     0x3a                                                                                            
000e18   c001     MOVFF     0x1,0xfdb                                                                                       
000e1a   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e1c   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e1e   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e20   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e22   6adb     CLRF      0xdb,0x0                                                                                        
000e24   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e26   daae     RCALL     0x1384                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e28   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e2a   0a78     XORLW     0x78                                                                                            
000e2c   e012     BZ        0xe52                                                                                           
000e2e   0a20     XORLW     0x20                                                                                            
000e30   e010     BZ        0xe52                                                                                           
000e32   0a28     XORLW     0x28                                                                                            
000e34   e00c     BZ        0xe4e                                                                                           
000e36   0a20     XORLW     0x20                                                                                            
000e38   e00a     BZ        0xe4e                                                                                           
000e3a   0a3f     XORLW     0x3f                                                                                            
000e3c   e006     BZ        0xe4a                                                                                           
000e3e   0a0d     XORLW     0xd                                                                                             
000e40   e002     BZ        0xe46                                                                                           
000e42   0a20     XORLW     0x20                                                                                            
000e44   e108     BNZ       0xe56                                                                                           
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e46   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e48   d005     BRA       0xe54                              break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e4a   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e4c   d003     BRA       0xe54                              break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e4e   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e50   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e52   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e54   da97     RCALL     0x1384                                                                                          
001384   6ef3     MOVWF     0xf3,0x0                                                                                        
001386   0e07     MOVLW     0x7                                                                                             
001388   cff3     MOVFF     0xff3,0xfdb                                                                                     
00138a   ffdb                                                                                                               
00138c   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e56   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e58   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
000e5a   d002     BRA       0xe60                                                                                           
000e5c   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e5e   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e60   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e62   0b80     ANDLW     0x80                                                                                            
000e64   e026     BZ        0xeb2                                                                                           
000e66   da8a     RCALL     0x137c                                                                                          
000e68   0e03     MOVLW     0x3                                                                                             
000e6a   50eb     MOVF      0xeb,0x0,0x0                                                                                    
000e6c   0a00     XORLW     0x0                                                                                             
000e6e   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000e70   d002     BRA       0xe76                                                                                           
000e72   90d8     BCF       0xd8,0x0,0x0                                                                                    
000e74   d008     BRA       0xe86                                                                                           
000e76   0e00     MOVLW     0x0                                                                                             
000e78   5cee     SUBWF     0xee,0x0,0x0                                                                                    
000e7a   0e00     MOVLW     0x0                                                                                             
000e7c   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000e7e   0e00     MOVLW     0x0                                                                                             
000e80   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000e82   0e00     MOVLW     0x0                                                                                             
000e84   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000e86   e215     BC        0xeb2                                                                                           
00137c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00137e   0f0a     ADDLW     0xa                                                                                             
001380   ef52     GOTO      0x14a4                                                                                          
001382   f00a                                                                                                               
0014a4   6ee9     MOVWF     0xe9,0x0                                                                                        
0014a6   0e00     MOVLW     0x0                                                                                             
0014a8   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0014aa   6eea     MOVWF     0xea,0x0                                                                                        
0014ac   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e88   da11     RCALL     0x12ac                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000e8a   6838     SETF      0x38,0x0                                                                                        
000e8c   6839     SETF      0x39,0x0                                                                                        
000e8e   683a     SETF      0x3a,0x0                                                                                        
000e90   683b     SETF      0x3b,0x0                                                                                        
000e92   ec72     CALL      0x52e4,0x0                                                                                      
000e94   f029                                                                                                               
000e96   0e0a     MOVLW     0xa                                                                                             
000e98   c02f     MOVFF     0x2f,0xfdb                                                                                      
000e9a   ffdb                                                                                                               
000e9c   0e0b     MOVLW     0xb                                                                                             
000e9e   c030     MOVFF     0x30,0xfdb                                                                                      
000ea0   ffdb                                                                                                               
000ea2   0e0c     MOVLW     0xc                                                                                             
000ea4   c031     MOVFF     0x31,0xfdb                                                                                      
000ea6   ffdb                                                                                                               
000ea8   0e0d     MOVLW     0xd                                                                                             
000eaa   c032     MOVFF     0x32,0xfdb                                                                                      
000eac   ffdb                                                                                                               
0012ac   0e0a     MOVLW     0xa                                                                                             
0012ae   cfdb     MOVFF     0xfdb,0x33                                                                                      
0012b0   f033                                                                                                               
0012b2   0e0b     MOVLW     0xb                                                                                             
0012b4   cfdb     MOVFF     0xfdb,0x34                                                                                      
0012b6   f034                                                                                                               
0012b8   0e0c     MOVLW     0xc                                                                                             
0012ba   cfdb     MOVFF     0xfdb,0x35                                                                                      
0012bc   f035                                                                                                               
0012be   0e0d     MOVLW     0xd                                                                                             
0012c0   cfdb     MOVFF     0xfdb,0x36                                                                                      
0012c2   f036                                                                                                               
0012c4   0012     RETURN    0x0                                                                                             
000eae   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000eb0   d008     BRA       0xec2                          else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000eb2   0e03     MOVLW     0x3                                                                                             
000eb4   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
000eb6   d002     BRA       0xebc                                                                                           
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000eb8   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000eba   d003     BRA       0xec2                          else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ebc   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
000ebe   d008     BRA       0xed0                                                                                           
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ec0   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ec2   6ef3     MOVWF     0xf3,0x0                                                                                        
000ec4   0e17     MOVLW     0x17                                                                                            
000ec6   cff3     MOVFF     0xff3,0xfdb                                                                                     
000ec8   ffdb                                                                                                               
000eca   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ecc   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ece   d002     BRA       0xed4                          else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ed0   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ed2   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ed4   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ed6   50db     MOVF      0xdb,0x0,0x0                                                                                    
000ed8   e103     BNZ       0xee0                                                                                           
000eda   d9b5     RCALL     0x1246                                                                                          
000edc   e101     BNZ       0xee0                                                                                           
000ede   d089     BRA       0xff2                                                                                           
001246   0e0a     MOVLW     0xa                                                                                             
001248   cfdb     MOVFF     0xfdb,0x0                                                                                       
00124a   f000                                                                                                               
00124c   0e0b     MOVLW     0xb                                                                                             
00124e   cfdb     MOVFF     0xfdb,0x1                                                                                       
001250   f001                                                                                                               
001252   0e0c     MOVLW     0xc                                                                                             
001254   cfdb     MOVFF     0xfdb,0x2                                                                                       
001256   f002                                                                                                               
001258   0e0d     MOVLW     0xd                                                                                             
00125a   cfdb     MOVFF     0xfdb,0x3                                                                                       
00125c   f003                                                                                                               
00125e   5000     MOVF      0x0,0x0,0x0                                                                                     
001260   1001     IORWF     0x1,0x0,0x0                                                                                     
001262   1002     IORWF     0x2,0x0,0x0                                                                                     
001264   1003     IORWF     0x3,0x0,0x0                                                                                     
001266   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ee0   0e12     MOVLW     0x12                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ee2   6e00     MOVWF     0x0,0x0                                                                                         
000ee4   0e56     MOVLW     0x56                                                                                            
000ee6   6e01     MOVWF     0x1,0x0                                                                                         
000ee8   0e00     MOVLW     0x0                                                                                             
000eea   6e02     MOVWF     0x2,0x0                                                                                         
000eec   0e07     MOVLW     0x7                                                                                             
000eee   cfdb     MOVFF     0xfdb,0x3                                                                                       
000ef0   f003                                                                                                               
000ef2   6a04     CLRF      0x4,0x0                                                                                         
000ef4   6a05     CLRF      0x5,0x0                                                                                         
000ef6   6a06     CLRF      0x6,0x0                                                                                         
000ef8   c003     MOVFF     0x3,0x38                                                                                        
000efa   f038                                                                                                               
000efc   c004     MOVFF     0x4,0x39                                                                                        
000efe   f039                                                                                                               
000f00   c005     MOVFF     0x5,0x3a                                                                                        
000f02   f03a                                                                                                               
000f04   c006     MOVFF     0x6,0x3b                                                                                        
000f06   f03b                                                                                                               
000f08   d9d1     RCALL     0x12ac                                                                                          
000f0a   ec43     CALL      0x5486,0x0                                                                                      
000f0c   f02a                                                                                                               
000f0e   5000     MOVF      0x0,0x0,0x0                                                                                     
000f10   242f     ADDWF     0x2f,0x0,0x0                                                                                    
000f12   6ef3     MOVWF     0xf3,0x0                                                                                        
000f14   5001     MOVF      0x1,0x0,0x0                                                                                     
000f16   2030     ADDWFC    0x30,0x0,0x0                                                                                    
000f18   6ef4     MOVWF     0xf4,0x0                                                                                        
000f1a   5002     MOVF      0x2,0x0,0x0                                                                                     
000f1c   2031     ADDWFC    0x31,0x0,0x0                                                                                    
000f1e   6ef8     MOVWF     0xf8,0x0                                                                                        
000f20   cff4     MOVFF     0xff4,0xff7                                                                                     
000f22   fff7                                                                                                               
000f24   cff3     MOVFF     0xff3,0xff6                                                                                     
000f26   fff6                                                                                                               
000f28   0008     TBLRD                                                                                                     
000f2a   0e09     MOVLW     0x9                                                                                             
000f2c   cff5     MOVFF     0xff5,0xfdb                                                                                     
000f2e   ffdb                                                                                                               
000f30   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000f32   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000f34   e10f     BNZ       0xf54                                                                                           
000f36   0e61     MOVLW     0x61                                                                                            
000f38   6ef3     MOVWF     0xf3,0x0                                                                                        
000f3a   0e09     MOVLW     0x9                                                                                             
000f3c   d979     RCALL     0x1230                                                                                          
000f3e   e30a     BNC       0xf54                                                                                           
001230   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001232   fff4                                                                                                               
001234   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001236   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001238   0012     RETURN    0x0                                                                                             
000f40   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000f42   6e00     MOVWF     0x0,0x0                                                                                         
000f44   0e09     MOVLW     0x9                                                                                             
000f46   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
000f48   ffe7                                                                                                               
000f4a   5000     MOVF      0x0,0x0,0x0                                                                                     
000f4c   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
000f4e   0e09     MOVLW     0x9                                                                                             
000f50   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000f52   ffdb                                                                                                               
000f54   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000f56   cfdb     MOVFF     0xfdb,0x0                                                                                       
000f58   f000                                                                                                               
000f5a   6a01     CLRF      0x1,0x0                                                                                         
000f5c   6a02     CLRF      0x2,0x0                                                                                         
000f5e   6a03     CLRF      0x3,0x0                                                                                         
000f60   da0d     RCALL     0x137c                                                                                          
000f62   c000     MOVFF     0x0,0x38                                                                                        
000f64   f038                                                                                                               
000f66   c001     MOVFF     0x1,0x39                                                                                        
000f68   f039                                                                                                               
000f6a   c002     MOVFF     0x2,0x3a                                                                                        
000f6c   f03a                                                                                                               
000f6e   c003     MOVFF     0x3,0x3b                                                                                        
000f70   f03b                                                                                                               
000f72   cfee     MOVFF     0xfee,0x33                                                                                      
000f74   f033                                                                                                               
000f76   cfee     MOVFF     0xfee,0x34                                                                                      
000f78   f034                                                                                                               
000f7a   cfee     MOVFF     0xfee,0x35                                                                                      
000f7c   f035                                                                                                               
000f7e   cfef     MOVFF     0xfef,0x36                                                                                      
000f80   f036                                                                                                               
000f82   ec43     CALL      0x5486,0x0                                                                                      
000f84   f02a                                                                                                               
000f86   c036     MOVFF     0x36,0xfed                                                                                      
000f88   ffed                                                                                                               
000f8a   c035     MOVFF     0x35,0xfed                                                                                      
000f8c   ffed                                                                                                               
000f8e   c034     MOVFF     0x34,0xfed                                                                                      
000f90   ffed                                                                                                               
000f92   c033     MOVFF     0x33,0xfef                                                                                      
000f94   ffef                                                                                                               
000f96   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000f98   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f9a   ffe9                                                                                                               
000f9c   06db     DECF      0xdb,0x1,0x0                                                                                    
000f9e   0e3a     MOVLW     0x3a                                                                                            
000fa0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000fa2   ffea                                                                                                               
000fa4   e201     BC        0xfa8                                                                                           
000fa6   06db     DECF      0xdb,0x1,0x0                                                                                    
000fa8   0e09     MOVLW     0x9                                                                                             
000faa   cfdb     MOVFF     0xfdb,0xfef                                                                                     
000fac   ffef                                                                                                               
000fae   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fb0   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fb2   d949     RCALL     0x1246                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fb4   e195     BNZ       0xee0                                                                                           
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fb6   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fb8   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
000fba   d01d     BRA       0xff6                                                                                           
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fbc   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fbe   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000fc0   e106     BNZ       0xfce                                                                                           
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fc2   d9bf     RCALL     0x1342                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fc4   e318     BNC       0xff6                                                                                           
001342   0e05     MOVLW     0x5                                                                                             
001344   cfdb     MOVFF     0xfdb,0x0                                                                                       
001346   f000                                                                                                               
001348   0e15     MOVLW     0x15                                                                                            
00134a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00134c   80d8     BSF       0xd8,0x0,0x0                                                                                    
00134e   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001350   0012     RETURN    0x0                                                                                             
000fc6   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fc8   28db     INCF      0xdb,0x0,0x0                                                                                    
000fca   da59     RCALL     0x147e                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fcc   d014     BRA       0xff6                                  else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fce   0e78     MOVLW     0x78                                                                                            
000fd0   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fd2   e009     BZ        0xfe6                                                                                           
000fd4   0e58     MOVLW     0x58                                                                                            
000fd6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000fd8   e006     BZ        0xfe6                                                                                           
000fda   0e62     MOVLW     0x62                                                                                            
000fdc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000fde   e003     BZ        0xfe6                                                                                           
000fe0   0e42     MOVLW     0x42                                                                                            
000fe2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
000fe4   e108     BNZ       0xff6                                                                                           
000fe6   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000fe8   6ef3     MOVWF     0xf3,0x0                                                                                        
000fea   0e16     MOVLW     0x16                                                                                            
000fec   cff3     MOVFF     0xff3,0xfdb                                                                                     
000fee   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ff0   d002     BRA       0xff6                          else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ff2   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ff4   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ff6   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
000ff8   50db     MOVF      0xdb,0x0,0x0                                                                                    
000ffa   0b10     ANDLW     0x10                                                                                            
000ffe   0e04     MOVLW     0x4                                                                                             
001000   cfdb     MOVFF     0xfdb,0x0                                                                                       
001002   f000                                                                                                               
001004   0e05     MOVLW     0x5                                                                                             
001006   50db     MOVF      0xdb,0x0,0x0                                                                                    
001008   80d8     BSF       0xd8,0x0,0x0                                                                                    
00100a   5400     SUBFWB    0x0,0x0,0x0                                                                                     
000ffc   e00e     BZ        0x101a                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00100c   e206     BC        0x101a                                                                                          
00100e   0e06     MOVLW     0x6                                                                                             
001010   50db     MOVF      0xdb,0x0,0x0                                                                                    
001012   e103     BNZ       0x101a                                                                                          
001014   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001016   50db     MOVF      0xdb,0x0,0x0                                                                                    
001018   da32     RCALL     0x147e                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00101a   d993     RCALL     0x1342                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00101c   e20a     BC        0x1032                                                                                          
00101e   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001020   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001022   ffe7                                                                                                               
001024   0e15     MOVLW     0x15                                                                                            
001026   50db     MOVF      0xdb,0x0,0x0                                                                                    
001028   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
00102a   0e05     MOVLW     0x5                                                                                             
00102c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00102e   ffdb                                                                                                               
001030   d002     BRA       0x1036                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001032   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001034   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001036   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001038   cfdb     MOVFF     0xfdb,0x0                                                                                       
00103a   f000                                                                                                               
00103c   0e16     MOVLW     0x16                                                                                            
00103e   d943     RCALL     0x12c6                                                                                          
001040   80d8     BSF       0xd8,0x0,0x0                                                                                    
001042   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001044   e214     BC        0x106e                                                                                          
0012c6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012c8   ffe6                                                                                                               
0012ca   0e15     MOVLW     0x15                                                                                            
0012cc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012ce   ffe6                                                                                                               
0012d0   0e05     MOVLW     0x5                                                                                             
0012d2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012d6   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0012d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012da   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0012dc   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001046   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001048   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00104a   ffe6                                                                                                               
00104c   0e15     MOVLW     0x15                                                                                            
00104e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001050   ffe6                                                                                                               
001052   0e04     MOVLW     0x4                                                                                             
001054   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001056   ffe6                                                                                                               
001058   0e05     MOVLW     0x5                                                                                             
00105a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00105c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00105e   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001060   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001062   80d8     BSF       0xd8,0x0,0x0                                                                                    
001064   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001066   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001068   80d8     BSF       0xd8,0x0,0x0                                                                                    
00106a   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
00106c   d95d     RCALL     0x1328                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00106e   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001070   50db     MOVF      0xdb,0x0,0x0                                                                                    
001072   0b01     ANDLW     0x1                                                                                             
001074   e10b     BNZ       0x108c                                                                                          
001076   0e08     MOVLW     0x8                                                                                             
001078   50db     MOVF      0xdb,0x0,0x0                                                                                    
00107a   e008     BZ        0x108c                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00107c   d8b0     RCALL     0x11de                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00107e   e001     BZ        0x1082                                                                                          
001080   d08d     BRA       0x119c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001082   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001084   50db     MOVF      0xdb,0x0,0x0                                                                                    
001086   d8bc     RCALL     0x1200                                                                                          
001088   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00108a   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00108c   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00108e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001090   e007     BZ        0x10a0                                                                                          
001092   d986     RCALL     0x13a0                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001094   0e17     MOVLW     0x17                                                                                            
001096   d9ef     RCALL     0x1476                                                                                          
001098   e103     BNZ       0x10a0                                                                                          
00109a   1c01     COMF      0x1,0x0,0x0                                                                                     
00109c   e101     BNZ       0x10a0                                                                                          
00109e   d07e     BRA       0x119c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010a0   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010a2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0010a4   e016     BZ        0x10d2                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010a6   d97c     RCALL     0x13a0                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010a8   0e30     MOVLW     0x30                                                                                            
0010aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0010ac   d89d     RCALL     0x11e8                                                                                          
0010ae   e102     BNZ       0x10b4                                                                                          
0010b0   1c01     COMF      0x1,0x0,0x0                                                                                     
0010b2   e074     BZ        0x119c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010b4   d975     RCALL     0x13a0                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010b6   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0010b8   ffe6                                                                                                               
0010ba   ec30     CALL      0x5260,0x0                                                                                      
0010bc   f029                                                                                                               
0010be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0010c4   cff4     MOVFF     0xff4,0x1                                                                                       
0010c6   f001                                                                                                               
0010c8   0100     MOVLB     0x0                                                                                             
0010ca   1cf3     COMF      0xf3,0x0,0x0                                                                                    
0010cc   e102     BNZ       0x10d2                                                                                          
0010ce   1c01     COMF      0x1,0x0,0x0                                                                                     
0010d0   e065     BZ        0x119c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010d2   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010d4   cfdb     MOVFF     0xfdb,0x0                                                                                       
0010d6   f000                                                                                                               
0010d8   0e16     MOVLW     0x16                                                                                            
0010da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0010dc   80d8     BSF       0xd8,0x0,0x0                                                                                    
0010de   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0010e0   e209     BC        0x10f4                                                                                          
0010e2   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010e4   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0010e6   ffe7                                                                                                               
0010e8   0e16     MOVLW     0x16                                                                                            
0010ea   50db     MOVF      0xdb,0x0,0x0                                                                                    
0010ec   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0010ee   0e05     MOVLW     0x5                                                                                             
0010f0   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0010f2   ffdb                                                                                                               
0010f4   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0010f8   0e05     MOVLW     0x5                                                                                             
0010fa   d9c9     RCALL     0x148e                                                                                          
0010fc   e14f     BNZ       0x119c                                                                                          
001440   ec46     CALL      0x88c,0x0                                                                                       
001442   f004                                                                                                               
001444   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001446   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001448   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00144a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00144c   0900     IORLW     0x0                                                                                             
00144e   0012     RETURN    0x0                                                                                             
00148e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001490   ffe6                                                                                                               
001492   df86     RCALL     0x13a0                                                                                          
001494   ef20     GOTO      0x1440                                                                                          
001496   f00a                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0010fe   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001100   2adb     INCF      0xdb,0x1,0x0                                                                                    
001102   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001104   ffe9                                                                                                               
001106   0e3a     MOVLW     0x3a                                                                                            
001108   e301     BNC       0x110c                                                                                          
00110a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00110c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00110e   ffea                                                                                                               
001110   0e09     MOVLW     0x9                                                                                             
001112   cfef     MOVFF     0xfef,0xfdb                                                                                     
001114   ffdb                                                                                                               
001116   50db     MOVF      0xdb,0x0,0x0                                                                                    
001118   e00e     BZ        0x1136                                                                                          
001126   0e39     MOVLW     0x39                                                                                            
001128   2adb     INCF      0xdb,0x1,0x0                                                                                    
00112a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00112c   ffe9                                                                                                               
00112e   0e3a     MOVLW     0x3a                                                                                            
001130   e3ed     BNC       0x110c                                                                                          
001132   2adb     INCF      0xdb,0x1,0x0                                                                                    
001134   d7eb     BRA       0x110c                                                                                          
00111a   d942     RCALL     0x13a0                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00111c   0e09     MOVLW     0x9                                                                                             
00111e   d9ab     RCALL     0x1476                                                                                          
001120   e102     BNZ       0x1126                                                                                          
001122   1c01     COMF      0x1,0x0,0x0                                                                                     
001124   e03b     BZ        0x119c                                                                                          
001476   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001478   ffe6                                                                                                               
00147a   eff4     GOTO      0x11e8                                                                                          
00147c   f008                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001136   d853     RCALL     0x11de                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001138   e131     BNZ       0x119c                                                                                          
0011de   0e20     MOVLW     0x20                                                                                            
0011e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0011e2   0e08     MOVLW     0x8                                                                                             
0011e4   ef47     GOTO      0x148e                                                                                          
0011e6   f00a                                                                                                               
0013a0   0efc     MOVLW     0xfc                                                                                            
0013a2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013a4   ffe6                                                                                                               
0013a6   0efd     MOVLW     0xfd                                                                                            
0013a8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0013aa   ffe6                                                                                                               
0013ac   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00113a   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00113c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00113e   ffe6                                                                                                               
001140   0e08     MOVLW     0x8                                                                                             
001142   d8c1     RCALL     0x12c6                                                                                          
001144   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001146   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
001148   d85b     RCALL     0x1200                                                                                          
001200   6e00     MOVWF     0x0,0x0                                                                                         
001202   6a01     CLRF      0x1,0x0                                                                                         
001204   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001206   0f01     ADDLW     0x1                                                                                             
001208   d94d     RCALL     0x14a4                                                                                          
00120a   5000     MOVF      0x0,0x0,0x0                                                                                     
00120c   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00120e   5001     MOVF      0x1,0x0,0x0                                                                                     
001210   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
001212   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00114a   d02e     BRA       0x11a8                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00114c   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00114e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001150   0a03     XORLW     0x3                                                                                             
001152   e01c     BZ        0x118c                                                                                          
001154   0a01     XORLW     0x1                                                                                             
001156   e014     BZ        0x1180                                                                                          
001158   0a03     XORLW     0x3                                                                                             
00115a   e007     BZ        0x116a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00116a   d8f3     RCALL     0x1352                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00116c   6a05     CLRF      0x5,0x0                                                                                         
00116e   ae03     BTFSS     0x3,0x7,0x0                                                                                     
001170   d002     BRA       0x1176                                                                                          
001172   6804     SETF      0x4,0x0                                                                                         
001174   6805     SETF      0x5,0x0                                                                                         
001176   d82a     RCALL     0x11cc                                                                                          
001178   d8ba     RCALL     0x12ee                                                                                          
00117a   c005     MOVFF     0x5,0xfee                                                                                       
00117c   ffee                                                                                                               
0012ee   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012f0   cfef     MOVFF     0xfef,0xfea                                                                                     
0012f2   ffea                                                                                                               
0012f4   6ee9     MOVWF     0xe9,0x0                                                                                        
0012f6   c002     MOVFF     0x2,0xfee                                                                                       
0012f8   ffee                                                                                                               
0012fa   c003     MOVFF     0x3,0xfee                                                                                       
0012fc   ffee                                                                                                               
0012fe   c004     MOVFF     0x4,0xfee                                                                                       
001300   ffee                                                                                                               
001302   0012     RETURN    0x0                                                                                             
001352   0e01     MOVLW     0x1                                                                                             
001354   cfdb     MOVFF     0xfdb,0x2                                                                                       
001356   f002                                                                                                               
001358   0e02     MOVLW     0x2                                                                                             
00135a   cfdb     MOVFF     0xfdb,0x3                                                                                       
00135c   f003                                                                                                               
00135e   6a04     CLRF      0x4,0x0                                                                                         
001360   0012     RETURN    0x0                                                                                             
00117e   d014     BRA       0x11a8                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001180   d8e8     RCALL     0x1352                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001182   be03     BTFSC     0x3,0x7,0x0                                                                                     
001184   6804     SETF      0x4,0x0                                                                                         
001186   d822     RCALL     0x11cc                                                                                          
001188   d8b2     RCALL     0x12ee                                                                                          
00118a   d00e     BRA       0x11a8                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00118c   d961     RCALL     0x1450                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00118e   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001190   ffef                                                                                                               
001192   d00a     BRA       0x11a8                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00115c   d979     RCALL     0x1450                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00115e   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001160   ffee                                                                                                               
001162   0e02     MOVLW     0x2                                                                                             
001164   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001166   ffed                                                                                                               
001450   debd     RCALL     0x11cc                                                                                          
001452   50ee     MOVF      0xee,0x0,0x0                                                                                    
001454   cfef     MOVFF     0xfef,0xfea                                                                                     
001456   ffea                                                                                                               
001458   6ee9     MOVWF     0xe9,0x0                                                                                        
00145a   0e01     MOVLW     0x1                                                                                             
00145c   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001168   d01f     BRA       0x11a8                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001194   d979     RCALL     0x1488                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001196   e105     BNZ       0x11a2                                                                                          
001198   1c01     COMF      0x1,0x0,0x0                                                                                     
00119a   e103     BNZ       0x11a2                                                                                          
0011e8   ec30     CALL      0x5260,0x0                                                                                      
0011ea   f029                                                                                                               
0011ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011f2   cff3     MOVFF     0xff3,0x0                                                                                       
0011f4   f000                                                                                                               
0011f6   cff4     MOVFF     0xff4,0x1                                                                                       
0011f8   f001                                                                                                               
0011fa   0100     MOVLB     0x0                                                                                             
0011fc   1cf3     COMF      0xf3,0x0,0x0                                                                                    
0011fe   0012     RETURN    0x0                                                                                             
00142e   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
001430   ffe6                                                                                                               
001432   eff4     GOTO      0x11e8                                                                                          
001434   f008                                                                                                               
001488   df8b     RCALL     0x13a0                                                                                          
00148a   ef17     GOTO      0x142e                                                                                          
00148c   f00a                                                                                                               
00119c   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00119e   68f4     SETF      0xf4,0x0                                                                                        
0011a0   d010     BRA       0x11c2                                                                                          
0011a2   d8fa     RCALL     0x1398                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0011a4   e301     BNC       0x11a8                                                                                          
0011a6   2adb     INCF      0xdb,0x1,0x0                                                                                    
001398   0e01     MOVLW     0x1                                                                                             
00139a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00139c   0e02     MOVLW     0x2                                                                                             
00139e   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0011ae   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0011b0   cfdb     MOVFF     0xfdb,0x0                                                                                       
0011b2   f000                                                                                                               
0011b4   0e02     MOVLW     0x2                                                                                             
0011b6   cfdb     MOVFF     0xfdb,0x1                                                                                       
0011b8   f001                                                                                                               
0011ba   c000     MOVFF     0x0,0xff3                                                                                       
0011bc   fff3                                                                                                               
0011be   c001     MOVFF     0x1,0xff4                                                                                       
0011c0   fff4                                                                                                               
0011c2   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0011c4   ffe1                                                                                                               
0011c6   cfda     MOVFF     0xfda,0xfe2                                                                                     
0011c8   ffe2                                                                                                               
0011ca   d0cb     BRA       0x1362                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005564   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005566   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005568   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00556a   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00556c   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00556e   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005574   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005576   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005578   d004     BRA       0x5582                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00557a   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00557c   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00557e   d001     BRA       0x5582                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005560   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005562   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005570   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005572   d007     BRA       0x5582                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005580   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005582   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005260   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
005262   ffe6                                                                                                               
005264   cfda     MOVFF     0xfda,0xfe6                                                                                     
005266   ffe6                                                                                                               
005268   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00526a   ffd9                                                                                                               
00526c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00526e   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
005270   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005272   cfdb     MOVFF     0xfdb,0x0                                                                                       
005274   f000                                                                                                               
005276   0efc     MOVLW     0xfc                                                                                            
005278   cfdb     MOVFF     0xfdb,0x1                                                                                       
00527a   f001                                                                                                               
00527c   0100     MOVLB     0x0                                                                                             
00527e   0e80     MOVLW     0x80                                                                                            
005280   1401     ANDWF     0x1,0x0,0x0                                                                                     
005282   e11a     BNZ       0x52b8                                                                                          
005284   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005286   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005288   ffe9                                                                                                               
00528a   0efc     MOVLW     0xfc                                                                                            
00528c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00528e   ffea                                                                                                               
005290   cfee     MOVFF     0xfee,0xff3                                                                                     
005292   fff3                                                                                                               
005294   cfed     MOVFF     0xfed,0xff4                                                                                     
005296   fff4                                                                                                               
005298   2aee     INCF      0xee,0x1,0x0                                                                                    
00529a   0e00     MOVLW     0x0                                                                                             
00529c   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00529e   cff3     MOVFF     0xff3,0xfe9                                                                                     
0052a0   ffe9                                                                                                               
0052a2   cff4     MOVFF     0xff4,0xfea                                                                                     
0052a4   ffea                                                                                                               
0052a6   0efd     MOVLW     0xfd                                                                                            
0052a8   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0052aa   ffef                                                                                                               
0052ac   50ef     MOVF      0xef,0x0,0x0                                                                                    
0052ae   6a01     CLRF      0x1,0x0                                                                                         
0052b0   6ef3     MOVWF     0xf3,0x0                                                                                        
0052b2   c001     MOVFF     0x1,0xff4                                                                                       
0052b4   fff4                                                                                                               
0052b6   d010     BRA       0x52d8                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052b8   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052ba   50db     MOVF      0xdb,0x0,0x0                                                                                    
0052bc   08fe     SUBLW     0xfe                                                                                            
0052be   e106     BNZ       0x52cc                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052c0   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052c2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0052c4   ffe6                                                                                                               
0052c6   ece2     CALL      0x55c4,0x0                                                                                      
0052c8   f02a                                                                                                               
0052ca   d005     BRA       0x52d6                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052cc   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052ce   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0052d0   ffe6                                                                                                               
0052d2   ecac     CALL      0x4958,0x0                                                                                      
0052d4   f024                                                                                                               
0052d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052d8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052da   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0052dc   ffda                                                                                                               
0052de   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0052e0   ffd9                                                                                                               
0052e2   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055c4   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055c6   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055c8   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055ca   d004     BRA       0x55d4                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055cc   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055ce   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055d0   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055d2   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055d4   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055d6   d7fe     BRA       0x55d4                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055d8   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055da   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055dc   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0055de   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005182   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005184   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005186   fff8                                                                                                               
005188   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00518a   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00518c   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00518e   fff7                                                                                                               
005190   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005192   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005194   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005196   fff6                                                                                                               
005198   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051b8   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051ba   cfe3     MOVFF     0xfe3,0x34               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051bc   f034                                                                                                               
0051be   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051c0   cfe3     MOVFF     0xfe3,0x35               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051c2   f035                                                                                                               
0051c4   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051c6   cfe3     MOVFF     0xfe3,0x36               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051c8   f036                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051a6   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051a8   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051aa   e105     BNZ       0x51b6                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051ac   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051ae   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051b0   e102     BNZ       0x51b6                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051b2   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0051b4   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00519a   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00519c   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00519e   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0051a0   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0051a2   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0051a4   e009     BZ        0x51b8                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0051b6   d7f4     BRA       0x51a0                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0051ca   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
